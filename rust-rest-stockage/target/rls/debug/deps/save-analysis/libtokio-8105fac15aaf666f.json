{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21","program":"/home/alexis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=8105fac15aaf666f","-C","extra-filename=-8105fac15aaf666f","--out-dir","/home/alexis/Documents/rust-rest-example/target/rls/debug/deps","-L","dependency=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps","--extern","bytes=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libbytes-025428103b6a381d.rmeta","--extern","futures_core=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libfutures_core-71a42285013c2db7.rmeta","--extern","iovec=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libiovec-9d0f55c08230c7ee.rmeta","--extern","lazy_static=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/liblazy_static-9fbe2dfcbc5171f1.rmeta","--extern","libc=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/liblibc-9617a8e57d306f8b.rmeta","--extern","memchr=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libmemchr-850743900cba42c0.rmeta","--extern","mio=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libmio-de1b23db367bf958.rmeta","--extern","mio_uds=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libmio_uds-c7064c25112e7a14.rmeta","--extern","pin_project_lite=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libpin_project_lite-a5c8c1c2fe67881e.rmeta","--extern","signal_hook_registry=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libsignal_hook_registry-75dc428241a762fa.rmeta","--extern","slab=/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libslab-bf3d563de4122063.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/alexis/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/alexis/Documents/rust-rest-example/target/rls/debug/deps/libtokio-8105fac15aaf666f.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[15952472573946731899,10112306903843808077]},"crate_root":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src","external_crates":[{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/try_join.rs","num":18,"id":{"name":"pin_project_lite","disambiguator":[4758088458148810821,8977201714919383595]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","num":19,"id":{"name":"bytes","disambiguator":[8810174260633413986,12848776829228650956]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","num":20,"id":{"name":"futures_core","disambiguator":[16480933881988164575,4240990412214379995]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":21,"id":{"name":"mio","disambiguator":[4664803606839099309,6654420001890843583]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":22,"id":{"name":"net2","disambiguator":[18246974268608005466,4316463764745660297]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","num":23,"id":{"name":"libc","disambiguator":[14099177869234008046,16916733758380216407]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":24,"id":{"name":"cfg_if","disambiguator":[12588306261731180776,640031727072142967]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","num":25,"id":{"name":"iovec","disambiguator":[14851066178770637183,6546324237239459084]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","num":26,"id":{"name":"slab","disambiguator":[12642860949660614683,15184131537244341750]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/platform.rs","num":27,"id":{"name":"log","disambiguator":[2706926675737045239,12133890160046868124]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","num":28,"id":{"name":"lazy_static","disambiguator":[10582890326764300823,12078812139612991752]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","num":29,"id":{"name":"mio_uds","disambiguator":[11802414980587195562,7730948099878587959]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","num":30,"id":{"name":"memchr","disambiguator":[8636704286318405407,14736210162595724347]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","num":31,"id":{"name":"signal_hook_registry","disambiguator":[9313388957633120480,18083847716128223537]}},{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","num":32,"id":{"name":"arc_swap","disambiguator":[2638534407719577508,2261488794357800210]}}],"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":0,"byte_end":15787,"line_start":1,"line_end":435,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9053},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30590,"byte_end":30596,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":2,"index":31876},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30616,"byte_end":30619,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":2,"index":34387},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":30640,"byte_end":30644,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30748,"byte_end":30758,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":865},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30760,"byte_end":30769,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":116},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30803,"byte_end":30810,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43448,"byte_end":43460,"line_start":162,"line_end":162,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43505,"byte_end":43514,"line_start":165,"line_end":165,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":244},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43559,"byte_end":43568,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43615,"byte_end":43625,"line_start":171,"line_end":171,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1168},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43721,"byte_end":43732,"line_start":177,"line_end":177,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1172},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43783,"byte_end":43795,"line_start":180,"line_end":180,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1297},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44027,"byte_end":44032,"line_start":196,"line_end":196,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44034,"byte_end":44042,"line_start":196,"line_end":196,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1294},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44044,"byte_end":44053,"line_start":196,"line_end":196,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44106,"byte_end":44110,"line_start":199,"line_end":199,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2042},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44166,"byte_end":44170,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2065},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44172,"byte_end":44177,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2227},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44179,"byte_end":44185,"line_start":203,"line_end":203,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44187,"byte_end":44191,"line_start":203,"line_end":203,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44193,"byte_end":44208,"line_start":203,"line_end":203,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1976},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44210,"byte_end":44222,"line_start":203,"line_end":203,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44224,"byte_end":44236,"line_start":203,"line_end":203,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44238,"byte_end":44251,"line_start":203,"line_end":203,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8777},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44261,"byte_end":44270,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8763},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44272,"byte_end":44281,"line_start":204,"line_end":204,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8700},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44283,"byte_end":44292,"line_start":204,"line_end":204,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2047},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44294,"byte_end":44298,"line_start":204,"line_end":204,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44300,"byte_end":44305,"line_start":204,"line_end":204,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8628},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44307,"byte_end":44312,"line_start":204,"line_end":204,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2228},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44314,"byte_end":44320,"line_start":204,"line_end":204,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2240},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44322,"byte_end":44326,"line_start":204,"line_end":204,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8154},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44328,"byte_end":44333,"line_start":204,"line_end":204,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44335,"byte_end":44339,"line_start":204,"line_end":204,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":2258},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44390,"byte_end":44403,"line_start":208,"line_end":208,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":8108},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44405,"byte_end":44417,"line_start":208,"line_end":208,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":1,"index":2659},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44572,"byte_end":44577,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":1,"index":7047},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44579,"byte_end":44588,"line_start":213,"line_end":213,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":1,"index":2657},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":44590,"byte_end":44596,"line_start":213,"line_end":213,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":175}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70822,"byte_end":70835,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":2657},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708709,"byte_end":8708717,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2391}},{"kind":"Use","ref_id":{"krate":0,"index":2663},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708747,"byte_end":8708755,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2391}},{"kind":"Use","ref_id":{"krate":0,"index":2670},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708757,"byte_end":8708766,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2391}},{"kind":"Use","ref_id":{"krate":0,"index":2677},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708809,"byte_end":8708822,"line_start":13,"line_end":13,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2391}},{"kind":"Use","ref_id":{"krate":0,"index":2681},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708824,"byte_end":8708838,"line_start":13,"line_end":13,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2391}},{"kind":"Use","ref_id":{"krate":0,"index":2686},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708840,"byte_end":8708852,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2391}},{"kind":"Use","ref_id":{"krate":0,"index":2687},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708840,"byte_end":8708852,"line_start":13,"line_end":13,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2548}},{"kind":"Use","ref_id":{"krate":0,"index":2655},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70966,"byte_end":70977,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":2692},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71004,"byte_end":71013,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":2828},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8766958,"byte_end":8766966,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2694}},{"kind":"Use","ref_id":{"krate":0,"index":2833},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8766968,"byte_end":8766980,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2694}},{"kind":"Use","ref_id":{"krate":0,"index":2834},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8766968,"byte_end":8766980,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2818}},{"kind":"Use","ref_id":{"krate":0,"index":2823},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8766982,"byte_end":8766990,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2694}},{"kind":"Use","ref_id":{"krate":0,"index":2821},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71071,"byte_end":71080,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3084},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8787986,"byte_end":8787994,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2839}},{"kind":"Use","ref_id":{"krate":0,"index":3092},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8788089,"byte_end":8788097,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2839}},{"kind":"Use","ref_id":{"krate":0,"index":3099},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8788099,"byte_end":8788108,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2839}},{"kind":"Use","ref_id":{"krate":0,"index":3108},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8788197,"byte_end":8788202,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":2839}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71142,"byte_end":71154,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3090},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71184,"byte_end":71196,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":3106},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71224,"byte_end":71234,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":306}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103283,"byte_end":103285,"line_start":16,"line_end":16,"column_start":16,"column_end":18},"alias_span":null,"name":"io","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103294,"byte_end":103306,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":213},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103308,"byte_end":103317,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103319,"byte_end":103329,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":1968},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103394,"byte_end":103409,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":1976},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103416,"byte_end":103428,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103435,"byte_end":103447,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":2012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103454,"byte_end":103467,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":null,"name":"_","value":"","parent":{"krate":0,"index":549}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110998,"byte_end":111005,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":555}},{"kind":"Use","ref_id":{"krate":0,"index":3860},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111090,"byte_end":111096,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":555}},{"kind":"Use","ref_id":{"krate":0,"index":653},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111098,"byte_end":111113,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":555}},{"kind":"Use","ref_id":{"krate":0,"index":3942},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886483,"byte_end":8886489,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":3937}},{"kind":"Use","ref_id":{"krate":0,"index":4196},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923418,"byte_end":8923428,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923458,"byte_end":8923463,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4728},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923465,"byte_end":8923470,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4389},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923636,"byte_end":8923640,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4735},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923642,"byte_end":8923646,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4479},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923756,"byte_end":8923760,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4749},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923762,"byte_end":8923766,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4502},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923801,"byte_end":8923808,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4755},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923810,"byte_end":8923817,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":4762},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923857,"byte_end":8923866,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":20,"index":68},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924158,"byte_end":8924164,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":4118}},{"kind":"Use","ref_id":{"krate":0,"index":3779},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190516,"byte_end":9190525,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":3781},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190527,"byte_end":9190537,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":5721},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190575,"byte_end":9190580,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":5723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190625,"byte_end":9190634,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":5883},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190689,"byte_end":9190700,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":5874},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190702,"byte_end":9190710,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":5826},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190758,"byte_end":9190766,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":5704}},{"kind":"Use","ref_id":{"krate":0,"index":5721},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14522,"byte_end":14527,"line_start":388,"line_end":388,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6383},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223074,"byte_end":9223084,"line_start":69,"line_end":69,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5989},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223114,"byte_end":9223123,"line_start":72,"line_end":72,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":5988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223125,"byte_end":9223136,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6425},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223138,"byte_end":9223143,"line_start":72,"line_end":72,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6482},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223197,"byte_end":9223202,"line_start":77,"line_end":77,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6494},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223241,"byte_end":9223248,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6241},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223284,"byte_end":9223292,"line_start":83,"line_end":83,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223294,"byte_end":9223305,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6517},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223307,"byte_end":9223315,"line_start":83,"line_end":83,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6268},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223365,"byte_end":9223372,"line_start":87,"line_end":87,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6270},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223374,"byte_end":9223384,"line_start":87,"line_end":87,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6529},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223386,"byte_end":9223393,"line_start":87,"line_end":87,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6522},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223395,"byte_end":9223402,"line_start":87,"line_end":87,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6551},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223461,"byte_end":9223469,"line_start":91,"line_end":91,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":0,"index":6882},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223471,"byte_end":9223479,"line_start":91,"line_end":91,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":5898}},{"kind":"Use","ref_id":{"krate":2,"index":34257},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223588,"byte_end":9223596,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":5898}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":0,"byte_end":15787,"line_start":1,"line_end":435,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":81},{"krate":0,"index":175},{"krate":0,"index":306},{"krate":0,"index":366},{"krate":0,"index":502},{"krate":0,"index":549},{"krate":0,"index":555},{"krate":0,"index":728},{"krate":0,"index":3937},{"krate":0,"index":4118},{"krate":0,"index":4807},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5898},{"krate":0,"index":747}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/ A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":477,"byte_end":549,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":550,"byte_end":553,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":554,"byte_end":634,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":635,"byte_end":707,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":708,"byte_end":744,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":745,"byte_end":748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":749,"byte_end":816,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":817,"byte_end":897,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":898,"byte_end":921,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":922,"byte_end":1009,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1010,"byte_end":1083,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1084,"byte_end":1162,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1163,"byte_end":1243,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1244,"byte_end":1294,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1295,"byte_end":1298,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1299,"byte_end":1355,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1356,"byte_end":1359,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1360,"byte_end":1392,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1393,"byte_end":1416,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1417,"byte_end":1440,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1441,"byte_end":1467,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1468,"byte_end":1489,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1490,"byte_end":1509,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1510,"byte_end":1539,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1540,"byte_end":1567,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1568,"byte_end":1587,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1588,"byte_end":1617,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1618,"byte_end":1664,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1665,"byte_end":1668,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1669,"byte_end":1690,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1691,"byte_end":1694,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1695,"byte_end":1774,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1775,"byte_end":1848,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1849,"byte_end":1928,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1929,"byte_end":1944,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":1949,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2022,"byte_end":2059,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2060,"byte_end":2063,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2064,"byte_end":2075,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2076,"byte_end":2128,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2129,"byte_end":2136,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2137,"byte_end":2140,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2141,"byte_end":2161,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2162,"byte_end":2165,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2166,"byte_end":2247,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2248,"byte_end":2326,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2327,"byte_end":2407,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2408,"byte_end":2485,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2486,"byte_end":2569,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2570,"byte_end":2647,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2648,"byte_end":2735,"line_start":71,"line_end":71,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2736,"byte_end":2817,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2818,"byte_end":2827,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2828,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2832,"byte_end":2897,"line_start":75,"line_end":75,"column_start":1,"column_end":66}},{"value":"/ - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2898,"byte_end":2980,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"/ - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":2981,"byte_end":3063,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3064,"byte_end":3113,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3114,"byte_end":3167,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3168,"byte_end":3219,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3220,"byte_end":3280,"line_start":81,"line_end":81,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3281,"byte_end":3371,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"/ - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3372,"byte_end":3421,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3422,"byte_end":3471,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3472,"byte_end":3522,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3523,"byte_end":3600,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ the built in timer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3601,"byte_end":3624,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3625,"byte_end":3673,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3674,"byte_end":3743,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3744,"byte_end":3790,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/ - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3791,"byte_end":3872,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3873,"byte_end":3923,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3924,"byte_end":3962,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/ - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":3963,"byte_end":4018,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4019,"byte_end":4097,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"/ - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4098,"byte_end":4162,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4163,"byte_end":4166,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4167,"byte_end":4249,"line_start":98,"line_end":98,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4250,"byte_end":4272,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4277,"byte_end":4302,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4303,"byte_end":4306,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4307,"byte_end":4375,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4376,"byte_end":4439,"line_start":104,"line_end":104,"column_start":1,"column_end":64}},{"value":"/ dependencies. They are not included in `full`:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4440,"byte_end":4490,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4491,"byte_end":4494,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4495,"byte_end":4574,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4575,"byte_end":4652,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4653,"byte_end":4686,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4687,"byte_end":4690,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4691,"byte_end":4788,"line_start":111,"line_end":111,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4789,"byte_end":4792,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4793,"byte_end":4823,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4824,"byte_end":4827,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4828,"byte_end":4909,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4910,"byte_end":4995,"line_start":116,"line_end":116,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":4996,"byte_end":5080,"line_start":117,"line_end":117,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5081,"byte_end":5111,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5112,"byte_end":5115,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5116,"byte_end":5132,"line_start":120,"line_end":120,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5133,"byte_end":5136,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5137,"byte_end":5203,"line_start":122,"line_end":122,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5204,"byte_end":5207,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5208,"byte_end":5219,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5220,"byte_end":5272,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5273,"byte_end":5280,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5281,"byte_end":5284,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5285,"byte_end":5312,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5313,"byte_end":5316,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5317,"byte_end":5396,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5397,"byte_end":5479,"line_start":131,"line_end":131,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5480,"byte_end":5561,"line_start":132,"line_end":132,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5562,"byte_end":5597,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5598,"byte_end":5601,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5602,"byte_end":5618,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5619,"byte_end":5622,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5623,"byte_end":5705,"line_start":137,"line_end":137,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5706,"byte_end":5756,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5757,"byte_end":5760,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5761,"byte_end":5772,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5773,"byte_end":5835,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5836,"byte_end":5843,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5844,"byte_end":5847,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5848,"byte_end":5873,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5874,"byte_end":5877,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5878,"byte_end":5954,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":5955,"byte_end":6038,"line_start":147,"line_end":147,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6039,"byte_end":6082,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6087,"byte_end":6166,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6167,"byte_end":6250,"line_start":151,"line_end":151,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6251,"byte_end":6329,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6330,"byte_end":6349,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6350,"byte_end":6353,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6354,"byte_end":6432,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ is enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6433,"byte_end":6448,"line_start":156,"line_end":156,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6449,"byte_end":6452,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6453,"byte_end":6496,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6497,"byte_end":6529,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6530,"byte_end":6565,"line_start":160,"line_end":160,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6566,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6610,"byte_end":6663,"line_start":162,"line_end":162,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6664,"byte_end":6667,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6668,"byte_end":6746,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6747,"byte_end":6803,"line_start":165,"line_end":165,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6804,"byte_end":6807,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6808,"byte_end":6881,"line_start":167,"line_end":167,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6882,"byte_end":6902,"line_start":168,"line_end":168,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6903,"byte_end":6978,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6979,"byte_end":6991,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":6992,"byte_end":7072,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7073,"byte_end":7103,"line_start":172,"line_end":172,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7104,"byte_end":7107,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7108,"byte_end":7184,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7185,"byte_end":7197,"line_start":175,"line_end":175,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7198,"byte_end":7201,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7202,"byte_end":7234,"line_start":177,"line_end":177,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7235,"byte_end":7268,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7269,"byte_end":7306,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7307,"byte_end":7344,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7345,"byte_end":7376,"line_start":181,"line_end":181,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7377,"byte_end":7410,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7411,"byte_end":7414,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7415,"byte_end":7486,"line_start":184,"line_end":184,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7487,"byte_end":7567,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7568,"byte_end":7656,"line_start":186,"line_end":186,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7657,"byte_end":7681,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7682,"byte_end":7685,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7686,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7766,"byte_end":7798,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"/ [delay]: crate::time::delay_for()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7799,"byte_end":7836,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7837,"byte_end":7876,"line_start":193,"line_end":193,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7877,"byte_end":7914,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7915,"byte_end":7918,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7919,"byte_end":7997,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":7998,"byte_end":8082,"line_start":197,"line_end":197,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8083,"byte_end":8155,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"/ required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8156,"byte_end":8233,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ managing runtimes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8234,"byte_end":8256,"line_start":200,"line_end":200,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8257,"byte_end":8260,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8261,"byte_end":8340,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"/ enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8341,"byte_end":8419,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"/ scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8420,"byte_end":8488,"line_start":204,"line_end":204,"column_start":1,"column_end":69}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8489,"byte_end":8567,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8568,"byte_end":8638,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8639,"byte_end":8642,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8643,"byte_end":8669,"line_start":208,"line_end":208,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8670,"byte_end":8708,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8709,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"/ [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8791,"byte_end":8840,"line_start":212,"line_end":212,"column_start":1,"column_end":50}},{"value":"/ [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8841,"byte_end":8897,"line_start":213,"line_end":213,"column_start":1,"column_end":57}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8898,"byte_end":8953,"line_start":214,"line_end":214,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8954,"byte_end":8957,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8958,"byte_end":8998,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":8999,"byte_end":9002,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9003,"byte_end":9082,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9083,"byte_end":9160,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9161,"byte_end":9241,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9242,"byte_end":9316,"line_start":221,"line_end":221,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9317,"byte_end":9396,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9397,"byte_end":9474,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9475,"byte_end":9548,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, and can be used to run blocking code that would otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9549,"byte_end":9629,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"/ block other tasks from running. Since it is not possible for Tokio to swap","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9630,"byte_end":9708,"line_start":226,"line_end":226,"column_start":1,"column_end":79}},{"value":"/ out blocking tasks, like it can do with asynchronous code, the upper limit","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9709,"byte_end":9787,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ on the number of blocking threads is very large. These limits can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9788,"byte_end":9860,"line_start":228,"line_end":228,"column_start":1,"column_end":73}},{"value":"/ configured on the [`Builder`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9861,"byte_end":9895,"line_start":229,"line_end":229,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9896,"byte_end":9899,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Two spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9900,"byte_end":9978,"line_start":231,"line_end":231,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9979,"byte_end":9982,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":9983,"byte_end":10023,"line_start":233,"line_end":233,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10024,"byte_end":10077,"line_start":234,"line_end":234,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10078,"byte_end":10081,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10082,"byte_end":10089,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10090,"byte_end":10108,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10109,"byte_end":10130,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10131,"byte_end":10175,"line_start":239,"line_end":239,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10176,"byte_end":10179,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10180,"byte_end":10240,"line_start":241,"line_end":241,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10241,"byte_end":10293,"line_start":242,"line_end":242,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10294,"byte_end":10329,"line_start":243,"line_end":243,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10330,"byte_end":10341,"line_start":244,"line_end":244,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10342,"byte_end":10345,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10346,"byte_end":10401,"line_start":246,"line_end":246,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10402,"byte_end":10477,"line_start":247,"line_end":247,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10478,"byte_end":10495,"line_start":248,"line_end":248,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10496,"byte_end":10533,"line_start":249,"line_end":249,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10534,"byte_end":10539,"line_start":250,"line_end":250,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10540,"byte_end":10547,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10548,"byte_end":10551,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10552,"byte_end":10630,"line_start":253,"line_end":253,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10631,"byte_end":10707,"line_start":254,"line_end":254,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10708,"byte_end":10784,"line_start":255,"line_end":255,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10785,"byte_end":10809,"line_start":256,"line_end":256,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10810,"byte_end":10813,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10814,"byte_end":10848,"line_start":258,"line_end":258,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10849,"byte_end":10886,"line_start":259,"line_end":259,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10887,"byte_end":10890,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10891,"byte_end":10913,"line_start":261,"line_end":261,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10914,"byte_end":10917,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10918,"byte_end":10997,"line_start":263,"line_end":263,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":10998,"byte_end":11045,"line_start":264,"line_end":264,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11046,"byte_end":11049,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11050,"byte_end":11129,"line_start":266,"line_end":266,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11130,"byte_end":11210,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11211,"byte_end":11291,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11292,"byte_end":11363,"line_start":269,"line_end":269,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11364,"byte_end":11444,"line_start":270,"line_end":270,"column_start":1,"column_end":81}},{"value":"/ also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11445,"byte_end":11520,"line_start":271,"line_end":271,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11521,"byte_end":11524,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11525,"byte_end":11605,"line_start":273,"line_end":273,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11606,"byte_end":11666,"line_start":274,"line_end":274,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11667,"byte_end":11670,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11671,"byte_end":11750,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11751,"byte_end":11820,"line_start":277,"line_end":277,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11821,"byte_end":11898,"line_start":278,"line_end":278,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11899,"byte_end":11955,"line_start":279,"line_end":279,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":11956,"byte_end":12036,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12037,"byte_end":12082,"line_start":281,"line_end":281,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12083,"byte_end":12162,"line_start":282,"line_end":282,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12163,"byte_end":12197,"line_start":283,"line_end":283,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12198,"byte_end":12201,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12202,"byte_end":12230,"line_start":285,"line_end":285,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12231,"byte_end":12270,"line_start":286,"line_end":286,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12271,"byte_end":12312,"line_start":287,"line_end":287,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12313,"byte_end":12358,"line_start":288,"line_end":288,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12359,"byte_end":12383,"line_start":289,"line_end":289,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12384,"byte_end":12414,"line_start":290,"line_end":290,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12415,"byte_end":12441,"line_start":291,"line_end":291,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::udp","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12442,"byte_end":12468,"line_start":292,"line_end":292,"column_start":1,"column_end":27}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12469,"byte_end":12496,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12497,"byte_end":12525,"line_start":294,"line_end":294,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12526,"byte_end":12550,"line_start":295,"line_end":295,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12551,"byte_end":12587,"line_start":296,"line_end":296,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12588,"byte_end":12626,"line_start":297,"line_end":297,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12627,"byte_end":12630,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12631,"byte_end":12645,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12646,"byte_end":12649,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12650,"byte_end":12679,"line_start":301,"line_end":301,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12680,"byte_end":12683,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12684,"byte_end":12697,"line_start":303,"line_end":303,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12698,"byte_end":12730,"line_start":304,"line_end":304,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12731,"byte_end":12757,"line_start":305,"line_end":305,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12758,"byte_end":12761,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12762,"byte_end":12780,"line_start":307,"line_end":307,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12781,"byte_end":12844,"line_start":308,"line_end":308,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12845,"byte_end":12915,"line_start":309,"line_end":309,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12916,"byte_end":12919,"line_start":310,"line_end":310,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12920,"byte_end":12934,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12935,"byte_end":12994,"line_start":312,"line_end":312,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":12999,"byte_end":13036,"line_start":314,"line_end":314,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13037,"byte_end":13077,"line_start":315,"line_end":315,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13078,"byte_end":13081,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13082,"byte_end":13162,"line_start":317,"line_end":317,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13163,"byte_end":13185,"line_start":318,"line_end":318,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13186,"byte_end":13249,"line_start":319,"line_end":319,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13250,"byte_end":13290,"line_start":320,"line_end":320,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13291,"byte_end":13341,"line_start":321,"line_end":321,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13342,"byte_end":13377,"line_start":322,"line_end":322,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13378,"byte_end":13413,"line_start":323,"line_end":323,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13414,"byte_end":13497,"line_start":324,"line_end":324,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13498,"byte_end":13533,"line_start":325,"line_end":325,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13534,"byte_end":13559,"line_start":326,"line_end":326,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13560,"byte_end":13582,"line_start":327,"line_end":327,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13583,"byte_end":13586,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13587,"byte_end":13629,"line_start":329,"line_end":329,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13630,"byte_end":13702,"line_start":330,"line_end":330,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13703,"byte_end":13781,"line_start":331,"line_end":331,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13782,"byte_end":13813,"line_start":332,"line_end":332,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13814,"byte_end":13835,"line_start":333,"line_end":333,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13836,"byte_end":13853,"line_start":334,"line_end":334,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13854,"byte_end":13869,"line_start":335,"line_end":335,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13870,"byte_end":13879,"line_start":336,"line_end":336,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13880,"byte_end":13885,"line_start":337,"line_end":337,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":13886,"byte_end":13893,"line_start":338,"line_end":338,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":77}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14082,"byte_end":14094,"line_start":344,"line_end":344,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","byte_start":15824,"byte_end":15844,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":174}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30647,"byte_end":30683,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Asynchronous values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/mod.rs","byte_start":30685,"byte_end":30709,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":867},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31174,"byte_end":31180,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31139,"byte_end":31169,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":870},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31234,"byte_end":31238,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31191,"byte_end":31229,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":873},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31400,"byte_end":31404,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":865},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31257,"byte_end":31323,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31328,"byte_end":31395,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":865},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31110,"byte_end":31119,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31046,"byte_end":31083,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":91},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31567,"byte_end":31577,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31522,"byte_end":31559,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31980,"byte_end":31990,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31696,"byte_end":31781,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31786,"byte_end":31857,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31862,"byte_end":31935,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31940,"byte_end":31968,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32368,"byte_end":32379,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32247,"byte_end":32314,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32319,"byte_end":32342,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32347,"byte_end":32356,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33591,"byte_end":33597,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":113}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33539,"byte_end":33579,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":116},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33727,"byte_end":33734,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33648,"byte_end":33719,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34505,"byte_end":34510,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34270,"byte_end":34317,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34318,"byte_end":34321,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34322,"byte_end":34399,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34468,"byte_end":34493,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":305},{"krate":0,"index":960},{"krate":0,"index":1056},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1141},{"krate":0,"index":1177},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37265,"byte_end":37342,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37343,"byte_end":37346,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37347,"byte_end":37418,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37419,"byte_end":37499,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37500,"byte_end":37574,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37575,"byte_end":37578,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37579,"byte_end":37609,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37610,"byte_end":37613,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37614,"byte_end":37694,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37695,"byte_end":37772,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37773,"byte_end":37850,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37851,"byte_end":37931,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":37932,"byte_end":38010,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38011,"byte_end":38076,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38077,"byte_end":38080,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that [`AsyncRead`] and [`AsyncWrite`] only contain","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38081,"byte_end":38157,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38158,"byte_end":38225,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38226,"byte_end":38305,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38306,"byte_end":38380,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement [`AsyncRead`] and [`AsyncWrite`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38381,"byte_end":38459,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ respectively.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38460,"byte_end":38477,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38478,"byte_end":38481,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with [`AsyncRead`] and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38482,"byte_end":38548,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWrite`]. Instead, they will use the async functions defined in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38549,"byte_end":38626,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ extension traits. Library authors are expected to implement [`AsyncRead`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38627,"byte_end":38704,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ and [`AsyncWrite`] in order to provide types that behave like byte streams.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38705,"byte_end":38784,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38785,"byte_end":38788,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's [`AsyncRead`] and [`AsyncWrite`] traits","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38789,"byte_end":38869,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38870,"byte_end":38945,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":38946,"byte_end":39026,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39027,"byte_end":39098,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39099,"byte_end":39168,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39169,"byte_end":39172,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39173,"byte_end":39245,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39246,"byte_end":39326,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39327,"byte_end":39380,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39381,"byte_end":39384,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39385,"byte_end":39398,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39399,"byte_end":39439,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39440,"byte_end":39464,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39465,"byte_end":39468,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39469,"byte_end":39487,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39488,"byte_end":39527,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39528,"byte_end":39577,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39578,"byte_end":39611,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39612,"byte_end":39615,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39616,"byte_end":39646,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39647,"byte_end":39690,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39691,"byte_end":39694,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39695,"byte_end":39745,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39746,"byte_end":39760,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39761,"byte_end":39766,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39767,"byte_end":39774,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39775,"byte_end":39778,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39779,"byte_end":39808,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39809,"byte_end":39849,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39850,"byte_end":39886,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: https://doc.rust-lang.org/std/io/index.html#read-and-write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39887,"byte_end":39964,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39965,"byte_end":39968,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":39969,"byte_end":40004,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40005,"byte_end":40008,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40009,"byte_end":40090,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40091,"byte_end":40165,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40166,"byte_end":40244,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40245,"byte_end":40289,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40290,"byte_end":40293,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40294,"byte_end":40364,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40365,"byte_end":40443,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40444,"byte_end":40522,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40523,"byte_end":40600,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40601,"byte_end":40604,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40605,"byte_end":40680,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40681,"byte_end":40719,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40720,"byte_end":40723,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40724,"byte_end":40737,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40738,"byte_end":40792,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40793,"byte_end":40817,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40818,"byte_end":40821,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40822,"byte_end":40840,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40841,"byte_end":40880,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40881,"byte_end":40926,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40927,"byte_end":40970,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":40971,"byte_end":41010,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41011,"byte_end":41014,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41015,"byte_end":41049,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41050,"byte_end":41095,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41096,"byte_end":41099,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41100,"byte_end":41131,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41132,"byte_end":41146,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41147,"byte_end":41152,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41153,"byte_end":41160,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41161,"byte_end":41164,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41165,"byte_end":41246,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write):","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41247,"byte_end":41297,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41298,"byte_end":41301,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41302,"byte_end":41315,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41316,"byte_end":41368,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41369,"byte_end":41393,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41394,"byte_end":41397,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41398,"byte_end":41416,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41417,"byte_end":41456,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41457,"byte_end":41504,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41505,"byte_end":41514,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41515,"byte_end":41562,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41563,"byte_end":41566,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/         // write a byte to the buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41567,"byte_end":41608,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41609,"byte_end":41650,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41651,"byte_end":41654,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41655,"byte_end":41719,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41720,"byte_end":41723,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41724,"byte_end":41738,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41739,"byte_end":41744,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41745,"byte_end":41752,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41753,"byte_end":41756,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: https://doc.rust-lang.org/std/io/index.html#bufreader-and-bufwriter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41757,"byte_end":41838,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41839,"byte_end":41881,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41882,"byte_end":41927,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41928,"byte_end":41967,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":41968,"byte_end":42007,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42008,"byte_end":42011,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42012,"byte_end":42056,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42057,"byte_end":42060,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement `AsyncRead` and `AsyncWrite` for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42061,"byte_end":42139,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42140,"byte_end":42219,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42220,"byte_end":42294,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42295,"byte_end":42368,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42369,"byte_end":42429,"line_start":129,"line_end":129,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42430,"byte_end":42433,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42434,"byte_end":42465,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42466,"byte_end":42469,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42470,"byte_end":42550,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42551,"byte_end":42627,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42628,"byte_end":42675,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42676,"byte_end":42679,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42680,"byte_end":42753,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42754,"byte_end":42830,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42831,"byte_end":42907,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42908,"byte_end":42911,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42912,"byte_end":42933,"line_start":141,"line_end":141,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42934,"byte_end":42957,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42958,"byte_end":42980,"line_start":143,"line_end":143,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42981,"byte_end":42984,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":42985,"byte_end":43007,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43008,"byte_end":43011,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43012,"byte_end":43086,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ from `std::io` for ease of use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43087,"byte_end":43122,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43123,"byte_end":43126,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43127,"byte_end":43161,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43162,"byte_end":43198,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43199,"byte_end":43226,"line_start":152,"line_end":152,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43227,"byte_end":43260,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43261,"byte_end":43288,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43289,"byte_end":43316,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/mod.rs","byte_start":43317,"byte_end":43346,"line_start":156,"line_end":156,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":184},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45517,"byte_end":45529,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45045,"byte_end":45076,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45077,"byte_end":45080,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait inherits from [`std::io::BufRead`] and indicates that an I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45081,"byte_end":45166,"line_start":10,"line_end":10,"column_start":1,"column_end":86}},{"value":"/ **non-blocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45167,"byte_end":45243,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ bytes are unavailable instead of blocking the current thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45244,"byte_end":45309,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45310,"byte_end":45313,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45314,"byte_end":45382,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45383,"byte_end":45407,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45408,"byte_end":45411,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45412,"byte_end":45454,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45455,"byte_end":45506,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46627,"byte_end":46640,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45547,"byte_end":45632,"line_start":20,"line_end":20,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45637,"byte_end":45678,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45683,"byte_end":45686,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45691,"byte_end":45738,"line_start":23,"line_end":23,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45743,"byte_end":45746,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45751,"byte_end":45810,"line_start":25,"line_end":25,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45815,"byte_end":45873,"line_start":26,"line_end":26,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45878,"byte_end":45959,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45964,"byte_end":45990,"line_start":28,"line_end":28,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45995,"byte_end":45998,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46003,"byte_end":46074,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46079,"byte_end":46141,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46146,"byte_end":46217,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46222,"byte_end":46303,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46308,"byte_end":46384,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46389,"byte_end":46440,"line_start":35,"line_end":35,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46445,"byte_end":46448,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46453,"byte_end":46524,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46529,"byte_end":46532,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46537,"byte_end":46576,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46581,"byte_end":46619,"line_start":40,"line_end":40,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47543,"byte_end":47550,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":184},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46718,"byte_end":46792,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46797,"byte_end":46864,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46869,"byte_end":46872,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46877,"byte_end":46948,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":46953,"byte_end":47022,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47027,"byte_end":47101,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47106,"byte_end":47183,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47188,"byte_end":47258,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47263,"byte_end":47316,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47321,"byte_end":47324,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47329,"byte_end":47401,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47406,"byte_end":47428,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47433,"byte_end":47436,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47441,"byte_end":47480,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47485,"byte_end":47535,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50784,"byte_end":50793,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49203,"byte_end":49233,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49234,"byte_end":49237,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49238,"byte_end":49317,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49318,"byte_end":49392,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49393,"byte_end":49472,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49473,"byte_end":49550,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49551,"byte_end":49562,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49563,"byte_end":49566,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49567,"byte_end":49644,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49645,"byte_end":49663,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49664,"byte_end":49667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49668,"byte_end":49744,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49745,"byte_end":49821,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49822,"byte_end":49841,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49842,"byte_end":49845,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49846,"byte_end":49911,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49912,"byte_end":49992,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":49993,"byte_end":50072,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50073,"byte_end":50146,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50147,"byte_end":50220,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50221,"byte_end":50242,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50243,"byte_end":50246,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50247,"byte_end":50331,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50332,"byte_end":50356,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50357,"byte_end":50360,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50361,"byte_end":50434,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50435,"byte_end":50514,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50515,"byte_end":50518,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50519,"byte_end":50584,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50585,"byte_end":50606,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50607,"byte_end":50610,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50611,"byte_end":50650,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50651,"byte_end":50687,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50688,"byte_end":50727,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50728,"byte_end":50773,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52432,"byte_end":52460,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"pub unsafe fn prepare_uninitialized_buffer(&Self, &mut [MaybeUninit<u8>])\n-> bool","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50800,"byte_end":50874,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50879,"byte_end":50928,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50933,"byte_end":50936,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":50941,"byte_end":51014,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51019,"byte_end":51090,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51095,"byte_end":51169,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51174,"byte_end":51250,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51255,"byte_end":51293,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51298,"byte_end":51301,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51306,"byte_end":51382,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51387,"byte_end":51461,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51466,"byte_end":51543,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51548,"byte_end":51580,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51585,"byte_end":51588,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51593,"byte_end":51666,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51671,"byte_end":51739,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51744,"byte_end":51800,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51805,"byte_end":51840,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51845,"byte_end":51848,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51853,"byte_end":51929,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":51934,"byte_end":52009,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52014,"byte_end":52091,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52096,"byte_end":52114,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52119,"byte_end":52122,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52127,"byte_end":52178,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52183,"byte_end":52186,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52191,"byte_end":52203,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52208,"byte_end":52211,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52216,"byte_end":52288,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52293,"byte_end":52324,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52329,"byte_end":52332,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52337,"byte_end":52368,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: #method.poll_read_buf","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52373,"byte_end":52417,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52968,"byte_end":52977,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52598,"byte_end":52651,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52656,"byte_end":52659,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52664,"byte_end":52722,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52727,"byte_end":52730,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52735,"byte_end":52794,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52799,"byte_end":52857,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52862,"byte_end":52929,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":52934,"byte_end":52960,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53438,"byte_end":53451,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"pub fn poll_read_buf<B: BufMut>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where Self: Sized","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53102,"byte_end":53178,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53183,"byte_end":53212,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53217,"byte_end":53220,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53225,"byte_end":53300,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53305,"byte_end":53381,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":53386,"byte_end":53430,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":244},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56606,"byte_end":56615,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56124,"byte_end":56154,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56155,"byte_end":56158,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56159,"byte_end":56233,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56234,"byte_end":56304,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56305,"byte_end":56374,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56375,"byte_end":56378,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56379,"byte_end":56444,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56445,"byte_end":56466,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56467,"byte_end":56470,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56471,"byte_end":56507,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56508,"byte_end":56549,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56550,"byte_end":56595,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56953,"byte_end":56963,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, &mut Context, SeekFrom)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56622,"byte_end":56679,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56684,"byte_end":56687,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56692,"byte_end":56765,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56770,"byte_end":56796,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56801,"byte_end":56804,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56809,"byte_end":56884,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":56889,"byte_end":56945,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57546,"byte_end":57559,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":244},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57089,"byte_end":57132,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57137,"byte_end":57140,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57145,"byte_end":57194,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57199,"byte_end":57269,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57274,"byte_end":57335,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57340,"byte_end":57343,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57348,"byte_end":57360,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57365,"byte_end":57368,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57373,"byte_end":57429,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57434,"byte_end":57437,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57442,"byte_end":57454,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57459,"byte_end":57462,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":57467,"byte_end":57538,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61062,"byte_end":61072,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59199,"byte_end":59231,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59232,"byte_end":59235,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59236,"byte_end":59318,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59319,"byte_end":59394,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59395,"byte_end":59462,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59463,"byte_end":59466,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59467,"byte_end":59547,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59548,"byte_end":59566,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59567,"byte_end":59570,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59571,"byte_end":59642,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59643,"byte_end":59657,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59658,"byte_end":59661,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59662,"byte_end":59730,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59731,"byte_end":59811,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59812,"byte_end":59891,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59892,"byte_end":59965,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":59966,"byte_end":60039,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60040,"byte_end":60061,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60062,"byte_end":60065,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60066,"byte_end":60150,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60151,"byte_end":60175,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60176,"byte_end":60179,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60180,"byte_end":60262,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60263,"byte_end":60346,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60347,"byte_end":60350,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60351,"byte_end":60435,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60436,"byte_end":60520,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60521,"byte_end":60599,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60600,"byte_end":60679,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60680,"byte_end":60741,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60742,"byte_end":60745,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60746,"byte_end":60812,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60813,"byte_end":60835,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60836,"byte_end":60839,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60840,"byte_end":60878,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60879,"byte_end":60923,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60924,"byte_end":60963,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":60964,"byte_end":61003,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61004,"byte_end":61051,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61456,"byte_end":61466,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61079,"byte_end":61133,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61138,"byte_end":61141,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61146,"byte_end":61207,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61212,"byte_end":61215,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61220,"byte_end":61282,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61287,"byte_end":61345,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61350,"byte_end":61417,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61422,"byte_end":61448,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62007,"byte_end":62017,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61594,"byte_end":61665,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61670,"byte_end":61692,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61697,"byte_end":61700,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61705,"byte_end":61751,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61756,"byte_end":61759,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61764,"byte_end":61828,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61833,"byte_end":61891,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61896,"byte_end":61964,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":61969,"byte_end":61999,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65303,"byte_end":65316,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62099,"byte_end":62173,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62178,"byte_end":62226,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62231,"byte_end":62234,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62239,"byte_end":62310,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62315,"byte_end":62391,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62396,"byte_end":62472,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62477,"byte_end":62552,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62557,"byte_end":62628,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62633,"byte_end":62709,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62714,"byte_end":62742,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62747,"byte_end":62750,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62755,"byte_end":62816,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62821,"byte_end":62892,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62897,"byte_end":62969,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":62974,"byte_end":63049,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63054,"byte_end":63127,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63132,"byte_end":63207,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63212,"byte_end":63284,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63289,"byte_end":63300,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63305,"byte_end":63308,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63313,"byte_end":63387,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63392,"byte_end":63464,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63469,"byte_end":63538,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63543,"byte_end":63611,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63616,"byte_end":63677,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63682,"byte_end":63685,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63690,"byte_end":63708,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63713,"byte_end":63716,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63721,"byte_end":63791,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63796,"byte_end":63799,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63804,"byte_end":63867,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63872,"byte_end":63941,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":63946,"byte_end":64021,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64026,"byte_end":64099,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64104,"byte_end":64155,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64160,"byte_end":64163,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64168,"byte_end":64238,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64243,"byte_end":64318,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64323,"byte_end":64395,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64400,"byte_end":64470,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64475,"byte_end":64550,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64555,"byte_end":64558,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64563,"byte_end":64644,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64649,"byte_end":64724,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64729,"byte_end":64796,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64801,"byte_end":64804,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64809,"byte_end":64821,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64826,"byte_end":64829,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64834,"byte_end":64905,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64910,"byte_end":64976,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":64981,"byte_end":65055,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65060,"byte_end":65124,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65129,"byte_end":65168,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65173,"byte_end":65176,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65181,"byte_end":65193,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65198,"byte_end":65201,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65206,"byte_end":65281,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65286,"byte_end":65295,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65604,"byte_end":65618,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"pub fn poll_write_buf<B: Buf>(Pin<&mut Self>, &mut Context, &mut B)\n-> Poll<Result<usize, io::Error>> where Self: Sized","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65398,"byte_end":65472,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65477,"byte_end":65480,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65485,"byte_end":65559,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":65564,"byte_end":65596,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8539176,"byte_end":8539187,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19229,"byte_end":19258,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541433,"byte_end":8541436,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"pub fn new(E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541011,"byte_end":8541079,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541084,"byte_end":8541087,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541092,"byte_end":8541104,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541109,"byte_end":8541112,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541117,"byte_end":8541177,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541182,"byte_end":8541185,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541190,"byte_end":8541260,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541265,"byte_end":8541338,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541343,"byte_end":8541421,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542640,"byte_end":8542654,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<PollEvented<E>>::new_with_ready","value":"pub fn new_with_ready(E, mio::Ready) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`\n state. `new_with_ready` should be used over `new` when you need control over the readiness\n state, such as when a file descriptor only allows reads. This does not add `hup` or `error`\n so if you are interested in those states, you will need to add them to the readiness state\n passed to this function.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor, for specific `mio::Ready`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541536,"byte_end":8541630,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/ state. `new_with_ready` should be used over `new` when you need control over the readiness","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541635,"byte_end":8541729,"line_start":182,"line_end":182,"column_start":5,"column_end":99}},{"value":"/ state, such as when a file descriptor only allows reads. This does not add `hup` or `error`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541734,"byte_end":8541829,"line_start":183,"line_end":183,"column_start":5,"column_end":100}},{"value":"/ so if you are interested in those states, you will need to add them to the readiness state","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541834,"byte_end":8541928,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ passed to this function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541933,"byte_end":8541961,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541966,"byte_end":8541969,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8541974,"byte_end":8542011,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542016,"byte_end":8542019,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542024,"byte_end":8542035,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542040,"byte_end":8542057,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542062,"byte_end":8542093,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542098,"byte_end":8542143,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542148,"byte_end":8542202,"line_start":193,"line_end":193,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542207,"byte_end":8542259,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542264,"byte_end":8542274,"line_start":195,"line_end":195,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542279,"byte_end":8542286,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542291,"byte_end":8542294,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542299,"byte_end":8542311,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542316,"byte_end":8542319,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542324,"byte_end":8542384,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542389,"byte_end":8542392,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542397,"byte_end":8542467,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542472,"byte_end":8542545,"line_start":203,"line_end":203,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8542550,"byte_end":8542628,"line_start":204,"line_end":204,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543132,"byte_end":8543139,"line_start":219,"line_end":219,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"pub fn get_ref(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543018,"byte_end":8543092,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543097,"byte_end":8543120,"line_start":218,"line_end":218,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543315,"byte_end":8543322,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543200,"byte_end":8543275,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543280,"byte_end":8543303,"line_start":224,"line_end":224,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543858,"byte_end":8543868,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"pub fn into_inner(Self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543391,"byte_end":8543440,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543445,"byte_end":8543448,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543453,"byte_end":8543527,"line_start":231,"line_end":231,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543532,"byte_end":8543607,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543612,"byte_end":8543615,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543620,"byte_end":8543695,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543700,"byte_end":8543776,"line_start":235,"line_end":235,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8543781,"byte_end":8543846,"line_start":236,"line_end":236,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545020,"byte_end":8545035,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context, mio::Ready)\n-> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544016,"byte_end":8544067,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544072,"byte_end":8544075,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544080,"byte_end":8544153,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544158,"byte_end":8544229,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544234,"byte_end":8544309,"line_start":247,"line_end":247,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544314,"byte_end":8544321,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544326,"byte_end":8544329,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544334,"byte_end":8544410,"line_start":250,"line_end":250,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544415,"byte_end":8544481,"line_start":251,"line_end":251,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544486,"byte_end":8544489,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544494,"byte_end":8544567,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544572,"byte_end":8544616,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544621,"byte_end":8544624,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: #method.clear_read_ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544629,"byte_end":8544679,"line_start":256,"line_end":256,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544684,"byte_end":8544687,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544692,"byte_end":8544704,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544709,"byte_end":8544712,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544717,"byte_end":8544745,"line_start":260,"line_end":260,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544750,"byte_end":8544753,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544758,"byte_end":8544790,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544795,"byte_end":8544839,"line_start":263,"line_end":263,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544844,"byte_end":8544847,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544852,"byte_end":8544865,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544870,"byte_end":8544873,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544878,"byte_end":8544951,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_write_ready`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8544956,"byte_end":8545008,"line_start":268,"line_end":268,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546011,"byte_end":8546027,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"pub fn clear_read_ready(&Self, &mut Context, mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545412,"byte_end":8545488,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545493,"byte_end":8545557,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545562,"byte_end":8545565,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545570,"byte_end":8545632,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545637,"byte_end":8545708,"line_start":288,"line_end":288,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545713,"byte_end":8545716,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545721,"byte_end":8545796,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545801,"byte_end":8545833,"line_start":291,"line_end":291,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545838,"byte_end":8545841,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545846,"byte_end":8545858,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545863,"byte_end":8545866,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545871,"byte_end":8545899,"line_start":295,"line_end":295,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545904,"byte_end":8545907,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545912,"byte_end":8545950,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8545955,"byte_end":8545999,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547462,"byte_end":8547478,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546552,"byte_end":8546604,"line_start":316,"line_end":316,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546609,"byte_end":8546612,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546617,"byte_end":8546686,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546691,"byte_end":8546734,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546739,"byte_end":8546742,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546747,"byte_end":8546815,"line_start":321,"line_end":321,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546820,"byte_end":8546895,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546900,"byte_end":8546903,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546908,"byte_end":8546982,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8546987,"byte_end":8547032,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547037,"byte_end":8547040,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: #method.clear_write_ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547045,"byte_end":8547097,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547102,"byte_end":8547105,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547110,"byte_end":8547122,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547127,"byte_end":8547130,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547135,"byte_end":8547163,"line_start":331,"line_end":331,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547168,"byte_end":8547171,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547176,"byte_end":8547233,"line_start":333,"line_end":333,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547238,"byte_end":8547282,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547287,"byte_end":8547290,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547295,"byte_end":8547308,"line_start":336,"line_end":336,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547313,"byte_end":8547316,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method may not be called concurrently. It takes `&self` to allow","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547321,"byte_end":8547394,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ calling it concurrently with `poll_read_ready`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547399,"byte_end":8547450,"line_start":339,"line_end":339,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548327,"byte_end":8548344,"line_start":362,"line_end":362,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"pub fn clear_write_ready(&Self, &mut Context) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547754,"byte_end":8547831,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547836,"byte_end":8547901,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547906,"byte_end":8547909,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547914,"byte_end":8547990,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8547995,"byte_end":8548040,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548045,"byte_end":8548048,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548053,"byte_end":8548128,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548133,"byte_end":8548207,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548212,"byte_end":8548215,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548220,"byte_end":8548232,"line_start":359,"line_end":359,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548237,"byte_end":8548240,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548245,"byte_end":8548315,"line_start":361,"line_end":361,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1172},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552573,"byte_end":8552585,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19229,"byte_end":19258,"line_start":131,"line_end":131,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553277,"byte_end":8553280,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"pub fn new<T>(&T) -> io::Result<Registration> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552705,"byte_end":8552761,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552766,"byte_end":8552769,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552774,"byte_end":8552786,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552791,"byte_end":8552794,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552799,"byte_end":8552851,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552856,"byte_end":8552915,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552920,"byte_end":8552923,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552928,"byte_end":8552931,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552936,"byte_end":8552948,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552953,"byte_end":8552956,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552961,"byte_end":8553021,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553026,"byte_end":8553029,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553034,"byte_end":8553104,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553109,"byte_end":8553182,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553187,"byte_end":8553265,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554683,"byte_end":8554697,"line_start":102,"line_end":102,"column_start":12,"column_end":26},"name":"new_with_ready","qualname":"<Registration>::new_with_ready","value":"pub fn new_with_ready<T>(&T, mio::Ready) -> io::Result<Registration> where\nT: Evented","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.\n `new_with_ready` should be used over `new` when you need control over the readiness state,\n such as when a file descriptor only allows reads. This does not add `hup` or `error` so if\n you are interested in those states, you will need to add them to the readiness state passed\n to this function.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor, for a specific `mio::Ready` state.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553427,"byte_end":8553518,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ `new_with_ready` should be used over `new` when you need control over the readiness state,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553523,"byte_end":8553617,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ such as when a file descriptor only allows reads. This does not add `hup` or `error` so if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553622,"byte_end":8553716,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ you are interested in those states, you will need to add them to the readiness state passed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553721,"byte_end":8553816,"line_start":75,"line_end":75,"column_start":5,"column_end":100}},{"value":"/ to this function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553821,"byte_end":8553842,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553847,"byte_end":8553850,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ An example to listen to read only","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553855,"byte_end":8553892,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553897,"byte_end":8553900,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553905,"byte_end":8553916,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ ##[cfg(unix)]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553921,"byte_end":8553938,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/     mio::Ready::from_usize(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553943,"byte_end":8553974,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/         mio::Ready::readable().as_usize()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8553979,"byte_end":8554024,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/         | mio::unix::UnixReady::error().as_usize()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554029,"byte_end":8554083,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/         | mio::unix::UnixReady::hup().as_usize()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554088,"byte_end":8554140,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"/     );","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554145,"byte_end":8554155,"line_start":86,"line_end":86,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554160,"byte_end":8554167,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554172,"byte_end":8554175,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554180,"byte_end":8554192,"line_start":89,"line_end":89,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554197,"byte_end":8554200,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554205,"byte_end":8554257,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554262,"byte_end":8554321,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554326,"byte_end":8554329,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554334,"byte_end":8554337,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554342,"byte_end":8554354,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554359,"byte_end":8554362,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554367,"byte_end":8554427,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554432,"byte_end":8554435,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554440,"byte_end":8554510,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554515,"byte_end":8554588,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8554593,"byte_end":8554671,"line_start":101,"line_end":101,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555932,"byte_end":8555942,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"pub fn deregister<T>(&mut Self, &T) -> io::Result<()> where T: Evented","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555156,"byte_end":8555228,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555233,"byte_end":8555236,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555241,"byte_end":8555317,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555322,"byte_end":8555350,"line_start":122,"line_end":122,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555355,"byte_end":8555358,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555363,"byte_end":8555438,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555443,"byte_end":8555519,"line_start":125,"line_end":125,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555524,"byte_end":8555589,"line_start":126,"line_end":126,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555594,"byte_end":8555597,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555602,"byte_end":8555614,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555619,"byte_end":8555622,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555627,"byte_end":8555699,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555704,"byte_end":8555780,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555785,"byte_end":8555858,"line_start":132,"line_end":132,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555863,"byte_end":8555866,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8555871,"byte_end":8555920,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557685,"byte_end":8557700,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556245,"byte_end":8556310,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556315,"byte_end":8556318,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556323,"byte_end":8556397,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556402,"byte_end":8556475,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556480,"byte_end":8556530,"line_start":150,"line_end":150,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556535,"byte_end":8556538,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556543,"byte_end":8556616,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556621,"byte_end":8556696,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556701,"byte_end":8556737,"line_start":154,"line_end":154,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556742,"byte_end":8556745,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556750,"byte_end":8556801,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556806,"byte_end":8556809,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556814,"byte_end":8556832,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556837,"byte_end":8556840,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556845,"byte_end":8556890,"line_start":160,"line_end":160,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556895,"byte_end":8556898,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556903,"byte_end":8556978,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8556983,"byte_end":8557044,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557049,"byte_end":8557052,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557057,"byte_end":8557132,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557137,"byte_end":8557184,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557189,"byte_end":8557192,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557197,"byte_end":8557273,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557278,"byte_end":8557353,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557358,"byte_end":8557412,"line_start":170,"line_end":170,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557417,"byte_end":8557420,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557425,"byte_end":8557459,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557464,"byte_end":8557565,"line_start":173,"line_end":173,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557570,"byte_end":8557573,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557578,"byte_end":8557590,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557595,"byte_end":8557598,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8557603,"byte_end":8557673,"line_start":177,"line_end":177,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558383,"byte_end":8558398,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"pub fn take_read_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558027,"byte_end":8558072,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558077,"byte_end":8558080,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558085,"byte_end":8558157,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558162,"byte_end":8558237,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558242,"byte_end":8558310,"line_start":193,"line_end":193,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558315,"byte_end":8558318,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: #method.poll_read_ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558323,"byte_end":8558371,"line_start":195,"line_end":195,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559944,"byte_end":8559960,"line_start":232,"line_end":232,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558500,"byte_end":8558566,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558571,"byte_end":8558574,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558579,"byte_end":8558654,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558659,"byte_end":8558733,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558738,"byte_end":8558788,"line_start":204,"line_end":204,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558793,"byte_end":8558796,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558801,"byte_end":8558874,"line_start":206,"line_end":206,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558879,"byte_end":8558954,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8558959,"byte_end":8558995,"line_start":208,"line_end":208,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559000,"byte_end":8559003,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559008,"byte_end":8559059,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559064,"byte_end":8559067,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559072,"byte_end":8559090,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559095,"byte_end":8559098,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559103,"byte_end":8559148,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559153,"byte_end":8559156,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559161,"byte_end":8559236,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559241,"byte_end":8559302,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559307,"byte_end":8559310,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559315,"byte_end":8559390,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559395,"byte_end":8559443,"line_start":220,"line_end":220,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559448,"byte_end":8559451,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559456,"byte_end":8559532,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559537,"byte_end":8559612,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559617,"byte_end":8559671,"line_start":224,"line_end":224,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559676,"byte_end":8559679,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559684,"byte_end":8559718,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559723,"byte_end":8559824,"line_start":227,"line_end":227,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559829,"byte_end":8559832,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559837,"byte_end":8559849,"line_start":229,"line_end":229,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559854,"byte_end":8559857,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8559862,"byte_end":8559932,"line_start":231,"line_end":231,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560649,"byte_end":8560665,"line_start":250,"line_end":250,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"pub fn take_write_ready(&Self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560288,"byte_end":8560335,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560340,"byte_end":8560343,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560348,"byte_end":8560421,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560426,"byte_end":8560501,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560506,"byte_end":8560574,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560579,"byte_end":8560582,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: #method.poll_write_ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8560587,"byte_end":8560637,"line_start":249,"line_end":249,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8564528,"byte_end":8564536,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1293}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1294},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8564665,"byte_end":8564674,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1296}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1297},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8564988,"byte_end":8564993,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565619,"byte_end":8565629,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565516,"byte_end":8565591,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565596,"byte_end":8565607,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566036,"byte_end":8566043,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565712,"byte_end":8565761,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565766,"byte_end":8565769,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565774,"byte_end":8565786,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565791,"byte_end":8565794,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565799,"byte_end":8565873,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565878,"byte_end":8565928,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565933,"byte_end":8565997,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566002,"byte_end":8566024,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566544,"byte_end":8566554,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566442,"byte_end":8566516,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566521,"byte_end":8566532,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8569791,"byte_end":8569795,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8569628,"byte_end":8569694,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8569712,"byte_end":8569779,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1968},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8572954,"byte_end":8572969,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1974}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8575669,"byte_end":8575679,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8578570,"byte_end":8578579,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8579979,"byte_end":8579984,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8581834,"byte_end":8581839,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":1968},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1976},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8583914,"byte_end":8583926,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1984},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1990}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8585046,"byte_end":8585051,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8587880,"byte_end":8587884,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8590186,"byte_end":8590194,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized,\nB: BufMut","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8592420,"byte_end":8592430,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8593867,"byte_end":8593874,"line_start":326,"line_end":326,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8595163,"byte_end":8595170,"line_start":364,"line_end":364,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8596501,"byte_end":8596509,"line_start":402,"line_end":402,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8597849,"byte_end":8597857,"line_start":440,"line_end":440,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8599138,"byte_end":8599146,"line_start":477,"line_end":477,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8600441,"byte_end":8600449,"line_start":515,"line_end":515,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8601812,"byte_end":8601820,"line_start":554,"line_end":554,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8603113,"byte_end":8603121,"line_start":591,"line_end":591,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8604581,"byte_end":8604590,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8605984,"byte_end":8605993,"line_start":671,"line_end":671,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8607604,"byte_end":8607615,"line_start":717,"line_end":717,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8609183,"byte_end":8609197,"line_start":764,"line_end":764,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8610375,"byte_end":8610379,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1370},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611421,"byte_end":8611433,"line_start":35,"line_end":35,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1371}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to [`AsyncSeek`] types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610646,"byte_end":8610719,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610720,"byte_end":8610723,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ As a convenience, this trait may be imported using the [`prelude`]:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610724,"byte_end":8610795,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610796,"byte_end":8610799,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610800,"byte_end":8610814,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610815,"byte_end":8610818,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610819,"byte_end":8610826,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610827,"byte_end":8610863,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610864,"byte_end":8610890,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610891,"byte_end":8610894,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610895,"byte_end":8610913,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610914,"byte_end":8610953,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8610954,"byte_end":8611003,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611004,"byte_end":8611007,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611008,"byte_end":8611061,"line_start":19,"line_end":19,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611062,"byte_end":8611109,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611110,"byte_end":8611113,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611114,"byte_end":8611143,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611144,"byte_end":8611189,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611190,"byte_end":8611215,"line_start":24,"line_end":24,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611216,"byte_end":8611248,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611249,"byte_end":8611252,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611253,"byte_end":8611267,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611268,"byte_end":8611273,"line_start":28,"line_end":28,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611274,"byte_end":8611281,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611282,"byte_end":8611285,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ See [module][crate::io] documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611286,"byte_end":8611345,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611346,"byte_end":8611349,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: AsyncSeek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611350,"byte_end":8611378,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ [`prelude`]: crate::prelude","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611379,"byte_end":8611410,"line_start":34,"line_end":34,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612150,"byte_end":8612154,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":1370},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611451,"byte_end":8611520,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611525,"byte_end":8611578,"line_start":37,"line_end":37,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611583,"byte_end":8611586,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611591,"byte_end":8611668,"line_start":39,"line_end":39,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611673,"byte_end":8611695,"line_start":40,"line_end":40,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611700,"byte_end":8611703,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611708,"byte_end":8611722,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611727,"byte_end":8611730,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611735,"byte_end":8611748,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611753,"byte_end":8611777,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611782,"byte_end":8611808,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611813,"byte_end":8611816,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611821,"byte_end":8611847,"line_start":48,"line_end":48,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611852,"byte_end":8611855,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611860,"byte_end":8611905,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611910,"byte_end":8611958,"line_start":51,"line_end":51,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611963,"byte_end":8612004,"line_start":52,"line_end":52,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612009,"byte_end":8612012,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612017,"byte_end":8612054,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612059,"byte_end":8612101,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612106,"byte_end":8612118,"line_start":56,"line_end":56,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612123,"byte_end":8612130,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612135,"byte_end":8612142,"line_start":58,"line_end":58,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2012},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8614237,"byte_end":8614250,"line_start":62,"line_end":62,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2020},{"krate":0,"index":2021}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8616092,"byte_end":8616097,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8618899,"byte_end":8618908,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized, B: Buf","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8620242,"byte_end":8620251,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8621651,"byte_end":8621659,"line_start":265,"line_end":265,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8622920,"byte_end":8622928,"line_start":302,"line_end":302,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8624243,"byte_end":8624252,"line_start":340,"line_end":340,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2028},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8625565,"byte_end":8625574,"line_start":378,"line_end":378,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2030},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8626914,"byte_end":8626923,"line_start":416,"line_end":416,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8628258,"byte_end":8628267,"line_start":454,"line_end":454,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8629644,"byte_end":8629653,"line_start":492,"line_end":492,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8631040,"byte_end":8631049,"line_start":530,"line_end":530,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8632504,"byte_end":8632514,"line_start":570,"line_end":570,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8633904,"byte_end":8633914,"line_start":610,"line_end":610,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8634932,"byte_end":8634937,"line_start":643,"line_end":643,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8636157,"byte_end":8636165,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8777},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637558,"byte_end":8637567,"line_start":28,"line_end":28,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":8779},{"krate":0,"index":8780},{"krate":0,"index":8781},{"krate":0,"index":8782}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637903,"byte_end":8637906,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637761,"byte_end":8637853,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637858,"byte_end":8637891,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638068,"byte_end":8638081,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637991,"byte_end":8638056,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638757,"byte_end":8638764,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638620,"byte_end":8638666,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638671,"byte_end":8638674,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638679,"byte_end":8638745,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638956,"byte_end":8638963,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638811,"byte_end":8638865,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638870,"byte_end":8638873,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8638878,"byte_end":8638944,"line_start":73,"line_end":73,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639174,"byte_end":8639185,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639022,"byte_end":8639083,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639088,"byte_end":8639091,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639096,"byte_end":8639162,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639416,"byte_end":8639426,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639265,"byte_end":8639328,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639333,"byte_end":8639336,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639341,"byte_end":8639404,"line_start":87,"line_end":87,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639630,"byte_end":8639636,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639470,"byte_end":8639526,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639531,"byte_end":8639534,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639539,"byte_end":8639618,"line_start":94,"line_end":94,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":8763},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643677,"byte_end":8643686,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":8765}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643965,"byte_end":8643968,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643811,"byte_end":8643868,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643873,"byte_end":8643876,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643881,"byte_end":8643953,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644300,"byte_end":8644313,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644100,"byte_end":8644185,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644190,"byte_end":8644203,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644208,"byte_end":8644211,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644216,"byte_end":8644288,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644770,"byte_end":8644777,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644625,"byte_end":8644675,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644680,"byte_end":8644683,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644688,"byte_end":8644758,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644997,"byte_end":8645004,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644844,"byte_end":8644902,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644907,"byte_end":8644910,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8644915,"byte_end":8644985,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645239,"byte_end":8645250,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645079,"byte_end":8645144,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645149,"byte_end":8645152,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645157,"byte_end":8645227,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645514,"byte_end":8645524,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645359,"byte_end":8645426,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645431,"byte_end":8645434,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645439,"byte_end":8645502,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8700},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649343,"byte_end":8649352,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":8702},{"krate":0,"index":8703},{"krate":0,"index":8704}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649660,"byte_end":8649663,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649518,"byte_end":8649610,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649615,"byte_end":8649648,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649825,"byte_end":8649838,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649748,"byte_end":8649813,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8650920,"byte_end":8650927,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8650862,"byte_end":8650908,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651118,"byte_end":8651125,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8650974,"byte_end":8651028,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651033,"byte_end":8651036,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651041,"byte_end":8651106,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651335,"byte_end":8651346,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651184,"byte_end":8651245,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651250,"byte_end":8651253,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651258,"byte_end":8651323,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651577,"byte_end":8651587,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651426,"byte_end":8651489,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651494,"byte_end":8651497,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651502,"byte_end":8651565,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651699,"byte_end":8651705,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651631,"byte_end":8651687,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":8651},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654338,"byte_end":8654343,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8654},{"krate":0,"index":8655},{"krate":0,"index":8656}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654784,"byte_end":8654791,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654710,"byte_end":8654772,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655123,"byte_end":8655130,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654860,"byte_end":8654930,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654935,"byte_end":8654938,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654943,"byte_end":8655016,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655021,"byte_end":8655094,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655099,"byte_end":8655111,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655489,"byte_end":8655500,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655219,"byte_end":8655296,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655301,"byte_end":8655304,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655309,"byte_end":8655382,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655387,"byte_end":8655460,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655465,"byte_end":8655477,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655697,"byte_end":8655707,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655629,"byte_end":8655685,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8657977,"byte_end":8657981,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8657894,"byte_end":8657961,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2042},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8659246,"byte_end":8659250,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"pub fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W) -> Copy where\nR: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8661994,"byte_end":8661999,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2064}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2065},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8662678,"byte_end":8662683,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2066},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/flush.rs","byte_start":8663724,"byte_end":8663729,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2069}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8628},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8664845,"byte_end":8664850,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":8630},{"krate":0,"index":8631},{"krate":0,"index":8632},{"krate":0,"index":8633}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665697,"byte_end":8665706,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665207,"byte_end":8665247,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665252,"byte_end":8665255,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665260,"byte_end":8665274,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665279,"byte_end":8665282,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665287,"byte_end":8665294,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665299,"byte_end":8665333,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665338,"byte_end":8665373,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665378,"byte_end":8665381,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665386,"byte_end":8665469,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665474,"byte_end":8665514,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665519,"byte_end":8665522,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665527,"byte_end":8665580,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665585,"byte_end":8665628,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665633,"byte_end":8665638,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665643,"byte_end":8665655,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665660,"byte_end":8665667,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665672,"byte_end":8665679,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665933,"byte_end":8665940,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665866,"byte_end":8665921,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666059,"byte_end":8666066,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666000,"byte_end":8666047,"line_start":68,"line_end":68,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1646},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666353,"byte_end":8666363,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666118,"byte_end":8666179,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666184,"byte_end":8666187,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666192,"byte_end":8666255,"line_start":75,"line_end":75,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666260,"byte_end":8666341,"line_start":76,"line_end":76,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1649},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666482,"byte_end":8666496,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2074},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8668426,"byte_end":8668430,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2077},{"krate":0,"index":2078}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8668343,"byte_end":8668410,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8669474,"byte_end":8669481,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088}],"decl_id":null,"docs":" Future returned by [`read_buf`](AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8669391,"byte_end":8669458,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2094},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8670757,"byte_end":8670766,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8670674,"byte_end":8670741,"line_start":30,"line_end":30,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8570},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675090,"byte_end":8675096,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":8572}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8537},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675112,"byte_end":8675118,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":8539}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8492},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675134,"byte_end":8675141,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":8494},{"krate":0,"index":8495},{"krate":0,"index":8497}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8447},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675166,"byte_end":8675173,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":8449},{"krate":0,"index":8450},{"krate":0,"index":8452}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8402},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675198,"byte_end":8675205,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":8404},{"krate":0,"index":8405},{"krate":0,"index":8407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8357},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675230,"byte_end":8675238,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":8359},{"krate":0,"index":8360},{"krate":0,"index":8362}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8312},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675266,"byte_end":8675273,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":8314},{"krate":0,"index":8315},{"krate":0,"index":8317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8267},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675298,"byte_end":8675305,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":8269},{"krate":0,"index":8270},{"krate":0,"index":8272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8222},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675330,"byte_end":8675337,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":8224},{"krate":0,"index":8225},{"krate":0,"index":8227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8177},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_int.rs","byte_start":8675362,"byte_end":8675370,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":8179},{"krate":0,"index":8180},{"krate":0,"index":8182}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2184},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8675799,"byte_end":8675807,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8675716,"byte_end":8675783,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2195},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8677856,"byte_end":8677865,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":2200}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8677726,"byte_end":8677793,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2205},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8680844,"byte_end":8680856,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8680761,"byte_end":8680828,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8683250,"byte_end":8683259,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8683167,"byte_end":8683234,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2228},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8685517,"byte_end":8685523,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2229}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2227},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8686209,"byte_end":8686215,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2232},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/shutdown.rs","byte_start":8686979,"byte_end":8686987,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2235}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8688159,"byte_end":8688163,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2241}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8689004,"byte_end":8689008,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8154},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690253,"byte_end":8690258,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8156},{"krate":0,"index":8157},{"krate":0,"index":8158},{"krate":0,"index":8159}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1860},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691119,"byte_end":8691131,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690607,"byte_end":8690650,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690655,"byte_end":8690658,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690663,"byte_end":8690677,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690682,"byte_end":8690685,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690690,"byte_end":8690697,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690702,"byte_end":8690736,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690741,"byte_end":8690776,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690781,"byte_end":8690784,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690789,"byte_end":8690872,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690877,"byte_end":8690924,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690929,"byte_end":8690932,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690937,"byte_end":8690999,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691004,"byte_end":8691050,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691055,"byte_end":8691060,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691065,"byte_end":8691077,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691082,"byte_end":8691089,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691094,"byte_end":8691101,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691369,"byte_end":8691386,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8108},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8703837,"byte_end":8703849,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":8111},{"krate":0,"index":8112}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2258},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705125,"byte_end":8705138,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"pub fn stream_reader<S, B>(S) -> StreamReader<S, B> where S: Stream<Item =\nResult<B, io::Error>>, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8703926,"byte_end":8704006,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704007,"byte_end":8704010,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704011,"byte_end":8704024,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704025,"byte_end":8704028,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704029,"byte_end":8704036,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704037,"byte_end":8704058,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704059,"byte_end":8704108,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704109,"byte_end":8704129,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704130,"byte_end":8704176,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704177,"byte_end":8704180,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704181,"byte_end":8704221,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704222,"byte_end":8704264,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704265,"byte_end":8704311,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704312,"byte_end":8704358,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704359,"byte_end":8704407,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704408,"byte_end":8704415,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704416,"byte_end":8704419,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704420,"byte_end":8704454,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704455,"byte_end":8704496,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704497,"byte_end":8704500,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704501,"byte_end":8704540,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704541,"byte_end":8704566,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704567,"byte_end":8704604,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704605,"byte_end":8704642,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704643,"byte_end":8704646,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704647,"byte_end":8704689,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704690,"byte_end":8704736,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704737,"byte_end":8704774,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704775,"byte_end":8704778,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704779,"byte_end":8704806,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704807,"byte_end":8704853,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704854,"byte_end":8704896,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704897,"byte_end":8704900,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704901,"byte_end":8704936,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704937,"byte_end":8704983,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704984,"byte_end":8704987,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8704988,"byte_end":8705000,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705001,"byte_end":8705008,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705009,"byte_end":8705016,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8063},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8692860,"byte_end":8692864,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8065},{"krate":0,"index":8066}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693454,"byte_end":8693459,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693151,"byte_end":8693204,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693209,"byte_end":8693255,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693260,"byte_end":8693263,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693268,"byte_end":8693278,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693283,"byte_end":8693286,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693291,"byte_end":8693368,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693373,"byte_end":8693442,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693778,"byte_end":8693787,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693507,"byte_end":8693578,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693583,"byte_end":8693657,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693662,"byte_end":8693737,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693742,"byte_end":8693766,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693910,"byte_end":8693917,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693852,"byte_end":8693898,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694209,"byte_end":8694216,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693964,"byte_end":8694018,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694023,"byte_end":8694026,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694031,"byte_end":8694104,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694109,"byte_end":8694181,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694186,"byte_end":8694197,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694527,"byte_end":8694538,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694275,"byte_end":8694336,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694341,"byte_end":8694344,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694349,"byte_end":8694422,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694427,"byte_end":8694499,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694504,"byte_end":8694515,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694684,"byte_end":8694694,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694618,"byte_end":8694672,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2281},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8696624,"byte_end":8696629,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2284},{"krate":0,"index":2285}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8696541,"byte_end":8696608,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2290},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8697525,"byte_end":8697533,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2294}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8697442,"byte_end":8697509,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2299},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8698916,"byte_end":8698924,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2303},{"krate":0,"index":2304}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":19795,"byte_end":19822,"line_start":160,"line_end":160,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8698833,"byte_end":8698900,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8003},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8702895,"byte_end":8702902,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8005},{"krate":0,"index":8006}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7966},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8702918,"byte_end":8702925,"line_start":112,"line_end":112,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":7968},{"krate":0,"index":7969}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7921},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8702941,"byte_end":8702949,"line_start":114,"line_end":114,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7876},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8702974,"byte_end":8702982,"line_start":115,"line_end":115,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":7878},{"krate":0,"index":7879},{"krate":0,"index":7881}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7831},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8703007,"byte_end":8703015,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":7833},{"krate":0,"index":7834},{"krate":0,"index":7836}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7786},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8703040,"byte_end":8703049,"line_start":117,"line_end":117,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":7788},{"krate":0,"index":7789},{"krate":0,"index":7791}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7741},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8703077,"byte_end":8703085,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":7744},{"krate":0,"index":7746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7696},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8703110,"byte_end":8703118,"line_start":120,"line_end":120,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":7698},{"krate":0,"index":7699},{"krate":0,"index":7701}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7651},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8703143,"byte_end":8703151,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7656}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7606},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_int.rs","byte_start":8703176,"byte_end":8703185,"line_start":122,"line_end":122,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":7608},{"krate":0,"index":7609},{"krate":0,"index":7611}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":306},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":365},{"krate":0,"index":2391},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2694},{"krate":0,"index":2820},{"krate":0,"index":2839},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69923,"byte_end":69941,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69943,"byte_end":69981,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69982,"byte_end":69985,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":69986,"byte_end":70069,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70070,"byte_end":70135,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70136,"byte_end":70139,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70140,"byte_end":70158,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70159,"byte_end":70162,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70163,"byte_end":70251,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70252,"byte_end":70321,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70322,"byte_end":70410,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70411,"byte_end":70469,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70470,"byte_end":70533,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70534,"byte_end":70599,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70601,"byte_end":70604,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70605,"byte_end":70637,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70638,"byte_end":70666,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70667,"byte_end":70695,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70696,"byte_end":70730,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70731,"byte_end":70761,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70762,"byte_end":70796,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":317},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72045,"byte_end":72058,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71357,"byte_end":71434,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71435,"byte_end":71438,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71439,"byte_end":71448,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71449,"byte_end":71452,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71453,"byte_end":71530,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71531,"byte_end":71602,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71603,"byte_end":71630,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71631,"byte_end":71634,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71635,"byte_end":71648,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71649,"byte_end":71652,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71653,"byte_end":71730,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71731,"byte_end":71803,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71804,"byte_end":71873,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71874,"byte_end":71877,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71878,"byte_end":71957,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust langague.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":71958,"byte_end":72034,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":361},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77372,"byte_end":77389,"line_start":223,"line_end":223,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":362},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77405,"byte_end":77409,"line_start":224,"line_end":224,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":363},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77470,"byte_end":77476,"line_start":225,"line_end":225,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":77548,"byte_end":77563,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self) -> Self::Future","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2391},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":9852},{"krate":0,"index":2549},{"krate":0,"index":2652}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22530,"byte_end":22553,"line_start":298,"line_end":298,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/mod.rs","byte_start":8708590,"byte_end":8708611,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711211,"byte_end":8711222,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2656}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22530,"byte_end":22553,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712500,"byte_end":8712504,"line_start":109,"line_end":109,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener which will be bound to the specified address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711305,"byte_end":8711380,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711385,"byte_end":8711388,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711393,"byte_end":8711454,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711459,"byte_end":8711462,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711467,"byte_end":8711542,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711547,"byte_end":8711623,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711628,"byte_end":8711639,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711644,"byte_end":8711647,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of `ToSocketAddrs` trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711652,"byte_end":8711721,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711726,"byte_end":8711729,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711734,"byte_end":8711810,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711815,"byte_end":8711888,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711893,"byte_end":8711966,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711971,"byte_end":8712023,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712028,"byte_end":8712031,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712036,"byte_end":8712099,"line_start":90,"line_end":90,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712104,"byte_end":8712107,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712112,"byte_end":8712126,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712131,"byte_end":8712134,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712139,"byte_end":8712152,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712157,"byte_end":8712189,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712194,"byte_end":8712197,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712202,"byte_end":8712218,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712223,"byte_end":8712226,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712231,"byte_end":8712249,"line_start":99,"line_end":99,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712254,"byte_end":8712293,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712298,"byte_end":8712361,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712366,"byte_end":8712369,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712374,"byte_end":8712401,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712406,"byte_end":8712409,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712414,"byte_end":8712441,"line_start":105,"line_end":105,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712446,"byte_end":8712460,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712465,"byte_end":8712470,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8712475,"byte_end":8712482,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714076,"byte_end":8714082,"line_start":161,"line_end":161,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713217,"byte_end":8713274,"line_start":134,"line_end":134,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713279,"byte_end":8713282,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713287,"byte_end":8713362,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713367,"byte_end":8713437,"line_start":137,"line_end":137,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713442,"byte_end":8713471,"line_start":138,"line_end":138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713476,"byte_end":8713479,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713484,"byte_end":8713531,"line_start":140,"line_end":140,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713536,"byte_end":8713539,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713544,"byte_end":8713558,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713563,"byte_end":8713566,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713571,"byte_end":8713584,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713589,"byte_end":8713621,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713626,"byte_end":8713629,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713634,"byte_end":8713650,"line_start":147,"line_end":147,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713655,"byte_end":8713658,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713663,"byte_end":8713681,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713686,"byte_end":8713725,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713730,"byte_end":8713800,"line_start":151,"line_end":151,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713805,"byte_end":8713808,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713813,"byte_end":8713852,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713857,"byte_end":8713927,"line_start":154,"line_end":154,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8713932,"byte_end":8713995,"line_start":155,"line_end":155,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714000,"byte_end":8714009,"line_start":156,"line_end":156,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714014,"byte_end":8714017,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714022,"byte_end":8714036,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714041,"byte_end":8714046,"line_start":159,"line_end":159,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714051,"byte_end":8714058,"line_start":160,"line_end":160,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714418,"byte_end":8714429,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&mut Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714195,"byte_end":8714267,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714272,"byte_end":8714275,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714280,"byte_end":8714356,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8714361,"byte_end":8714406,"line_start":168,"line_end":168,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717291,"byte_end":8717299,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715276,"byte_end":8715348,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715353,"byte_end":8715356,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715361,"byte_end":8715431,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715436,"byte_end":8715512,"line_start":200,"line_end":200,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715517,"byte_end":8715561,"line_start":201,"line_end":201,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715566,"byte_end":8715569,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715574,"byte_end":8715649,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715654,"byte_end":8715730,"line_start":204,"line_end":204,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715735,"byte_end":8715800,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715805,"byte_end":8715860,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715865,"byte_end":8715868,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715873,"byte_end":8715944,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8715949,"byte_end":8716024,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716029,"byte_end":8716068,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716073,"byte_end":8716076,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716081,"byte_end":8716144,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716149,"byte_end":8716152,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716157,"byte_end":8716230,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716235,"byte_end":8716266,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716271,"byte_end":8716274,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716279,"byte_end":8716352,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716357,"byte_end":8716432,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716437,"byte_end":8716510,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716515,"byte_end":8716542,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716547,"byte_end":8716550,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716555,"byte_end":8716569,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716574,"byte_end":8716577,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716582,"byte_end":8716600,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716605,"byte_end":8716631,"line_start":225,"line_end":225,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716636,"byte_end":8716668,"line_start":226,"line_end":226,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716673,"byte_end":8716676,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716681,"byte_end":8716699,"line_start":228,"line_end":228,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716704,"byte_end":8716755,"line_start":229,"line_end":229,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716760,"byte_end":8716831,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716836,"byte_end":8716896,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716901,"byte_end":8716915,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716920,"byte_end":8716925,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716930,"byte_end":8716937,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716942,"byte_end":8716945,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716950,"byte_end":8716962,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716967,"byte_end":8716970,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8716975,"byte_end":8717035,"line_start":238,"line_end":238,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717040,"byte_end":8717043,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717048,"byte_end":8717118,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717123,"byte_end":8717196,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717201,"byte_end":8717279,"line_start":242,"line_end":242,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718383,"byte_end":8718393,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717657,"byte_end":8717718,"line_start":254,"line_end":254,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717723,"byte_end":8717726,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717731,"byte_end":8717804,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717809,"byte_end":8717843,"line_start":257,"line_end":257,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717848,"byte_end":8717851,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717856,"byte_end":8717870,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717875,"byte_end":8717878,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717883,"byte_end":8717901,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717906,"byte_end":8717938,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717943,"byte_end":8717946,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717951,"byte_end":8717967,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8717972,"byte_end":8718027,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718032,"byte_end":8718035,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718040,"byte_end":8718058,"line_start":267,"line_end":267,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718063,"byte_end":8718102,"line_start":268,"line_end":268,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718107,"byte_end":8718173,"line_start":269,"line_end":269,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718178,"byte_end":8718181,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718186,"byte_end":8718228,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718233,"byte_end":8718322,"line_start":272,"line_end":272,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718327,"byte_end":8718330,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718335,"byte_end":8718349,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718354,"byte_end":8718359,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718364,"byte_end":8718371,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719824,"byte_end":8719832,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718479,"byte_end":8718553,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718558,"byte_end":8718561,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718566,"byte_end":8718628,"line_start":283,"line_end":283,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718633,"byte_end":8718636,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718641,"byte_end":8718717,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718722,"byte_end":8718791,"line_start":286,"line_end":286,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718796,"byte_end":8718825,"line_start":287,"line_end":287,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718830,"byte_end":8718833,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718838,"byte_end":8718850,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718855,"byte_end":8718858,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718863,"byte_end":8718938,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8718943,"byte_end":8719018,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719023,"byte_end":8719097,"line_start":293,"line_end":293,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719102,"byte_end":8719177,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719182,"byte_end":8719190,"line_start":295,"line_end":295,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719195,"byte_end":8719198,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719203,"byte_end":8719217,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719222,"byte_end":8719225,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719230,"byte_end":8719243,"line_start":299,"line_end":299,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719248,"byte_end":8719301,"line_start":300,"line_end":300,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719306,"byte_end":8719309,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719314,"byte_end":8719332,"line_start":302,"line_end":302,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719337,"byte_end":8719358,"line_start":303,"line_end":303,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719363,"byte_end":8719441,"line_start":304,"line_end":304,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719446,"byte_end":8719493,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719498,"byte_end":8719501,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719506,"byte_end":8719562,"line_start":307,"line_end":307,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719567,"byte_end":8719593,"line_start":308,"line_end":308,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719598,"byte_end":8719629,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719634,"byte_end":8719678,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719683,"byte_end":8719700,"line_start":311,"line_end":311,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719705,"byte_end":8719758,"line_start":312,"line_end":312,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719763,"byte_end":8719776,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719781,"byte_end":8719790,"line_start":314,"line_end":314,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719795,"byte_end":8719800,"line_start":315,"line_end":315,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719805,"byte_end":8719812,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720513,"byte_end":8720516,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719901,"byte_end":8719959,"line_start":321,"line_end":321,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719964,"byte_end":8719967,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8719972,"byte_end":8720032,"line_start":323,"line_end":323,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720037,"byte_end":8720040,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720045,"byte_end":8720077,"line_start":325,"line_end":325,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720082,"byte_end":8720085,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720090,"byte_end":8720104,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720109,"byte_end":8720112,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720117,"byte_end":8720130,"line_start":329,"line_end":329,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720135,"byte_end":8720167,"line_start":330,"line_end":330,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720172,"byte_end":8720175,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720180,"byte_end":8720196,"line_start":332,"line_end":332,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720201,"byte_end":8720204,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720209,"byte_end":8720227,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720232,"byte_end":8720271,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720276,"byte_end":8720338,"line_start":336,"line_end":336,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720343,"byte_end":8720346,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720351,"byte_end":8720408,"line_start":338,"line_end":338,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720413,"byte_end":8720453,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720458,"byte_end":8720461,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720466,"byte_end":8720479,"line_start":341,"line_end":341,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720484,"byte_end":8720489,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720494,"byte_end":8720501,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721155,"byte_end":8721162,"line_start":369,"line_end":369,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720588,"byte_end":8720646,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720651,"byte_end":8720654,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720659,"byte_end":8720735,"line_start":350,"line_end":350,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720740,"byte_end":8720761,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720766,"byte_end":8720769,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720774,"byte_end":8720788,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720793,"byte_end":8720796,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720801,"byte_end":8720814,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720819,"byte_end":8720851,"line_start":356,"line_end":356,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720856,"byte_end":8720859,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720864,"byte_end":8720880,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720885,"byte_end":8720888,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720893,"byte_end":8720911,"line_start":360,"line_end":360,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720916,"byte_end":8720955,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8720960,"byte_end":8721023,"line_start":362,"line_end":362,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721028,"byte_end":8721031,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721036,"byte_end":8721094,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721099,"byte_end":8721102,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721107,"byte_end":8721121,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721126,"byte_end":8721131,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721136,"byte_end":8721143,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2657},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723435,"byte_end":8723443,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2659}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723233,"byte_end":8723309,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723310,"byte_end":8723357,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723358,"byte_end":8723406,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723858,"byte_end":8723869,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723621,"byte_end":8723694,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723699,"byte_end":8723714,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723719,"byte_end":8723722,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723727,"byte_end":8723796,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723801,"byte_end":8723846,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2663},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725428,"byte_end":8725436,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725020,"byte_end":8725075,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725076,"byte_end":8725079,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725080,"byte_end":8725168,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725169,"byte_end":8725246,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725247,"byte_end":8725250,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725251,"byte_end":8725279,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725280,"byte_end":8725313,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725314,"byte_end":8725365,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725366,"byte_end":8725399,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2670},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726130,"byte_end":8726139,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725458,"byte_end":8725514,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725515,"byte_end":8725518,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725519,"byte_end":8725605,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725606,"byte_end":8725658,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725659,"byte_end":8725662,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725663,"byte_end":8725749,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725750,"byte_end":8725835,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725836,"byte_end":8725839,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725840,"byte_end":8725868,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725869,"byte_end":8725902,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725903,"byte_end":8725950,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8725951,"byte_end":8726013,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726014,"byte_end":8726067,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726068,"byte_end":8726101,"line_start":47,"line_end":47,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727196,"byte_end":8727205,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726313,"byte_end":8726387,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726392,"byte_end":8726465,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726470,"byte_end":8726484,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726489,"byte_end":8726492,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726497,"byte_end":8726570,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726575,"byte_end":8726578,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726583,"byte_end":8726597,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726602,"byte_end":8726605,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726610,"byte_end":8726623,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726628,"byte_end":8726646,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726651,"byte_end":8726681,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726686,"byte_end":8726689,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726694,"byte_end":8726727,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726732,"byte_end":8726735,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726740,"byte_end":8726758,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726763,"byte_end":8726802,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726807,"byte_end":8726876,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726881,"byte_end":8726929,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726934,"byte_end":8726964,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726969,"byte_end":8726972,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726977,"byte_end":8726999,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727004,"byte_end":8727049,"line_start":77,"line_end":77,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727054,"byte_end":8727072,"line_start":78,"line_end":78,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727077,"byte_end":8727080,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727085,"byte_end":8727099,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727104,"byte_end":8727109,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727114,"byte_end":8727121,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727126,"byte_end":8727129,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727134,"byte_end":8727184,"line_start":84,"line_end":84,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728622,"byte_end":8728626,"line_start":128,"line_end":128,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727330,"byte_end":8727400,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727405,"byte_end":8727474,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727479,"byte_end":8727518,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727523,"byte_end":8727526,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727531,"byte_end":8727599,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727604,"byte_end":8727607,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727612,"byte_end":8727652,"line_start":95,"line_end":95,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727657,"byte_end":8727660,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727665,"byte_end":8727679,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727684,"byte_end":8727687,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727692,"byte_end":8727705,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727710,"byte_end":8727740,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727745,"byte_end":8727771,"line_start":101,"line_end":101,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727776,"byte_end":8727802,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727807,"byte_end":8727810,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727815,"byte_end":8727833,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727838,"byte_end":8727889,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727894,"byte_end":8727922,"line_start":106,"line_end":106,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8727927,"byte_end":8727996,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728001,"byte_end":8728049,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728054,"byte_end":8728057,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728062,"byte_end":8728091,"line_start":110,"line_end":110,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728096,"byte_end":8728125,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728130,"byte_end":8728133,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728138,"byte_end":8728165,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728170,"byte_end":8728217,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728222,"byte_end":8728225,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728230,"byte_end":8728254,"line_start":116,"line_end":116,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728259,"byte_end":8728318,"line_start":117,"line_end":117,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728323,"byte_end":8728362,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728367,"byte_end":8728370,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728375,"byte_end":8728389,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728394,"byte_end":8728399,"line_start":121,"line_end":121,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728404,"byte_end":8728411,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728416,"byte_end":8728419,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728424,"byte_end":8728489,"line_start":124,"line_end":124,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728494,"byte_end":8728497,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728502,"byte_end":8728548,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728553,"byte_end":8728604,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2677},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731228,"byte_end":8731241,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":2678}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8730793,"byte_end":8730859,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8730860,"byte_end":8730863,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8730864,"byte_end":8730951,"line_start":26,"line_end":26,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8730952,"byte_end":8731036,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731037,"byte_end":8731040,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731041,"byte_end":8731069,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731070,"byte_end":8731113,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731114,"byte_end":8731165,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731166,"byte_end":8731199,"line_start":32,"line_end":32,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2681},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8732045,"byte_end":8732059,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":2682},{"krate":0,"index":2683}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731274,"byte_end":8731341,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731342,"byte_end":8731345,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731346,"byte_end":8731432,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731433,"byte_end":8731485,"line_start":41,"line_end":41,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731486,"byte_end":8731489,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Dropping the write half will close the TCP stream in both directions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731490,"byte_end":8731563,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731564,"byte_end":8731567,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731568,"byte_end":8731654,"line_start":45,"line_end":45,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait. Examples import this trait through [the prelude].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731655,"byte_end":8731740,"line_start":46,"line_end":46,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731741,"byte_end":8731744,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731745,"byte_end":8731773,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731774,"byte_end":8731817,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731818,"byte_end":8731865,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731866,"byte_end":8731928,"line_start":51,"line_end":51,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731929,"byte_end":8731982,"line_start":52,"line_end":52,"column_start":1,"column_end":54}},{"value":"/ [the prelude]: crate::prelude","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8731983,"byte_end":8732016,"line_start":53,"line_end":53,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2686},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733003,"byte_end":8733015,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8732876,"byte_end":8732953,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/ not be reunited.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8732954,"byte_end":8732974,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2688},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733016,"byte_end":8733033,"line_start":89,"line_end":89,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":2686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2689},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733035,"byte_end":8733053,"line_start":89,"line_end":89,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":2686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733599,"byte_end":8733606,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733336,"byte_end":8733405,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733410,"byte_end":8733474,"line_start":104,"line_end":104,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733479,"byte_end":8733531,"line_start":105,"line_end":105,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733536,"byte_end":8733539,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733544,"byte_end":8733587,"line_start":107,"line_end":107,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734597,"byte_end":8734606,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733713,"byte_end":8733787,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733792,"byte_end":8733865,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733870,"byte_end":8733884,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733889,"byte_end":8733892,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733897,"byte_end":8733970,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733975,"byte_end":8733978,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733983,"byte_end":8733997,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734002,"byte_end":8734005,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734010,"byte_end":8734023,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734028,"byte_end":8734046,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734051,"byte_end":8734081,"line_start":122,"line_end":122,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734086,"byte_end":8734089,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734094,"byte_end":8734127,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734132,"byte_end":8734135,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734140,"byte_end":8734158,"line_start":126,"line_end":126,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734163,"byte_end":8734202,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734207,"byte_end":8734272,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734277,"byte_end":8734330,"line_start":129,"line_end":129,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734335,"byte_end":8734365,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734370,"byte_end":8734373,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734378,"byte_end":8734400,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734405,"byte_end":8734450,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734455,"byte_end":8734473,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734478,"byte_end":8734481,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734486,"byte_end":8734500,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734505,"byte_end":8734510,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734515,"byte_end":8734522,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734527,"byte_end":8734530,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734535,"byte_end":8734585,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736028,"byte_end":8736032,"line_start":184,"line_end":184,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734735,"byte_end":8734805,"line_start":145,"line_end":145,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734810,"byte_end":8734879,"line_start":146,"line_end":146,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734884,"byte_end":8734923,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734928,"byte_end":8734931,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8734936,"byte_end":8735004,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735009,"byte_end":8735012,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735017,"byte_end":8735057,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735062,"byte_end":8735065,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735070,"byte_end":8735084,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735089,"byte_end":8735092,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735097,"byte_end":8735110,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735115,"byte_end":8735145,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735150,"byte_end":8735176,"line_start":157,"line_end":157,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735181,"byte_end":8735207,"line_start":158,"line_end":158,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735212,"byte_end":8735215,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735220,"byte_end":8735238,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735243,"byte_end":8735294,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735299,"byte_end":8735327,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735332,"byte_end":8735397,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735402,"byte_end":8735455,"line_start":164,"line_end":164,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735460,"byte_end":8735463,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735468,"byte_end":8735497,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735502,"byte_end":8735531,"line_start":167,"line_end":167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735536,"byte_end":8735539,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735544,"byte_end":8735571,"line_start":169,"line_end":169,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735576,"byte_end":8735623,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735628,"byte_end":8735631,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735636,"byte_end":8735660,"line_start":172,"line_end":172,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735665,"byte_end":8735724,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735729,"byte_end":8735768,"line_start":174,"line_end":174,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735773,"byte_end":8735776,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735781,"byte_end":8735795,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735800,"byte_end":8735805,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735810,"byte_end":8735817,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735822,"byte_end":8735825,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735830,"byte_end":8735895,"line_start":180,"line_end":180,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735900,"byte_end":8735903,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735908,"byte_end":8735954,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8735959,"byte_end":8736010,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736765,"byte_end":8736772,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736502,"byte_end":8736571,"line_start":204,"line_end":204,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736576,"byte_end":8736640,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736645,"byte_end":8736697,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736702,"byte_end":8736705,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736710,"byte_end":8736753,"line_start":208,"line_end":208,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8737058,"byte_end":8737064,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the stream until the read half\n is dropped. If the read half has already been dropped, this closes the\n stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the stream until the read half","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736877,"byte_end":8736951,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ is dropped. If the read half has already been dropped, this closes the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736956,"byte_end":8737030,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8737035,"byte_end":8737046,"line_start":214,"line_end":214,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2692},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740353,"byte_end":8740362,"line_start":58,"line_end":58,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2693}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22530,"byte_end":22553,"line_start":298,"line_end":298,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741656,"byte_end":8741663,"line_start":97,"line_end":97,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740441,"byte_end":8740485,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740490,"byte_end":8740493,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740498,"byte_end":8740568,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ `ToSocketAddrs` trait can be supplied for the address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740573,"byte_end":8740631,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740636,"byte_end":8740639,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740644,"byte_end":8740720,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740725,"byte_end":8740794,"line_start":70,"line_end":70,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740799,"byte_end":8740875,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740880,"byte_end":8740939,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740944,"byte_end":8740947,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740952,"byte_end":8740966,"line_start":74,"line_end":74,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740971,"byte_end":8740974,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740979,"byte_end":8740992,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740997,"byte_end":8741027,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741032,"byte_end":8741058,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741063,"byte_end":8741089,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741094,"byte_end":8741097,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741102,"byte_end":8741120,"line_start":81,"line_end":81,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741125,"byte_end":8741176,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741181,"byte_end":8741209,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741214,"byte_end":8741283,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741288,"byte_end":8741291,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741296,"byte_end":8741323,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741328,"byte_end":8741377,"line_start":87,"line_end":87,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741382,"byte_end":8741385,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741390,"byte_end":8741404,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741409,"byte_end":8741414,"line_start":90,"line_end":90,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741419,"byte_end":8741426,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741431,"byte_end":8741434,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741439,"byte_end":8741510,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741515,"byte_end":8741518,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741523,"byte_end":8741580,"line_start":95,"line_end":95,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8741585,"byte_end":8741638,"line_start":96,"line_end":96,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8744096,"byte_end":8744104,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743129,"byte_end":8743186,"line_start":142,"line_end":142,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743191,"byte_end":8743194,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743199,"byte_end":8743274,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743279,"byte_end":8743352,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743357,"byte_end":8743360,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743365,"byte_end":8743379,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743384,"byte_end":8743387,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743392,"byte_end":8743410,"line_start":149,"line_end":149,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743415,"byte_end":8743441,"line_start":150,"line_end":150,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743446,"byte_end":8743476,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743481,"byte_end":8743484,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743489,"byte_end":8743507,"line_start":153,"line_end":153,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743512,"byte_end":8743563,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743568,"byte_end":8743642,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743647,"byte_end":8743701,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743706,"byte_end":8743720,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743725,"byte_end":8743730,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743735,"byte_end":8743742,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743747,"byte_end":8743750,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743755,"byte_end":8743767,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743772,"byte_end":8743775,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743780,"byte_end":8743840,"line_start":163,"line_end":163,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743845,"byte_end":8743848,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743853,"byte_end":8743923,"line_start":165,"line_end":165,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8743928,"byte_end":8744001,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8744006,"byte_end":8744084,"line_start":167,"line_end":167,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8744501,"byte_end":8744512,"line_start":178,"line_end":178,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"pub async fn connect_std<'_>(net::TcpStream, &'_ SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745660,"byte_end":8745670,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745261,"byte_end":8745320,"line_start":198,"line_end":198,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745325,"byte_end":8745328,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745333,"byte_end":8745347,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745352,"byte_end":8745355,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745360,"byte_end":8745373,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745378,"byte_end":8745408,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745413,"byte_end":8745416,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745421,"byte_end":8745485,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745490,"byte_end":8745551,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745556,"byte_end":8745559,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745564,"byte_end":8745607,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745612,"byte_end":8745624,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745629,"byte_end":8745636,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745641,"byte_end":8745648,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746159,"byte_end":8746168,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745756,"byte_end":8745820,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745825,"byte_end":8745828,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745833,"byte_end":8745847,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745852,"byte_end":8745855,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745860,"byte_end":8745873,"line_start":220,"line_end":220,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745878,"byte_end":8745908,"line_start":221,"line_end":221,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745913,"byte_end":8745916,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745921,"byte_end":8745985,"line_start":223,"line_end":223,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8745990,"byte_end":8746051,"line_start":224,"line_end":224,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746056,"byte_end":8746059,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746064,"byte_end":8746106,"line_start":226,"line_end":226,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746111,"byte_end":8746123,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746128,"byte_end":8746135,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746140,"byte_end":8746147,"line_start":229,"line_end":229,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747326,"byte_end":8747335,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746253,"byte_end":8746328,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746333,"byte_end":8746406,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746411,"byte_end":8746425,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746430,"byte_end":8746433,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746438,"byte_end":8746456,"line_start":238,"line_end":238,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746461,"byte_end":8746464,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746469,"byte_end":8746494,"line_start":240,"line_end":240,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746499,"byte_end":8746502,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746507,"byte_end":8746558,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746563,"byte_end":8746646,"line_start":243,"line_end":243,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746651,"byte_end":8746706,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746711,"byte_end":8746714,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746719,"byte_end":8746731,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746736,"byte_end":8746739,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746744,"byte_end":8746819,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746824,"byte_end":8746827,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746832,"byte_end":8746846,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746851,"byte_end":8746854,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746859,"byte_end":8746872,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746877,"byte_end":8746895,"line_start":253,"line_end":253,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746900,"byte_end":8746930,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746935,"byte_end":8746938,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746943,"byte_end":8746976,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746981,"byte_end":8746984,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8746989,"byte_end":8747007,"line_start":258,"line_end":258,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747012,"byte_end":8747051,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747056,"byte_end":8747125,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747130,"byte_end":8747160,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747165,"byte_end":8747168,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747173,"byte_end":8747195,"line_start":263,"line_end":263,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747200,"byte_end":8747242,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747247,"byte_end":8747265,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747270,"byte_end":8747273,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747278,"byte_end":8747292,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747297,"byte_end":8747302,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747307,"byte_end":8747314,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749247,"byte_end":8749251,"line_start":328,"line_end":328,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8747996,"byte_end":8748066,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748071,"byte_end":8748140,"line_start":292,"line_end":292,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748145,"byte_end":8748184,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748189,"byte_end":8748192,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748197,"byte_end":8748271,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748276,"byte_end":8748336,"line_start":296,"line_end":296,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748341,"byte_end":8748344,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748349,"byte_end":8748363,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748368,"byte_end":8748371,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748376,"byte_end":8748389,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748394,"byte_end":8748424,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748429,"byte_end":8748455,"line_start":302,"line_end":302,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748460,"byte_end":8748486,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748491,"byte_end":8748494,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748499,"byte_end":8748517,"line_start":305,"line_end":305,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748522,"byte_end":8748573,"line_start":306,"line_end":306,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748578,"byte_end":8748606,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748611,"byte_end":8748680,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748685,"byte_end":8748688,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748693,"byte_end":8748722,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748727,"byte_end":8748756,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748761,"byte_end":8748764,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748769,"byte_end":8748796,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748801,"byte_end":8748845,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748850,"byte_end":8748853,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748858,"byte_end":8748882,"line_start":316,"line_end":316,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748887,"byte_end":8748943,"line_start":317,"line_end":317,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748948,"byte_end":8748987,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8748992,"byte_end":8748995,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749000,"byte_end":8749014,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749019,"byte_end":8749024,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749029,"byte_end":8749036,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749041,"byte_end":8749044,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749049,"byte_end":8749114,"line_start":324,"line_end":324,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749119,"byte_end":8749122,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749127,"byte_end":8749173,"line_start":326,"line_end":326,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749178,"byte_end":8749229,"line_start":327,"line_end":327,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750120,"byte_end":8750128,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749365,"byte_end":8749431,"line_start":332,"line_end":332,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749436,"byte_end":8749439,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749444,"byte_end":8749516,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749521,"byte_end":8749590,"line_start":335,"line_end":335,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749595,"byte_end":8749628,"line_start":336,"line_end":336,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749633,"byte_end":8749636,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749641,"byte_end":8749655,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749660,"byte_end":8749663,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749668,"byte_end":8749681,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749686,"byte_end":8749716,"line_start":341,"line_end":341,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749721,"byte_end":8749747,"line_start":342,"line_end":342,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749752,"byte_end":8749779,"line_start":343,"line_end":343,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749784,"byte_end":8749787,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749792,"byte_end":8749810,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749815,"byte_end":8749866,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749871,"byte_end":8749899,"line_start":347,"line_end":347,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749904,"byte_end":8749969,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749974,"byte_end":8749977,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8749982,"byte_end":8750012,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750017,"byte_end":8750059,"line_start":351,"line_end":351,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750064,"byte_end":8750067,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750072,"byte_end":8750086,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750091,"byte_end":8750096,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750101,"byte_end":8750108,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750754,"byte_end":8750761,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750222,"byte_end":8750284,"line_start":360,"line_end":360,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750289,"byte_end":8750292,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750297,"byte_end":8750361,"line_start":362,"line_end":362,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750366,"byte_end":8750369,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750374,"byte_end":8750417,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750422,"byte_end":8750425,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750430,"byte_end":8750444,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750449,"byte_end":8750452,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750457,"byte_end":8750470,"line_start":368,"line_end":368,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750475,"byte_end":8750505,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750510,"byte_end":8750513,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750518,"byte_end":8750582,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750587,"byte_end":8750648,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750653,"byte_end":8750656,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750661,"byte_end":8750701,"line_start":374,"line_end":374,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750706,"byte_end":8750718,"line_start":375,"line_end":375,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750723,"byte_end":8750730,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750735,"byte_end":8750742,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751568,"byte_end":8751579,"line_start":402,"line_end":402,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750838,"byte_end":8750900,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750905,"byte_end":8750908,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750913,"byte_end":8750982,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8750987,"byte_end":8751060,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751065,"byte_end":8751138,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751143,"byte_end":8751218,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751223,"byte_end":8751241,"line_start":388,"line_end":388,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751246,"byte_end":8751249,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751254,"byte_end":8751268,"line_start":390,"line_end":390,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751273,"byte_end":8751276,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751281,"byte_end":8751294,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751299,"byte_end":8751329,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751334,"byte_end":8751337,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751342,"byte_end":8751406,"line_start":395,"line_end":395,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751411,"byte_end":8751472,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751477,"byte_end":8751480,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751485,"byte_end":8751515,"line_start":398,"line_end":398,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751520,"byte_end":8751532,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751537,"byte_end":8751544,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751549,"byte_end":8751556,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752246,"byte_end":8752262,"line_start":424,"line_end":424,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751680,"byte_end":8751740,"line_start":406,"line_end":406,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751745,"byte_end":8751748,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751753,"byte_end":8751826,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751831,"byte_end":8751834,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751839,"byte_end":8751900,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751905,"byte_end":8751908,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751913,"byte_end":8751927,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751932,"byte_end":8751935,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751940,"byte_end":8751953,"line_start":414,"line_end":414,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751958,"byte_end":8751988,"line_start":415,"line_end":415,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8751993,"byte_end":8751996,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752001,"byte_end":8752065,"line_start":417,"line_end":417,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752070,"byte_end":8752131,"line_start":418,"line_end":418,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752136,"byte_end":8752139,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752144,"byte_end":8752193,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752198,"byte_end":8752210,"line_start":421,"line_end":421,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752215,"byte_end":8752222,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752227,"byte_end":8752234,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752854,"byte_end":8752874,"line_start":445,"line_end":445,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752349,"byte_end":8752409,"line_start":428,"line_end":428,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752414,"byte_end":8752417,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752422,"byte_end":8752494,"line_start":430,"line_end":430,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752499,"byte_end":8752519,"line_start":431,"line_end":431,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752524,"byte_end":8752527,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752532,"byte_end":8752546,"line_start":433,"line_end":433,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752551,"byte_end":8752554,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752559,"byte_end":8752572,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752577,"byte_end":8752607,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752612,"byte_end":8752615,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752620,"byte_end":8752684,"line_start":438,"line_end":438,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752689,"byte_end":8752750,"line_start":439,"line_end":439,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752755,"byte_end":8752758,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752763,"byte_end":8752801,"line_start":441,"line_end":441,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752806,"byte_end":8752818,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752823,"byte_end":8752830,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752835,"byte_end":8752842,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753545,"byte_end":8753561,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8752979,"byte_end":8753039,"line_start":449,"line_end":449,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753044,"byte_end":8753047,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753052,"byte_end":8753125,"line_start":451,"line_end":451,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753130,"byte_end":8753133,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753138,"byte_end":8753199,"line_start":453,"line_end":453,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753204,"byte_end":8753207,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753212,"byte_end":8753226,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753231,"byte_end":8753234,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753239,"byte_end":8753252,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753257,"byte_end":8753287,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753292,"byte_end":8753295,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753300,"byte_end":8753364,"line_start":460,"line_end":460,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753369,"byte_end":8753430,"line_start":461,"line_end":461,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753435,"byte_end":8753438,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753443,"byte_end":8753492,"line_start":463,"line_end":463,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753497,"byte_end":8753509,"line_start":464,"line_end":464,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753514,"byte_end":8753521,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753526,"byte_end":8753533,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754150,"byte_end":8754170,"line_start":488,"line_end":488,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753648,"byte_end":8753708,"line_start":471,"line_end":471,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753713,"byte_end":8753716,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753721,"byte_end":8753795,"line_start":473,"line_end":473,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753800,"byte_end":8753815,"line_start":474,"line_end":474,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753820,"byte_end":8753823,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753828,"byte_end":8753842,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753847,"byte_end":8753850,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753855,"byte_end":8753868,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753873,"byte_end":8753903,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753908,"byte_end":8753911,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753916,"byte_end":8753980,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8753985,"byte_end":8754046,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754051,"byte_end":8754054,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754059,"byte_end":8754097,"line_start":484,"line_end":484,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754102,"byte_end":8754114,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754119,"byte_end":8754126,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754131,"byte_end":8754138,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754872,"byte_end":8754881,"line_start":511,"line_end":511,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"pub fn keepalive(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754275,"byte_end":8754351,"line_start":492,"line_end":492,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754356,"byte_end":8754394,"line_start":493,"line_end":493,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754399,"byte_end":8754402,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754407,"byte_end":8754473,"line_start":495,"line_end":495,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754478,"byte_end":8754481,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754486,"byte_end":8754533,"line_start":497,"line_end":497,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754538,"byte_end":8754541,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754546,"byte_end":8754560,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754565,"byte_end":8754568,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754573,"byte_end":8754586,"line_start":501,"line_end":501,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754591,"byte_end":8754621,"line_start":502,"line_end":502,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754626,"byte_end":8754629,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754634,"byte_end":8754698,"line_start":504,"line_end":504,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754703,"byte_end":8754764,"line_start":505,"line_end":505,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754769,"byte_end":8754772,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754777,"byte_end":8754819,"line_start":507,"line_end":507,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754824,"byte_end":8754836,"line_start":508,"line_end":508,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754841,"byte_end":8754848,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754853,"byte_end":8754860,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755912,"byte_end":8755925,"line_start":540,"line_end":540,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"pub fn set_keepalive(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8754972,"byte_end":8755046,"line_start":515,"line_end":515,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755051,"byte_end":8755054,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755059,"byte_end":8755126,"line_start":517,"line_end":517,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755131,"byte_end":8755205,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755210,"byte_end":8755272,"line_start":519,"line_end":519,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755277,"byte_end":8755280,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755285,"byte_end":8755359,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755364,"byte_end":8755439,"line_start":522,"line_end":522,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755444,"byte_end":8755468,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755473,"byte_end":8755476,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755481,"byte_end":8755544,"line_start":525,"line_end":525,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755549,"byte_end":8755583,"line_start":526,"line_end":526,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755588,"byte_end":8755591,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755596,"byte_end":8755610,"line_start":528,"line_end":528,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755615,"byte_end":8755618,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755623,"byte_end":8755636,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755641,"byte_end":8755671,"line_start":531,"line_end":531,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755676,"byte_end":8755679,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755684,"byte_end":8755748,"line_start":533,"line_end":533,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755753,"byte_end":8755814,"line_start":534,"line_end":534,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755819,"byte_end":8755822,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755827,"byte_end":8755859,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755864,"byte_end":8755876,"line_start":537,"line_end":537,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755881,"byte_end":8755888,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8755893,"byte_end":8755900,"line_start":539,"line_end":539,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756556,"byte_end":8756559,"line_start":562,"line_end":562,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756044,"byte_end":8756102,"line_start":544,"line_end":544,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756107,"byte_end":8756110,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756115,"byte_end":8756175,"line_start":546,"line_end":546,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756180,"byte_end":8756183,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756188,"byte_end":8756223,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756228,"byte_end":8756231,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756236,"byte_end":8756250,"line_start":550,"line_end":550,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756255,"byte_end":8756258,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756263,"byte_end":8756276,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756281,"byte_end":8756311,"line_start":553,"line_end":553,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756316,"byte_end":8756319,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756324,"byte_end":8756388,"line_start":555,"line_end":555,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756393,"byte_end":8756454,"line_start":556,"line_end":556,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756459,"byte_end":8756462,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756467,"byte_end":8756503,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756508,"byte_end":8756520,"line_start":559,"line_end":559,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756525,"byte_end":8756532,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756537,"byte_end":8756544,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757126,"byte_end":8757133,"line_start":583,"line_end":583,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756631,"byte_end":8756689,"line_start":566,"line_end":566,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756694,"byte_end":8756697,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756702,"byte_end":8756778,"line_start":568,"line_end":568,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756783,"byte_end":8756804,"line_start":569,"line_end":569,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756809,"byte_end":8756812,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756817,"byte_end":8756831,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756836,"byte_end":8756839,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756844,"byte_end":8756857,"line_start":573,"line_end":573,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756862,"byte_end":8756892,"line_start":574,"line_end":574,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756897,"byte_end":8756900,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756905,"byte_end":8756969,"line_start":576,"line_end":576,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8756974,"byte_end":8757035,"line_start":577,"line_end":577,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757040,"byte_end":8757043,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757048,"byte_end":8757073,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757078,"byte_end":8757090,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757095,"byte_end":8757102,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757107,"byte_end":8757114,"line_start":582,"line_end":582,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757775,"byte_end":8757781,"line_start":606,"line_end":606,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757221,"byte_end":8757293,"line_start":587,"line_end":587,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757298,"byte_end":8757309,"line_start":588,"line_end":588,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757314,"byte_end":8757317,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757322,"byte_end":8757385,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757390,"byte_end":8757393,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757398,"byte_end":8757439,"line_start":592,"line_end":592,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757444,"byte_end":8757447,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757452,"byte_end":8757466,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757471,"byte_end":8757474,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757479,"byte_end":8757492,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757497,"byte_end":8757527,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757532,"byte_end":8757535,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757540,"byte_end":8757604,"line_start":599,"line_end":599,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757609,"byte_end":8757670,"line_start":600,"line_end":600,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757675,"byte_end":8757678,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757683,"byte_end":8757722,"line_start":602,"line_end":602,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757727,"byte_end":8757739,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757744,"byte_end":8757751,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757756,"byte_end":8757763,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758723,"byte_end":8758733,"line_start":634,"line_end":634,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757869,"byte_end":8757939,"line_start":610,"line_end":610,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757944,"byte_end":8757955,"line_start":611,"line_end":611,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757960,"byte_end":8757963,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8757968,"byte_end":8758043,"line_start":613,"line_end":613,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758048,"byte_end":8758111,"line_start":614,"line_end":614,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758116,"byte_end":8758187,"line_start":615,"line_end":615,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758192,"byte_end":8758209,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758214,"byte_end":8758217,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758222,"byte_end":8758295,"line_start":618,"line_end":618,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758300,"byte_end":8758376,"line_start":619,"line_end":619,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758381,"byte_end":8758397,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758402,"byte_end":8758405,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758410,"byte_end":8758424,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758429,"byte_end":8758432,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758437,"byte_end":8758450,"line_start":624,"line_end":624,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758455,"byte_end":8758485,"line_start":625,"line_end":625,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758490,"byte_end":8758493,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758498,"byte_end":8758562,"line_start":627,"line_end":627,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758567,"byte_end":8758628,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758633,"byte_end":8758636,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758641,"byte_end":8758670,"line_start":630,"line_end":630,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758675,"byte_end":8758687,"line_start":631,"line_end":631,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758692,"byte_end":8758699,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758704,"byte_end":8758711,"line_start":633,"line_end":633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759173,"byte_end":8759178,"line_start":645,"line_end":645,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758837,"byte_end":8758914,"line_start":638,"line_end":638,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758919,"byte_end":8758965,"line_start":639,"line_end":639,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758970,"byte_end":8758973,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8758978,"byte_end":8759057,"line_start":641,"line_end":641,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759062,"byte_end":8759105,"line_start":642,"line_end":642,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759110,"byte_end":8759113,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759118,"byte_end":8759161,"line_start":644,"line_end":644,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759586,"byte_end":8759596,"line_start":656,"line_end":656,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759256,"byte_end":8759333,"line_start":649,"line_end":649,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759338,"byte_end":8759384,"line_start":650,"line_end":650,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759389,"byte_end":8759392,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759397,"byte_end":8759475,"line_start":652,"line_end":652,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759480,"byte_end":8759528,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759533,"byte_end":8759536,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8759541,"byte_end":8759574,"line_start":655,"line_end":655,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2694},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2695},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2818},{"krate":0,"index":9966},{"krate":0,"index":2819}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23366,"byte_end":23389,"line_start":340,"line_end":340,"column_start":13,"column_end":36}},{"value":"/ UDP utility types.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/mod.rs","byte_start":8766849,"byte_end":8766871,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2821},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8767327,"byte_end":8767336,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":2822}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23366,"byte_end":23389,"line_start":340,"line_end":340,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8767534,"byte_end":8767538,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8767415,"byte_end":8767487,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8767492,"byte_end":8767516,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769241,"byte_end":8769249,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768373,"byte_end":8768445,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768450,"byte_end":8768453,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768458,"byte_end":8768531,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768536,"byte_end":8768611,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768616,"byte_end":8768663,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768668,"byte_end":8768671,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768676,"byte_end":8768749,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768754,"byte_end":8768829,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768834,"byte_end":8768887,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768892,"byte_end":8768895,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768900,"byte_end":8768912,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768917,"byte_end":8768920,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768925,"byte_end":8768985,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768990,"byte_end":8768993,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8768998,"byte_end":8769068,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769073,"byte_end":8769146,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769151,"byte_end":8769229,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769633,"byte_end":8769638,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"pub fn split(Self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.\n","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769441,"byte_end":8769518,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769523,"byte_end":8769596,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769601,"byte_end":8769621,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769773,"byte_end":8769783,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769702,"byte_end":8769761,"line_start":81,"line_end":81,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770055,"byte_end":8770062,"line_start":89,"line_end":89,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769869,"byte_end":8769943,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8769948,"byte_end":8770021,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770026,"byte_end":8770037,"line_start":88,"line_end":88,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770994,"byte_end":8770998,"line_start":115,"line_end":115,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770596,"byte_end":8770694,"line_start":108,"line_end":108,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770699,"byte_end":8770770,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770775,"byte_end":8770778,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770783,"byte_end":8770866,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770871,"byte_end":8770931,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770936,"byte_end":8770939,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8770944,"byte_end":8770976,"line_start":114,"line_end":114,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8771725,"byte_end":8771734,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772747,"byte_end":8772751,"line_start":154,"line_end":154,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772112,"byte_end":8772191,"line_start":142,"line_end":142,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772196,"byte_end":8772280,"line_start":143,"line_end":143,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772285,"byte_end":8772317,"line_start":144,"line_end":144,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772322,"byte_end":8772325,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772330,"byte_end":8772411,"line_start":146,"line_end":146,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772416,"byte_end":8772499,"line_start":147,"line_end":147,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772504,"byte_end":8772538,"line_start":148,"line_end":148,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772543,"byte_end":8772546,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772551,"byte_end":8772634,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772639,"byte_end":8772684,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772689,"byte_end":8772692,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772697,"byte_end":8772729,"line_start":153,"line_end":153,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8772891,"byte_end":8772900,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8773619,"byte_end":8773626,"line_start":176,"line_end":176,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ mut Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8773328,"byte_end":8773400,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8773405,"byte_end":8773476,"line_start":172,"line_end":172,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8773481,"byte_end":8773484,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8773489,"byte_end":8773565,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8773570,"byte_end":8773601,"line_start":175,"line_end":175,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774098,"byte_end":8774110,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], &SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774949,"byte_end":8774958,"line_start":213,"line_end":213,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774559,"byte_end":8774638,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774643,"byte_end":8774710,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774715,"byte_end":8774718,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774723,"byte_end":8774801,"line_start":210,"line_end":210,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774806,"byte_end":8774884,"line_start":211,"line_end":211,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8774889,"byte_end":8774931,"line_start":212,"line_end":212,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775117,"byte_end":8775131,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut [u8])\n-> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775828,"byte_end":8775837,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775616,"byte_end":8775680,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775685,"byte_end":8775688,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775693,"byte_end":8775759,"line_start":236,"line_end":236,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775764,"byte_end":8775767,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775772,"byte_end":8775816,"line_start":238,"line_end":238,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776093,"byte_end":8776106,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775916,"byte_end":8775980,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775985,"byte_end":8775988,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8775993,"byte_end":8776064,"line_start":245,"line_end":245,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776069,"byte_end":8776081,"line_start":246,"line_end":246,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776440,"byte_end":8776457,"line_start":256,"line_end":256,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776199,"byte_end":8776268,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776273,"byte_end":8776276,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776281,"byte_end":8776355,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776360,"byte_end":8776363,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776368,"byte_end":8776428,"line_start":255,"line_end":255,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776797,"byte_end":8776818,"line_start":267,"line_end":267,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776544,"byte_end":8776613,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776618,"byte_end":8776621,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776626,"byte_end":8776700,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776705,"byte_end":8776708,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776713,"byte_end":8776723,"line_start":264,"line_end":264,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776728,"byte_end":8776731,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776736,"byte_end":8776785,"line_start":266,"line_end":266,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777156,"byte_end":8777172,"line_start":276,"line_end":276,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776919,"byte_end":8776987,"line_start":271,"line_end":271,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8776992,"byte_end":8776995,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777000,"byte_end":8777073,"line_start":273,"line_end":273,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777078,"byte_end":8777081,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777086,"byte_end":8777144,"line_start":275,"line_end":275,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777651,"byte_end":8777671,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777257,"byte_end":8777325,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777330,"byte_end":8777333,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777338,"byte_end":8777408,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777413,"byte_end":8777487,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777492,"byte_end":8777554,"line_start":284,"line_end":284,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777559,"byte_end":8777562,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777567,"byte_end":8777577,"line_start":286,"line_end":286,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777582,"byte_end":8777585,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777590,"byte_end":8777639,"line_start":288,"line_end":288,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778015,"byte_end":8778032,"line_start":298,"line_end":298,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777772,"byte_end":8777843,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777848,"byte_end":8777851,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777856,"byte_end":8777930,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777935,"byte_end":8777938,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8777943,"byte_end":8778003,"line_start":297,"line_end":297,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778376,"byte_end":8778397,"line_start":309,"line_end":309,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778119,"byte_end":8778190,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778195,"byte_end":8778198,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778203,"byte_end":8778279,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778284,"byte_end":8778287,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778292,"byte_end":8778302,"line_start":306,"line_end":306,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778307,"byte_end":8778310,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778315,"byte_end":8778364,"line_start":308,"line_end":308,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778686,"byte_end":8778689,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778498,"byte_end":8778556,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778561,"byte_end":8778564,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778569,"byte_end":8778629,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778634,"byte_end":8778637,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778642,"byte_end":8778674,"line_start":317,"line_end":317,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778946,"byte_end":8778953,"line_start":326,"line_end":326,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778761,"byte_end":8778819,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778824,"byte_end":8778827,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778832,"byte_end":8778908,"line_start":324,"line_end":324,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8778913,"byte_end":8778934,"line_start":325,"line_end":325,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779471,"byte_end":8779488,"line_start":337,"line_end":337,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779041,"byte_end":8779099,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779104,"byte_end":8779107,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779112,"byte_end":8779186,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779191,"byte_end":8779264,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779269,"byte_end":8779341,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779346,"byte_end":8779416,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779421,"byte_end":8779459,"line_start":336,"line_end":336,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779953,"byte_end":8779970,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779637,"byte_end":8779697,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779702,"byte_end":8779705,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779710,"byte_end":8779784,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779789,"byte_end":8779862,"line_start":344,"line_end":344,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8779867,"byte_end":8779941,"line_start":345,"line_end":345,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780332,"byte_end":8780350,"line_start":355,"line_end":355,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780113,"byte_end":8780172,"line_start":350,"line_end":350,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780177,"byte_end":8780180,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780185,"byte_end":8780255,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780260,"byte_end":8780263,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780268,"byte_end":8780320,"line_start":354,"line_end":354,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780721,"byte_end":8780739,"line_start":364,"line_end":364,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780500,"byte_end":8780561,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780566,"byte_end":8780569,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780574,"byte_end":8780644,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780649,"byte_end":8780652,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780657,"byte_end":8780709,"line_start":363,"line_end":363,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2823},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783369,"byte_end":8783377,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783191,"byte_end":8783250,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783251,"byte_end":8783254,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](#method.send_to) or [`send`](#method.send) to send","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783255,"byte_end":8783325,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ datagrams.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783326,"byte_end":8783340,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2828},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783581,"byte_end":8783589,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783396,"byte_end":8783455,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783456,"byte_end":8783459,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](#method.recv_from) or [`recv`](#method.recv) to receive","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783460,"byte_end":8783537,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ datagrams.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783538,"byte_end":8783552,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2833},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783931,"byte_end":8783943,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783802,"byte_end":8783879,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783880,"byte_end":8783902,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2835},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783944,"byte_end":8783956,"line_start":48,"line_end":48,"column_start":25,"column_end":37},"name":"0","qualname":"::net::udp::split::ReuniteError::0","value":"net::udp::split::SendHalf","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2836},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783958,"byte_end":8783970,"line_start":48,"line_end":48,"column_start":39,"column_end":51},"name":"1","qualname":"::net::udp::split::ReuniteError::1","value":"net::udp::split::RecvHalf","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784980,"byte_end":8784987,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"pub fn reunite(Self, SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784765,"byte_end":8784836,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784841,"byte_end":8784907,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784912,"byte_end":8784968,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785478,"byte_end":8785487,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785088,"byte_end":8785167,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785172,"byte_end":8785239,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785244,"byte_end":8785247,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785252,"byte_end":8785330,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785335,"byte_end":8785413,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785418,"byte_end":8785460,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786267,"byte_end":8786271,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785622,"byte_end":8785701,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785706,"byte_end":8785790,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785795,"byte_end":8785827,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785832,"byte_end":8785835,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785840,"byte_end":8785921,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8785926,"byte_end":8786009,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786014,"byte_end":8786048,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786053,"byte_end":8786056,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786061,"byte_end":8786144,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786149,"byte_end":8786194,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786199,"byte_end":8786202,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786207,"byte_end":8786249,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786620,"byte_end":8786627,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"pub fn reunite(Self, RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786405,"byte_end":8786476,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786481,"byte_end":8786547,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786552,"byte_end":8786608,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787019,"byte_end":8787026,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"pub async fn send_to<'_, '_, '_>(&'_ mut Self, &'_ [u8], &'_ SocketAddr)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786728,"byte_end":8786800,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786805,"byte_end":8786876,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786881,"byte_end":8786884,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786889,"byte_end":8786965,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786970,"byte_end":8787001,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787578,"byte_end":8787582,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787170,"byte_end":8787268,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787273,"byte_end":8787344,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787349,"byte_end":8787352,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787357,"byte_end":8787440,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787445,"byte_end":8787505,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787510,"byte_end":8787513,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787518,"byte_end":8787560,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2839},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2901},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3078}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/mod.rs","byte_start":8787890,"byte_end":8787926,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3082},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788564,"byte_end":8788576,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3083}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788733,"byte_end":8788737,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788660,"byte_end":8788721,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789200,"byte_end":8789204,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788920,"byte_end":8788969,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788974,"byte_end":8788977,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788982,"byte_end":8789053,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789058,"byte_end":8789128,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789133,"byte_end":8789188,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790030,"byte_end":8790038,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789415,"byte_end":8789482,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789487,"byte_end":8789534,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789539,"byte_end":8789542,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789547,"byte_end":8789617,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789622,"byte_end":8789676,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789681,"byte_end":8789684,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789689,"byte_end":8789701,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789706,"byte_end":8789709,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789714,"byte_end":8789774,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789779,"byte_end":8789782,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789787,"byte_end":8789857,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789862,"byte_end":8789935,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8789940,"byte_end":8790018,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790489,"byte_end":8790496,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790410,"byte_end":8790477,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790849,"byte_end":8790856,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790630,"byte_end":8790679,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790684,"byte_end":8790687,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790692,"byte_end":8790764,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790769,"byte_end":8790837,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8791028,"byte_end":8791032,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ mut Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8790960,"byte_end":8791010,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2871},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8792227,"byte_end":8792231,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8792175,"byte_end":8792209,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8792909,"byte_end":8792916,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ mut Self, &'_ [u8], P) -> /*impl Trait*/\nwhere P: AsRef<Path> + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8792837,"byte_end":8792891,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8793637,"byte_end":8793646,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8793585,"byte_end":8793619,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794373,"byte_end":8794383,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794302,"byte_end":8794361,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794599,"byte_end":8794608,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794469,"byte_end":8794515,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794520,"byte_end":8794523,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794528,"byte_end":8794587,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794752,"byte_end":8794762,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794693,"byte_end":8794740,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795136,"byte_end":8795144,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794855,"byte_end":8794921,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794926,"byte_end":8794929,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8794934,"byte_end":8795002,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795007,"byte_end":8795077,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795082,"byte_end":8795124,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3084},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796522,"byte_end":8796530,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":3086}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796421,"byte_end":8796444,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796462,"byte_end":8796510,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8797039,"byte_end":8797050,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"pub fn poll_accept(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796710,"byte_end":8796785,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796790,"byte_end":8796805,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796810,"byte_end":8796813,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796818,"byte_end":8796888,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796893,"byte_end":8796968,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796973,"byte_end":8797027,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3090},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799376,"byte_end":8799388,"line_start":49,"line_end":49,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3091}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799887,"byte_end":8799891,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799472,"byte_end":8799533,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799538,"byte_end":8799541,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799546,"byte_end":8799558,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799563,"byte_end":8799566,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799571,"byte_end":8799631,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799636,"byte_end":8799639,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799644,"byte_end":8799714,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799719,"byte_end":8799792,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799797,"byte_end":8799875,"line_start":63,"line_end":63,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800735,"byte_end":8800743,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800120,"byte_end":8800187,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800192,"byte_end":8800239,"line_start":74,"line_end":74,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800244,"byte_end":8800247,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800252,"byte_end":8800322,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800327,"byte_end":8800381,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800386,"byte_end":8800389,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800394,"byte_end":8800406,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800411,"byte_end":8800414,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800419,"byte_end":8800479,"line_start":81,"line_end":81,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800484,"byte_end":8800487,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800492,"byte_end":8800562,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800567,"byte_end":8800640,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800645,"byte_end":8800723,"line_start":85,"line_end":85,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2941},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8801030,"byte_end":8801040,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8800964,"byte_end":8801018,"line_start":92,"line_end":92,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8801185,"byte_end":8801195,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8801126,"byte_end":8801173,"line_start":97,"line_end":97,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8801361,"byte_end":8801367,"line_start":103,"line_end":103,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8801288,"byte_end":8801343,"line_start":102,"line_end":102,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803836,"byte_end":8803844,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"pub fn incoming(&mut Self) -> Incoming","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802472,"byte_end":8802546,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802551,"byte_end":8802554,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802559,"byte_end":8802622,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802627,"byte_end":8802630,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802635,"byte_end":8802711,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802716,"byte_end":8802785,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802790,"byte_end":8802819,"line_start":143,"line_end":143,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802824,"byte_end":8802827,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802832,"byte_end":8802844,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802849,"byte_end":8802852,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802857,"byte_end":8802932,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8802937,"byte_end":8803012,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803017,"byte_end":8803091,"line_start":149,"line_end":149,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803096,"byte_end":8803171,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803176,"byte_end":8803184,"line_start":151,"line_end":151,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803189,"byte_end":8803192,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803197,"byte_end":8803211,"line_start":153,"line_end":153,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803216,"byte_end":8803219,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803224,"byte_end":8803237,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803242,"byte_end":8803275,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803280,"byte_end":8803313,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803318,"byte_end":8803321,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803326,"byte_end":8803344,"line_start":159,"line_end":159,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803349,"byte_end":8803370,"line_start":160,"line_end":160,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803375,"byte_end":8803453,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803458,"byte_end":8803505,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803510,"byte_end":8803513,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803518,"byte_end":8803574,"line_start":164,"line_end":164,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803579,"byte_end":8803605,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803610,"byte_end":8803641,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803646,"byte_end":8803690,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803695,"byte_end":8803712,"line_start":168,"line_end":168,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803717,"byte_end":8803770,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803775,"byte_end":8803788,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803793,"byte_end":8803802,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803807,"byte_end":8803812,"line_start":172,"line_end":172,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803817,"byte_end":8803824,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3092},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8805955,"byte_end":8805963,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8805894,"byte_end":8805926,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3099},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8806048,"byte_end":8806057,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8805986,"byte_end":8806019,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3106},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808023,"byte_end":8808033,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3107}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"uds\"))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23559,"byte_end":23593,"line_start":350,"line_end":350,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808355,"byte_end":8808362,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808113,"byte_end":8808156,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808161,"byte_end":8808164,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808169,"byte_end":8808240,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808245,"byte_end":8808321,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808326,"byte_end":8808337,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809247,"byte_end":8809255,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808638,"byte_end":8808703,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808708,"byte_end":8808753,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808758,"byte_end":8808761,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808766,"byte_end":8808834,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808839,"byte_end":8808893,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808898,"byte_end":8808901,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808906,"byte_end":8808918,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808923,"byte_end":8808926,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808931,"byte_end":8808991,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808996,"byte_end":8808999,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809004,"byte_end":8809074,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809079,"byte_end":8809152,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809157,"byte_end":8809235,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809739,"byte_end":8809743,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809459,"byte_end":8809508,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809513,"byte_end":8809516,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809521,"byte_end":8809592,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809597,"byte_end":8809667,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8809672,"byte_end":8809727,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810184,"byte_end":8810194,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810104,"byte_end":8810172,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810361,"byte_end":8810370,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810280,"byte_end":8810349,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810549,"byte_end":8810558,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810455,"byte_end":8810537,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810694,"byte_end":8810704,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810635,"byte_end":8810682,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811078,"byte_end":8811086,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810797,"byte_end":8810863,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810868,"byte_end":8810871,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810876,"byte_end":8810944,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8810949,"byte_end":8811019,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811024,"byte_end":8811066,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811320,"byte_end":8811325,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split(&mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.\n","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811180,"byte_end":8811257,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811262,"byte_end":8811308,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3108},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8814906,"byte_end":8814911,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3109},{"krate":0,"index":3110}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8814815,"byte_end":8814843,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3109},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8814959,"byte_end":8814962,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8814918,"byte_end":8814950,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3110},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8815017,"byte_end":8815020,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3108},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/ucred.rs","byte_start":8814975,"byte_end":8815008,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":538},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91180,"byte_end":91186,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91117,"byte_end":91170,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":539},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91239,"byte_end":91244,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":91201,"byte_end":91229,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":549},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3230}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102835,"byte_end":102853,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102855,"byte_end":102902,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102903,"byte_end":102906,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102907,"byte_end":102983,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":102984,"byte_end":103061,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ library's prelude you'll have to do so manually:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103062,"byte_end":103114,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103115,"byte_end":103118,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103119,"byte_end":103126,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # #![allow(warnings)]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103127,"byte_end":103152,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103153,"byte_end":103179,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103180,"byte_end":103187,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103188,"byte_end":103191,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/prelude.rs","byte_start":103192,"byte_end":103266,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":555},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":3241},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":676},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":3902},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":3903},{"krate":0,"index":3907},{"krate":0,"index":3909},{"krate":0,"index":3916},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103478,"byte_end":103500,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103501,"byte_end":103504,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103505,"byte_end":103570,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/ runtime support. In particular, the following runtime services are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103571,"byte_end":103641,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ necessary:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103642,"byte_end":103656,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103657,"byte_end":103660,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103661,"byte_end":103739,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103740,"byte_end":103797,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103798,"byte_end":103868,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103869,"byte_end":103941,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103942,"byte_end":103945,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":103946,"byte_end":104026,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, most","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104027,"byte_end":104100,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104101,"byte_end":104175,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/ use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104176,"byte_end":104254,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ the hood.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104255,"byte_end":104268,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104269,"byte_end":104272,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104273,"byte_end":104284,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104285,"byte_end":104288,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104289,"byte_end":104356,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104357,"byte_end":104360,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104361,"byte_end":104374,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104375,"byte_end":104407,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104408,"byte_end":104434,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104435,"byte_end":104438,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104439,"byte_end":104457,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104458,"byte_end":104521,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104522,"byte_end":104592,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104593,"byte_end":104596,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104597,"byte_end":104611,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104612,"byte_end":104671,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104672,"byte_end":104675,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104676,"byte_end":104713,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104714,"byte_end":104754,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104755,"byte_end":104758,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104759,"byte_end":104839,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104840,"byte_end":104862,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104863,"byte_end":104926,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104927,"byte_end":104967,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":104968,"byte_end":105018,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105019,"byte_end":105054,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105055,"byte_end":105090,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105091,"byte_end":105173,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105174,"byte_end":105209,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105210,"byte_end":105235,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105236,"byte_end":105258,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105259,"byte_end":105262,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105263,"byte_end":105305,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105306,"byte_end":105378,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105379,"byte_end":105456,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105457,"byte_end":105488,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105489,"byte_end":105510,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105511,"byte_end":105528,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105529,"byte_end":105544,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105545,"byte_end":105554,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105555,"byte_end":105560,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105561,"byte_end":105568,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105569,"byte_end":105572,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105573,"byte_end":105651,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105652,"byte_end":105730,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105731,"byte_end":105792,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105793,"byte_end":105796,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105797,"byte_end":105850,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105851,"byte_end":105854,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105855,"byte_end":105868,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105869,"byte_end":105901,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105902,"byte_end":105928,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105929,"byte_end":105961,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105962,"byte_end":105965,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":105966,"byte_end":106023,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106024,"byte_end":106053,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/     let mut rt = Runtime::new()?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106054,"byte_end":106091,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106092,"byte_end":106095,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106096,"byte_end":106126,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106127,"byte_end":106154,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"/         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106155,"byte_end":106229,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106230,"byte_end":106233,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106234,"byte_end":106252,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106253,"byte_end":106316,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106317,"byte_end":106320,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106321,"byte_end":106362,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106363,"byte_end":106407,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106408,"byte_end":106411,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106412,"byte_end":106496,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106497,"byte_end":106523,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106524,"byte_end":106591,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106592,"byte_end":106636,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106637,"byte_end":106691,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106692,"byte_end":106731,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106732,"byte_end":106771,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106772,"byte_end":106858,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106859,"byte_end":106898,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106899,"byte_end":106928,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106929,"byte_end":106955,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106956,"byte_end":106959,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":106960,"byte_end":107006,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107007,"byte_end":107083,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107084,"byte_end":107165,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107166,"byte_end":107201,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107202,"byte_end":107227,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107228,"byte_end":107249,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107250,"byte_end":107269,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107270,"byte_end":107283,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107284,"byte_end":107294,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107295,"byte_end":107300,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107301,"byte_end":107308,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107309,"byte_end":107312,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107313,"byte_end":107342,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107343,"byte_end":107346,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107347,"byte_end":107425,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107426,"byte_end":107502,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107503,"byte_end":107545,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107546,"byte_end":107549,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ #### Basic Scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107550,"byte_end":107574,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107575,"byte_end":107578,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107579,"byte_end":107658,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107659,"byte_end":107734,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"/ requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107735,"byte_end":107805,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"/ [`Builder::basic_scheduler`] method:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107806,"byte_end":107846,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107847,"byte_end":107854,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107855,"byte_end":107878,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107879,"byte_end":107882,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107883,"byte_end":107942,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107943,"byte_end":107985,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"/     .basic_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":107986,"byte_end":108012,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/     .build()?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108013,"byte_end":108031,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108032,"byte_end":108046,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108047,"byte_end":108054,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108055,"byte_end":108058,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108059,"byte_end":108124,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108125,"byte_end":108195,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108196,"byte_end":108199,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #### Threaded Scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108200,"byte_end":108227,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108228,"byte_end":108231,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108232,"byte_end":108303,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108304,"byte_end":108382,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108383,"byte_end":108462,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108463,"byte_end":108547,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108548,"byte_end":108628,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108629,"byte_end":108636,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108637,"byte_end":108660,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108661,"byte_end":108664,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108665,"byte_end":108724,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108725,"byte_end":108770,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108771,"byte_end":108800,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"/     .build()?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108801,"byte_end":108819,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108820,"byte_end":108834,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108835,"byte_end":108842,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108843,"byte_end":108846,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108847,"byte_end":108927,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"/ threaded scheduler runtime by default.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108928,"byte_end":108970,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108971,"byte_end":108974,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":108975,"byte_end":109052,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109053,"byte_end":109122,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109123,"byte_end":109126,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109127,"byte_end":109152,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109153,"byte_end":109156,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109157,"byte_end":109231,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109232,"byte_end":109312,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109313,"byte_end":109392,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109393,"byte_end":109472,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109473,"byte_end":109542,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109543,"byte_end":109546,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109547,"byte_end":109581,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109582,"byte_end":109585,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109586,"byte_end":109665,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109666,"byte_end":109734,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"/ `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109735,"byte_end":109797,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109798,"byte_end":109801,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109802,"byte_end":109880,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109881,"byte_end":109960,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":109961,"byte_end":110019,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110020,"byte_end":110023,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110024,"byte_end":110048,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110049,"byte_end":110073,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110074,"byte_end":110108,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110109,"byte_end":110147,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110148,"byte_end":110194,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110195,"byte_end":110245,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110246,"byte_end":110320,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110321,"byte_end":110401,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110402,"byte_end":110464,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110465,"byte_end":110531,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":110532,"byte_end":110596,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844419,"byte_end":8844428,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3780}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844604,"byte_end":8844613,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"pub fn cancelled() -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844579,"byte_end":8844592,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844831,"byte_end":8844836,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"pub fn panic(Box<Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844806,"byte_end":8844819,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845166,"byte_end":8845178,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845086,"byte_end":8845154,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845684,"byte_end":8845692,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845305,"byte_end":8845367,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845372,"byte_end":8845375,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845380,"byte_end":8845394,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845399,"byte_end":8845402,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845407,"byte_end":8845414,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845419,"byte_end":8845438,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845443,"byte_end":8845446,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845451,"byte_end":8845469,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845474,"byte_end":8845495,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845500,"byte_end":8845538,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845543,"byte_end":8845570,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845575,"byte_end":8845605,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845610,"byte_end":8845613,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845618,"byte_end":8845650,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845655,"byte_end":8845660,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845665,"byte_end":8845672,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846599,"byte_end":8846609,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845818,"byte_end":8845897,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845902,"byte_end":8845905,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845910,"byte_end":8845922,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845927,"byte_end":8845930,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8845935,"byte_end":8846009,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846014,"byte_end":8846089,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846094,"byte_end":8846152,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846157,"byte_end":8846160,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846165,"byte_end":8846179,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846184,"byte_end":8846187,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846192,"byte_end":8846211,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846216,"byte_end":8846235,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846240,"byte_end":8846243,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846248,"byte_end":8846266,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846271,"byte_end":8846292,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846297,"byte_end":8846335,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846340,"byte_end":8846367,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846372,"byte_end":8846402,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846407,"byte_end":8846410,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846415,"byte_end":8846442,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846447,"byte_end":8846495,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846500,"byte_end":8846551,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846556,"byte_end":8846565,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846570,"byte_end":8846575,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846580,"byte_end":8846587,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847374,"byte_end":8847388,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846750,"byte_end":8846819,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846824,"byte_end":8846896,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846901,"byte_end":8846914,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846919,"byte_end":8846922,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846927,"byte_end":8846941,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846946,"byte_end":8846949,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846954,"byte_end":8846973,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8846978,"byte_end":8846997,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847002,"byte_end":8847005,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847010,"byte_end":8847028,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847033,"byte_end":8847054,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847059,"byte_end":8847097,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847102,"byte_end":8847129,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847134,"byte_end":8847164,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847169,"byte_end":8847172,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847177,"byte_end":8847227,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847232,"byte_end":8847280,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847285,"byte_end":8847326,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847331,"byte_end":8847340,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847345,"byte_end":8847350,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847355,"byte_end":8847362,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863754,"byte_end":8863764,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3783},{"krate":0,"index":3784}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":585},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125599,"byte_end":125606,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124781,"byte_end":124839,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124840,"byte_end":124843,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124844,"byte_end":124916,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124917,"byte_end":124965,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124966,"byte_end":124969,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":124970,"byte_end":125035,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125036,"byte_end":125039,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125040,"byte_end":125117,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125118,"byte_end":125131,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125132,"byte_end":125135,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125136,"byte_end":125164,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125165,"byte_end":125198,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125199,"byte_end":125202,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125203,"byte_end":125217,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125218,"byte_end":125221,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125222,"byte_end":125229,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125230,"byte_end":125262,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125263,"byte_end":125266,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125267,"byte_end":125282,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125283,"byte_end":125307,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125308,"byte_end":125344,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125345,"byte_end":125378,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125379,"byte_end":125407,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125408,"byte_end":125450,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125451,"byte_end":125498,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125499,"byte_end":125519,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125520,"byte_end":125542,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125543,"byte_end":125546,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125547,"byte_end":125573,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125574,"byte_end":125579,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":125580,"byte_end":125587,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126761,"byte_end":126764,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126587,"byte_end":126659,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126664,"byte_end":126675,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126680,"byte_end":126683,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126688,"byte_end":126749,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127968,"byte_end":127978,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127454,"byte_end":127492,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127497,"byte_end":127500,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127505,"byte_end":127576,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127581,"byte_end":127657,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127662,"byte_end":127716,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127721,"byte_end":127724,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127729,"byte_end":127743,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127748,"byte_end":127751,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127756,"byte_end":127763,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127768,"byte_end":127791,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127796,"byte_end":127799,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127804,"byte_end":127840,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127845,"byte_end":127874,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127879,"byte_end":127900,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127905,"byte_end":127921,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127926,"byte_end":127944,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":127949,"byte_end":127956,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128533,"byte_end":128544,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"pub fn num_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128155,"byte_end":128228,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128233,"byte_end":128311,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128316,"byte_end":128319,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128324,"byte_end":128399,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128404,"byte_end":128439,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128444,"byte_end":128447,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128452,"byte_end":128521,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129253,"byte_end":129265,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"pub fn core_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128646,"byte_end":128721,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128726,"byte_end":128729,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128734,"byte_end":128811,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128816,"byte_end":128851,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128856,"byte_end":128859,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128864,"byte_end":128933,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128938,"byte_end":128941,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":128946,"byte_end":128998,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129003,"byte_end":129006,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129011,"byte_end":129025,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129030,"byte_end":129033,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129038,"byte_end":129045,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129050,"byte_end":129073,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129078,"byte_end":129081,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129086,"byte_end":129122,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129127,"byte_end":129156,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129161,"byte_end":129185,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129190,"byte_end":129206,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129211,"byte_end":129229,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129234,"byte_end":129241,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130144,"byte_end":130155,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"pub fn max_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129426,"byte_end":129482,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129487,"byte_end":129490,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129495,"byte_end":129572,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129577,"byte_end":129659,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129664,"byte_end":129734,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129739,"byte_end":129742,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129747,"byte_end":129827,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129832,"byte_end":129835,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129840,"byte_end":129869,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129874,"byte_end":129877,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129882,"byte_end":129967,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129972,"byte_end":129975,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":129980,"byte_end":130069,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130074,"byte_end":130132,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130679,"byte_end":130690,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130309,"byte_end":130373,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130378,"byte_end":130381,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130386,"byte_end":130433,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130438,"byte_end":130441,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130446,"byte_end":130460,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130465,"byte_end":130468,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130473,"byte_end":130480,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130485,"byte_end":130510,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130515,"byte_end":130518,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130523,"byte_end":130544,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130549,"byte_end":130585,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130590,"byte_end":130621,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130626,"byte_end":130643,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130648,"byte_end":130655,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130660,"byte_end":130667,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131414,"byte_end":131431,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130804,"byte_end":130858,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130863,"byte_end":130866,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130871,"byte_end":130943,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130948,"byte_end":130981,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130986,"byte_end":130989,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":130994,"byte_end":131062,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131067,"byte_end":131128,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131133,"byte_end":131136,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131141,"byte_end":131155,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131160,"byte_end":131163,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131168,"byte_end":131175,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131180,"byte_end":131205,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131210,"byte_end":131213,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131218,"byte_end":131239,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131244,"byte_end":131280,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131285,"byte_end":131314,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131319,"byte_end":131356,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131361,"byte_end":131378,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131383,"byte_end":131390,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131395,"byte_end":131402,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132072,"byte_end":132087,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131538,"byte_end":131613,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131618,"byte_end":131633,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131638,"byte_end":131641,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131646,"byte_end":131708,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131713,"byte_end":131716,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131721,"byte_end":131735,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131740,"byte_end":131743,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131748,"byte_end":131755,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131760,"byte_end":131785,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131790,"byte_end":131793,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131798,"byte_end":131819,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131824,"byte_end":131865,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131870,"byte_end":131899,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131904,"byte_end":131933,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131938,"byte_end":131977,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131982,"byte_end":131992,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":131997,"byte_end":132014,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132019,"byte_end":132026,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132031,"byte_end":132038,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132043,"byte_end":132060,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132738,"byte_end":132752,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132248,"byte_end":132299,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132304,"byte_end":132307,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132312,"byte_end":132374,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132379,"byte_end":132382,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132387,"byte_end":132401,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132406,"byte_end":132409,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132414,"byte_end":132421,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132426,"byte_end":132451,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132456,"byte_end":132459,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132464,"byte_end":132485,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132490,"byte_end":132531,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132536,"byte_end":132565,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132570,"byte_end":132598,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132603,"byte_end":132643,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132648,"byte_end":132658,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132663,"byte_end":132680,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132685,"byte_end":132692,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132697,"byte_end":132704,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132709,"byte_end":132726,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133298,"byte_end":133303,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132913,"byte_end":132950,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132955,"byte_end":132958,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":132963,"byte_end":133026,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133031,"byte_end":133034,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133039,"byte_end":133053,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133058,"byte_end":133061,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133066,"byte_end":133073,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133078,"byte_end":133110,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133115,"byte_end":133118,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133123,"byte_end":133172,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133177,"byte_end":133180,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133185,"byte_end":133208,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133213,"byte_end":133262,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133267,"byte_end":133274,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":133279,"byte_end":133286,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":134928,"byte_end":134937,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135448,"byte_end":135459,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":136072,"byte_end":136087,"line_start":409,"line_end":409,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"pub fn basic_scheduler(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3860},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147555,"byte_end":147561,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147286,"byte_end":147312,"line_start":15,"line_end":15,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147313,"byte_end":147316,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147317,"byte_end":147405,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147406,"byte_end":147456,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147457,"byte_end":147460,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147461,"byte_end":147519,"line_start":20,"line_end":20,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149098,"byte_end":149103,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147925,"byte_end":148000,"line_start":39,"line_end":39,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148005,"byte_end":148083,"line_start":40,"line_end":40,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148088,"byte_end":148156,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148161,"byte_end":148164,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Runtime::enter`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148169,"byte_end":148227,"line_start":43,"line_end":43,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148232,"byte_end":148235,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148240,"byte_end":148280,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148285,"byte_end":148332,"line_start":46,"line_end":46,"column_start":5,"column_end":52}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148337,"byte_end":148394,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148399,"byte_end":148436,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148441,"byte_end":148444,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148449,"byte_end":148462,"line_start":50,"line_end":50,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148467,"byte_end":148470,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148475,"byte_end":148482,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148487,"byte_end":148519,"line_start":53,"line_end":53,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148524,"byte_end":148527,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148532,"byte_end":148574,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `handle.enter` below, this would panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148579,"byte_end":148645,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148650,"byte_end":148683,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148688,"byte_end":148720,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148725,"byte_end":148736,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148741,"byte_end":148746,"line_start":60,"line_end":60,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148751,"byte_end":148754,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148759,"byte_end":148774,"line_start":62,"line_end":62,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148779,"byte_end":148820,"line_start":63,"line_end":63,"column_start":5,"column_end":46}},{"value":"/     let handle = rt.handle().clone();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148825,"byte_end":148866,"line_start":64,"line_end":64,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148871,"byte_end":148874,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148879,"byte_end":148922,"line_start":66,"line_end":66,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148927,"byte_end":148930,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":148935,"byte_end":149010,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/     handle.enter(|| function_that_spawns(s));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149015,"byte_end":149064,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149069,"byte_end":149074,"line_start":70,"line_end":70,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149079,"byte_end":149086,"line_start":71,"line_end":71,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149992,"byte_end":149999,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149221,"byte_end":149281,"line_start":79,"line_end":79,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149286,"byte_end":149289,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149294,"byte_end":149305,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149310,"byte_end":149313,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149318,"byte_end":149387,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149392,"byte_end":149395,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149400,"byte_end":149414,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149419,"byte_end":149422,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149427,"byte_end":149509,"line_start":87,"line_end":87,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149514,"byte_end":149560,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149565,"byte_end":149568,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149573,"byte_end":149580,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149585,"byte_end":149619,"line_start":91,"line_end":91,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149624,"byte_end":149640,"line_start":92,"line_end":92,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149645,"byte_end":149684,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149689,"byte_end":149711,"line_start":94,"line_end":94,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149716,"byte_end":149747,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149752,"byte_end":149755,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149760,"byte_end":149801,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149806,"byte_end":149841,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149846,"byte_end":149870,"line_start":99,"line_end":99,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149875,"byte_end":149931,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ })","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149936,"byte_end":149942,"line_start":101,"line_end":101,"column_start":5,"column_end":11}},{"value":"/ # });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149947,"byte_end":149956,"line_start":102,"line_end":102,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149961,"byte_end":149968,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":149973,"byte_end":149980,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150297,"byte_end":150308,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150104,"byte_end":150164,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150169,"byte_end":150172,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150177,"byte_end":150228,"line_start":111,"line_end":111,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150233,"byte_end":150236,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150241,"byte_end":150285,"line_start":113,"line_end":113,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":151833,"byte_end":151838,"line_start":158,"line_end":158,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3873},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":155957,"byte_end":155965,"line_start":262,"line_end":262,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime from a synchronous\n context.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":653},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159757,"byte_end":159772,"line_start":345,"line_end":345,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159677,"byte_end":159745,"line_start":344,"line_end":344,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3903},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112496,"byte_end":112503,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111484,"byte_end":111506,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111507,"byte_end":111510,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O driver, task scheduler, [timer], and blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111511,"byte_end":111588,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111589,"byte_end":111640,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111641,"byte_end":111644,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111645,"byte_end":111725,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111726,"byte_end":111811,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111812,"byte_end":111815,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111816,"byte_end":111875,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111876,"byte_end":111879,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111880,"byte_end":111894,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111895,"byte_end":111898,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111899,"byte_end":111978,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":111979,"byte_end":112038,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112039,"byte_end":112042,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112043,"byte_end":112081,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112082,"byte_end":112133,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112134,"byte_end":112157,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112158,"byte_end":112161,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112162,"byte_end":112234,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112235,"byte_end":112308,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112309,"byte_end":112332,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112333,"byte_end":112336,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [timer]: crate::time","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112337,"byte_end":112361,"line_start":269,"line_end":269,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112362,"byte_end":112383,"line_start":270,"line_end":270,"column_start":1,"column_end":22}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112384,"byte_end":112408,"line_start":271,"line_end":271,"column_start":1,"column_end":25}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112409,"byte_end":112440,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ [`tokio::run`]: fn@run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":112441,"byte_end":112467,"line_start":273,"line_end":273,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114724,"byte_end":114727,"line_start":341,"line_end":341,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113317,"byte_end":113385,"line_start":306,"line_end":306,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113390,"byte_end":113393,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113398,"byte_end":113464,"line_start":308,"line_end":308,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113469,"byte_end":113542,"line_start":309,"line_end":309,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113547,"byte_end":113618,"line_start":310,"line_end":310,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113623,"byte_end":113698,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113703,"byte_end":113741,"line_start":312,"line_end":312,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113746,"byte_end":113749,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113754,"byte_end":113814,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113819,"byte_end":113893,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113898,"byte_end":113901,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113906,"byte_end":113982,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113987,"byte_end":114063,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114068,"byte_end":114134,"line_start":319,"line_end":319,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114139,"byte_end":114142,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114147,"byte_end":114206,"line_start":321,"line_end":321,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114211,"byte_end":114214,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114219,"byte_end":114233,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114238,"byte_end":114241,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114246,"byte_end":114309,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114314,"byte_end":114317,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114322,"byte_end":114329,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114334,"byte_end":114366,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114371,"byte_end":114374,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114379,"byte_end":114406,"line_start":330,"line_end":330,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114411,"byte_end":114429,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114434,"byte_end":114437,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114442,"byte_end":114467,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114472,"byte_end":114479,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114484,"byte_end":114487,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114492,"byte_end":114513,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/ [main]: ../attr.main.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114518,"byte_end":114547,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114552,"byte_end":114607,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114612,"byte_end":114661,"line_start":339,"line_end":339,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":114666,"byte_end":114712,"line_start":340,"line_end":340,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116317,"byte_end":116322,"line_start":391,"line_end":391,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115137,"byte_end":115179,"line_start":354,"line_end":354,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115184,"byte_end":115187,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115192,"byte_end":115263,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115268,"byte_end":115343,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115348,"byte_end":115371,"line_start":358,"line_end":358,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115376,"byte_end":115379,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115384,"byte_end":115443,"line_start":360,"line_end":360,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115448,"byte_end":115451,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115456,"byte_end":115477,"line_start":362,"line_end":362,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115482,"byte_end":115485,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115490,"byte_end":115504,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115509,"byte_end":115512,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115517,"byte_end":115524,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115529,"byte_end":115561,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115566,"byte_end":115569,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115574,"byte_end":115590,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115595,"byte_end":115620,"line_start":370,"line_end":370,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115625,"byte_end":115662,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115667,"byte_end":115670,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115675,"byte_end":115713,"line_start":373,"line_end":373,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115718,"byte_end":115738,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115743,"byte_end":115794,"line_start":375,"line_end":375,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115799,"byte_end":115806,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115811,"byte_end":115818,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115823,"byte_end":115830,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115835,"byte_end":115838,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115843,"byte_end":115855,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115860,"byte_end":115863,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This function will not panic unless task execution is disabled on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115868,"byte_end":115941,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ executor. This can only happen if the runtime was built using","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":115946,"byte_end":116011,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ [`Builder`] without picking either [`basic_scheduler`] or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116016,"byte_end":116077,"line_start":384,"line_end":384,"column_start":5,"column_end":66}},{"value":"/ [`threaded_scheduler`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116082,"byte_end":116109,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116114,"byte_end":116117,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`Builder`]: struct@Builder","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116122,"byte_end":116153,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ [`threaded_scheduler`]: fn@Builder::threaded_scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116158,"byte_end":116216,"line_start":388,"line_end":388,"column_start":5,"column_end":63}},{"value":"/ [`basic_scheduler`]: fn@Builder::basic_scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116221,"byte_end":116273,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116278,"byte_end":116305,"line_start":390,"line_end":390,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117943,"byte_end":117951,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&mut Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116724,"byte_end":116798,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116803,"byte_end":116819,"line_start":405,"line_end":405,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116824,"byte_end":116827,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116832,"byte_end":116899,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116904,"byte_end":116977,"line_start":408,"line_end":408,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":116982,"byte_end":117047,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117052,"byte_end":117055,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ `&mut` is required as calling `block_on` **may** result in advancing the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117060,"byte_end":117136,"line_start":411,"line_end":411,"column_start":5,"column_end":81}},{"value":"/ state of the runtime. The details depend on how the runtime is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117141,"byte_end":117207,"line_start":412,"line_end":412,"column_start":5,"column_end":71}},{"value":"/ configured. [`runtime::Handle::block_on`][handle] provides a version","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117212,"byte_end":117284,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ that takes `&self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117289,"byte_end":117312,"line_start":414,"line_end":414,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117317,"byte_end":117320,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This method may not be called from an asynchronous context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117325,"byte_end":117388,"line_start":416,"line_end":416,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117393,"byte_end":117396,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117401,"byte_end":117413,"line_start":418,"line_end":418,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117418,"byte_end":117421,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, or if called within an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117426,"byte_end":117504,"line_start":420,"line_end":420,"column_start":5,"column_end":83}},{"value":"/ asynchronous execution context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117509,"byte_end":117544,"line_start":421,"line_end":421,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117549,"byte_end":117552,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117557,"byte_end":117571,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117576,"byte_end":117579,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117584,"byte_end":117597,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117602,"byte_end":117634,"line_start":426,"line_end":426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117639,"byte_end":117642,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117647,"byte_end":117672,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117677,"byte_end":117718,"line_start":429,"line_end":429,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117723,"byte_end":117726,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117731,"byte_end":117802,"line_start":431,"line_end":431,"column_start":5,"column_end":76}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117807,"byte_end":117830,"line_start":432,"line_end":432,"column_start":5,"column_end":28}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117835,"byte_end":117861,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117866,"byte_end":117873,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117878,"byte_end":117885,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117890,"byte_end":117893,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ [handle]: fn@Handle::block_on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":117898,"byte_end":117931,"line_start":437,"line_end":437,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119473,"byte_end":119478,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter<F, R>(&Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Delay`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118357,"byte_end":118432,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Delay`] or [`TcpStream`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118437,"byte_end":118515,"line_start":451,"line_end":451,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118520,"byte_end":118588,"line_start":452,"line_end":452,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118593,"byte_end":118596,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This function is also available as [`Handle::enter`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118601,"byte_end":118658,"line_start":454,"line_end":454,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118663,"byte_end":118666,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Delay`]: struct@crate::time::Delay","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118671,"byte_end":118711,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118716,"byte_end":118763,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ [`Handle::enter`]: fn@crate::runtime::Handle::enter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118768,"byte_end":118823,"line_start":458,"line_end":458,"column_start":5,"column_end":60}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118828,"byte_end":118865,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118870,"byte_end":118873,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118878,"byte_end":118891,"line_start":461,"line_end":461,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118896,"byte_end":118899,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118904,"byte_end":118911,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118916,"byte_end":118948,"line_start":464,"line_end":464,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118953,"byte_end":118956,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn function_that_spawns(msg: String) {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":118961,"byte_end":119003,"line_start":466,"line_end":466,"column_start":5,"column_end":47}},{"value":"/     // Had we not used `rt.enter` below, this would panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119008,"byte_end":119070,"line_start":467,"line_end":467,"column_start":5,"column_end":67}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119075,"byte_end":119108,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/         println!(\"{}\", msg);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119113,"byte_end":119145,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119150,"byte_end":119161,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119166,"byte_end":119171,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119176,"byte_end":119179,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119184,"byte_end":119199,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     let rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119204,"byte_end":119245,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119250,"byte_end":119253,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     let s = \"Hello World!\".to_string();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119258,"byte_end":119301,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119306,"byte_end":119309,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     // By entering the context, we tie `tokio::spawn` to this executor.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119314,"byte_end":119389,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/     rt.enter(|| function_that_spawns(s));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119394,"byte_end":119439,"line_start":479,"line_end":479,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119444,"byte_end":119449,"line_start":480,"line_end":480,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119454,"byte_end":119461,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120065,"byte_end":120071,"line_start":506,"line_end":506,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119585,"byte_end":119630,"line_start":489,"line_end":489,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119635,"byte_end":119638,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119643,"byte_end":119727,"line_start":491,"line_end":491,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119732,"byte_end":119792,"line_start":492,"line_end":492,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119797,"byte_end":119800,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119805,"byte_end":119819,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119824,"byte_end":119827,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119832,"byte_end":119839,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119844,"byte_end":119876,"line_start":497,"line_end":497,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119881,"byte_end":119884,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119889,"byte_end":119916,"line_start":499,"line_end":499,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119921,"byte_end":119939,"line_start":500,"line_end":500,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119944,"byte_end":119947,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119952,"byte_end":119981,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119986,"byte_end":119989,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":119994,"byte_end":120041,"line_start":504,"line_end":504,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120046,"byte_end":120053,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121479,"byte_end":121495,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120124,"byte_end":120196,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120201,"byte_end":120222,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120227,"byte_end":120230,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120235,"byte_end":120310,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120315,"byte_end":120388,"line_start":514,"line_end":514,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120393,"byte_end":120470,"line_start":515,"line_end":515,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned, which can block dropping `Runtime`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120475,"byte_end":120546,"line_start":516,"line_end":516,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120551,"byte_end":120554,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120559,"byte_end":120633,"line_start":518,"line_end":518,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120638,"byte_end":120712,"line_start":519,"line_end":519,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120717,"byte_end":120792,"line_start":520,"line_end":520,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120797,"byte_end":120873,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120878,"byte_end":120923,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120928,"byte_end":120931,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120936,"byte_end":120950,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120955,"byte_end":120958,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120963,"byte_end":120970,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":120975,"byte_end":121007,"line_start":527,"line_end":527,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121012,"byte_end":121032,"line_start":528,"line_end":528,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121037,"byte_end":121040,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121045,"byte_end":121065,"line_start":530,"line_end":530,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121070,"byte_end":121098,"line_start":531,"line_end":531,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121103,"byte_end":121106,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121111,"byte_end":121126,"line_start":533,"line_end":533,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121131,"byte_end":121180,"line_start":534,"line_end":534,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121185,"byte_end":121188,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121193,"byte_end":121229,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121234,"byte_end":121275,"line_start":537,"line_end":537,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121280,"byte_end":121338,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121343,"byte_end":121357,"line_start":539,"line_end":539,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121362,"byte_end":121372,"line_start":540,"line_end":540,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121377,"byte_end":121380,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121385,"byte_end":121445,"line_start":542,"line_end":542,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121450,"byte_end":121455,"line_start":543,"line_end":543,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":121460,"byte_end":121467,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3937},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3994},{"krate":0,"index":3998}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":20775,"byte_end":20801,"line_start":210,"line_end":210,"column_start":13,"column_end":39}},{"value":"cfg(not(loom))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":20876,"byte_end":20893,"line_start":212,"line_end":212,"column_start":13,"column_end":30}},{"value":"/ Asynchronous signal handling for Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885240,"byte_end":8885282,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885283,"byte_end":8885286,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885287,"byte_end":8885364,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885365,"byte_end":8885443,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885444,"byte_end":8885524,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"/ to see if it's suitable.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885525,"byte_end":8885553,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885554,"byte_end":8885557,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885558,"byte_end":8885633,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ specific structures, as well.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885634,"byte_end":8885667,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885668,"byte_end":8885671,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885672,"byte_end":8885686,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885687,"byte_end":8885690,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Print on \"ctrl-c\" notification.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885691,"byte_end":8885726,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885727,"byte_end":8885730,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885731,"byte_end":8885749,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885750,"byte_end":8885772,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885773,"byte_end":8885776,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885777,"byte_end":8885795,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885796,"byte_end":8885859,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/     signal::ctrl_c().await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885860,"byte_end":8885892,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/     println!(\"ctrl-c received!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885893,"byte_end":8885930,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885931,"byte_end":8885945,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885946,"byte_end":8885951,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885952,"byte_end":8885959,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885960,"byte_end":8885963,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP on Unix","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885964,"byte_end":8885991,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885992,"byte_end":8885995,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8885996,"byte_end":8886014,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(unix)] {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886015,"byte_end":8886035,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886036,"byte_end":8886086,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886087,"byte_end":8886090,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886091,"byte_end":8886109,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886110,"byte_end":8886173,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886174,"byte_end":8886222,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886223,"byte_end":8886278,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886279,"byte_end":8886282,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886283,"byte_end":8886333,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886334,"byte_end":8886348,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886349,"byte_end":8886381,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886382,"byte_end":8886421,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886422,"byte_end":8886431,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886432,"byte_end":8886437,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886438,"byte_end":8886445,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886446,"byte_end":8886453,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3942},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888529,"byte_end":8888535,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"pub async fn ctrl_c() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8886827,"byte_end":8886893,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8886894,"byte_end":8886897,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8886898,"byte_end":8886975,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8886976,"byte_end":8887054,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887055,"byte_end":8887104,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887105,"byte_end":8887108,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener is registered. The future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887109,"byte_end":8887185,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ will complete on the first received `ctrl-c` **after** the initial call to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887186,"byte_end":8887264,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ either `Future::poll` or `.await`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887265,"byte_end":8887303,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887304,"byte_end":8887307,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887308,"byte_end":8887321,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887322,"byte_end":8887325,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887326,"byte_end":8887408,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887409,"byte_end":8887489,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887490,"byte_end":8887571,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887572,"byte_end":8887597,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887598,"byte_end":8887601,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887602,"byte_end":8887675,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887676,"byte_end":8887748,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887749,"byte_end":8887827,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887828,"byte_end":8887905,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887906,"byte_end":8887982,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8887983,"byte_end":8888062,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888063,"byte_end":8888087,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888088,"byte_end":8888091,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888092,"byte_end":8888170,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888171,"byte_end":8888231,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888232,"byte_end":8888235,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888236,"byte_end":8888250,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888251,"byte_end":8888254,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888255,"byte_end":8888273,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888274,"byte_end":8888296,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888297,"byte_end":8888300,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888301,"byte_end":8888319,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888320,"byte_end":8888341,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888342,"byte_end":8888381,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888382,"byte_end":8888385,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888386,"byte_end":8888454,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888455,"byte_end":8888458,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888459,"byte_end":8888501,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888502,"byte_end":8888507,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/ctrl_c.rs","byte_start":8888508,"byte_end":8888515,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3998},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4003},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4020},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4024},{"krate":0,"index":4025},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028},{"krate":0,"index":4029},{"krate":0,"index":4032},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4039},{"krate":0,"index":4098},{"krate":0,"index":4104},{"krate":0,"index":4102},{"krate":0,"index":4101},{"krate":0,"index":4041},{"krate":0,"index":4054},{"krate":0,"index":4058},{"krate":0,"index":4060},{"krate":0,"index":4061},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4065},{"krate":0,"index":4067},{"krate":0,"index":4110},{"krate":0,"index":4113},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4115},{"krate":0,"index":4079}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"/ Unix-specific types for signal handling.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8897973,"byte_end":8898017,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898018,"byte_end":8898021,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898022,"byte_end":8898096,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `Signal` type for receiving notifications of signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898097,"byte_end":8898154,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898156,"byte_end":8898169,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4098},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899484,"byte_end":8899494,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899385,"byte_end":8899442,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899893,"byte_end":8899901,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"pub fn from_raw(c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899526,"byte_end":8899574,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899579,"byte_end":8899582,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899587,"byte_end":8899656,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899661,"byte_end":8899673,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899678,"byte_end":8899696,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899701,"byte_end":8899743,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899748,"byte_end":8899770,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899775,"byte_end":8899820,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899825,"byte_end":8899869,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899874,"byte_end":8899881,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4043},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900155,"byte_end":8900160,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"pub fn alarm() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899959,"byte_end":8899993,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899998,"byte_end":8900001,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900006,"byte_end":8900081,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900086,"byte_end":8900143,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900402,"byte_end":8900407,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"pub fn child() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900212,"byte_end":8900246,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900251,"byte_end":8900254,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900259,"byte_end":8900333,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900338,"byte_end":8900390,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4045},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900653,"byte_end":8900659,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"pub fn hangup() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900459,"byte_end":8900492,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900497,"byte_end":8900500,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900505,"byte_end":8900579,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8900584,"byte_end":8900641,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4046},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901312,"byte_end":8901321,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"pub fn interrupt() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901129,"byte_end":8901162,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901167,"byte_end":8901170,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901175,"byte_end":8901238,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901243,"byte_end":8901300,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901570,"byte_end":8901572,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"pub fn io() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901372,"byte_end":8901404,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901409,"byte_end":8901412,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901417,"byte_end":8901489,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901494,"byte_end":8901558,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901856,"byte_end":8901860,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"pub fn pipe() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901622,"byte_end":8901656,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901661,"byte_end":8901664,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901669,"byte_end":8901743,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901748,"byte_end":8901823,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901828,"byte_end":8901844,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902163,"byte_end":8902167,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"pub fn quit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901912,"byte_end":8901946,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901951,"byte_end":8901954,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8901959,"byte_end":8902025,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902030,"byte_end":8902089,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902094,"byte_end":8902151,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902415,"byte_end":8902424,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"pub fn terminate() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902219,"byte_end":8902253,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902258,"byte_end":8902261,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902266,"byte_end":8902332,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902337,"byte_end":8902403,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4051},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902647,"byte_end":8902660,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"pub fn user_defined1() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902476,"byte_end":8902510,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902515,"byte_end":8902518,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902523,"byte_end":8902573,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902578,"byte_end":8902635,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4052},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902883,"byte_end":8902896,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"pub fn user_defined2() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902712,"byte_end":8902746,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902751,"byte_end":8902754,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902759,"byte_end":8902809,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902814,"byte_end":8902871,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8903128,"byte_end":8903141,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"pub fn window_change() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902948,"byte_end":8902983,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902988,"byte_end":8902991,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8902996,"byte_end":8903072,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8903077,"byte_end":8903116,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4110},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910564,"byte_end":8910570,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":4111},{"krate":0,"index":4112}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8907799,"byte_end":8907867,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8907868,"byte_end":8907871,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8907872,"byte_end":8907945,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8907946,"byte_end":8908024,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908025,"byte_end":8908062,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908063,"byte_end":8908066,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908067,"byte_end":8908137,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908138,"byte_end":8908213,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908214,"byte_end":8908291,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908292,"byte_end":8908371,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908372,"byte_end":8908445,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908446,"byte_end":8908522,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908523,"byte_end":8908600,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908601,"byte_end":8908629,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908630,"byte_end":8908633,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908634,"byte_end":8908714,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908715,"byte_end":8908762,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908763,"byte_end":8908766,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908767,"byte_end":8908840,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908841,"byte_end":8908919,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908920,"byte_end":8908966,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908967,"byte_end":8908970,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8908971,"byte_end":8909047,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909048,"byte_end":8909122,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909123,"byte_end":8909139,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909140,"byte_end":8909143,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909144,"byte_end":8909157,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909158,"byte_end":8909161,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909162,"byte_end":8909236,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909237,"byte_end":8909314,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909315,"byte_end":8909392,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909393,"byte_end":8909414,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909415,"byte_end":8909418,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909419,"byte_end":8909492,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909493,"byte_end":8909568,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909569,"byte_end":8909645,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909646,"byte_end":8909722,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909723,"byte_end":8909800,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909801,"byte_end":8909866,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909867,"byte_end":8909870,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909871,"byte_end":8909949,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8909950,"byte_end":8910010,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910011,"byte_end":8910014,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910015,"byte_end":8910029,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910030,"byte_end":8910033,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910034,"byte_end":8910053,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910054,"byte_end":8910057,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910058,"byte_end":8910076,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910077,"byte_end":8910127,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910128,"byte_end":8910131,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910132,"byte_end":8910150,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910151,"byte_end":8910214,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910215,"byte_end":8910263,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910264,"byte_end":8910319,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910320,"byte_end":8910323,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910324,"byte_end":8910374,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910375,"byte_end":8910389,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910390,"byte_end":8910422,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910423,"byte_end":8910462,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910463,"byte_end":8910472,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910473,"byte_end":8910478,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910479,"byte_end":8910486,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910487,"byte_end":8910535,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4071},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911688,"byte_end":8911694,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"pub fn signal(SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910618,"byte_end":8910692,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910693,"byte_end":8910742,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910743,"byte_end":8910746,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910747,"byte_end":8910825,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910826,"byte_end":8910890,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910891,"byte_end":8910965,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8910966,"byte_end":8911013,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911014,"byte_end":8911017,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911018,"byte_end":8911085,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911086,"byte_end":8911159,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911160,"byte_end":8911208,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911209,"byte_end":8911212,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911213,"byte_end":8911280,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911281,"byte_end":8911350,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911351,"byte_end":8911401,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911402,"byte_end":8911405,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911406,"byte_end":8911418,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911419,"byte_end":8911422,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911423,"byte_end":8911481,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911482,"byte_end":8911550,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911551,"byte_end":8911580,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](https://docs.rs/signal-hook/*/signal_hook/fn.register.html#panics)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8911581,"byte_end":8911680,"line_start":404,"line_end":404,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912905,"byte_end":8912909,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912198,"byte_end":8912246,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912251,"byte_end":8912254,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912259,"byte_end":8912331,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912336,"byte_end":8912339,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912344,"byte_end":8912358,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912363,"byte_end":8912366,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912371,"byte_end":8912390,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912395,"byte_end":8912398,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912403,"byte_end":8912421,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912426,"byte_end":8912476,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912481,"byte_end":8912484,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912489,"byte_end":8912507,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912512,"byte_end":8912575,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912580,"byte_end":8912628,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912633,"byte_end":8912688,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912693,"byte_end":8912696,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912701,"byte_end":8912751,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912756,"byte_end":8912770,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912775,"byte_end":8912807,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912812,"byte_end":8912851,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912856,"byte_end":8912865,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912870,"byte_end":8912875,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912880,"byte_end":8912887,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4078},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913858,"byte_end":8913867,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913031,"byte_end":8913101,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913106,"byte_end":8913126,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913131,"byte_end":8913134,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913139,"byte_end":8913211,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913216,"byte_end":8913219,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913224,"byte_end":8913238,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913243,"byte_end":8913246,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913251,"byte_end":8913297,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913302,"byte_end":8913305,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913310,"byte_end":8913328,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913333,"byte_end":8913355,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913360,"byte_end":8913388,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913393,"byte_end":8913428,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913433,"byte_end":8913469,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913474,"byte_end":8913477,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913482,"byte_end":8913503,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913508,"byte_end":8913531,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913536,"byte_end":8913541,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913546,"byte_end":8913549,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913554,"byte_end":8913584,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913589,"byte_end":8913622,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913627,"byte_end":8913630,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913635,"byte_end":8913722,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913727,"byte_end":8913768,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913773,"byte_end":8913810,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913815,"byte_end":8913824,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913829,"byte_end":8913834,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8913839,"byte_end":8913846,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":4118},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":4119},{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4275},{"krate":0,"index":4295},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4320},{"krate":0,"index":4321},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4575},{"krate":0,"index":4576},{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4620},{"krate":0,"index":4621},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4667},{"krate":0,"index":4782},{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4668},{"krate":0,"index":4669},{"krate":0,"index":4703},{"krate":0,"index":4705}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21007,"byte_end":21033,"line_start":221,"line_end":221,"column_start":13,"column_end":39}},{"value":"/ Stream utilities for Tokio.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923037,"byte_end":8923068,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923069,"byte_end":8923072,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923073,"byte_end":8923218,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923219,"byte_end":8923222,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module provides helpers to work with them.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8923223,"byte_end":8923274,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948726,"byte_end":8948735,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":4710},{"krate":0,"index":4711}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948572,"byte_end":8948629,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948647,"byte_end":8948714,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4717},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8949889,"byte_end":8949898,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":4721},{"krate":0,"index":4722}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8949735,"byte_end":8949792,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8949810,"byte_end":8949877,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7550},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8951018,"byte_end":8951023,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":7553},{"krate":0,"index":7554}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7529},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952256,"byte_end":8952263,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":7532},{"krate":0,"index":7533}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4196},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952828,"byte_end":8952838,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952415,"byte_end":8952468,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952469,"byte_end":8952472,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952473,"byte_end":8952538,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952539,"byte_end":8952595,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952596,"byte_end":8952599,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952600,"byte_end":8952618,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952619,"byte_end":8952622,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952623,"byte_end":8952702,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952703,"byte_end":8952778,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust langague.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952779,"byte_end":8952817,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4267},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957739,"byte_end":8957753,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4269},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4272}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4269},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957833,"byte_end":8957843,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4267},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957767,"byte_end":8957819,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957895,"byte_end":8957905,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"pub fn initialize(usize, Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4267},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957854,"byte_end":8957883,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4271},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8958122,"byte_end":8958128,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"pub fn extend(&mut Self::Collection, T) -> bool","parent":{"krate":0,"index":4267},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957972,"byte_end":8958020,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8958029,"byte_end":8958032,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8958041,"byte_end":8958110,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4272},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8958244,"byte_end":8958252,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"pub fn finalize(&mut Self::Collection) -> Self","parent":{"krate":0,"index":4267},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8958191,"byte_end":8958232,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4728},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958535,"byte_end":8958540,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958419,"byte_end":8958457,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958475,"byte_end":8958523,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4288},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959130,"byte_end":8959135,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"pub const fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958665,"byte_end":8958706,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958707,"byte_end":8958710,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958711,"byte_end":8958779,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958780,"byte_end":8958856,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958857,"byte_end":8958867,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958868,"byte_end":8958871,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958872,"byte_end":8958886,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958887,"byte_end":8958890,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958891,"byte_end":8958907,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958908,"byte_end":8958911,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958912,"byte_end":8958919,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958920,"byte_end":8958961,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958962,"byte_end":8958965,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958966,"byte_end":8958984,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958985,"byte_end":8959006,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959007,"byte_end":8959053,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959054,"byte_end":8959057,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959058,"byte_end":8959102,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959103,"byte_end":8959108,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959109,"byte_end":8959116,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7456},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8959718,"byte_end":8959724,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":7459},{"krate":0,"index":7460}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7411},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961156,"byte_end":8961165,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7414},{"krate":0,"index":7415}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7383},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8962582,"byte_end":8962592,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7387},{"krate":0,"index":7388},{"krate":0,"index":7389}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7335},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8963748,"byte_end":8963752,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7337}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4735},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964875,"byte_end":8964879,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4737}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964760,"byte_end":8964797,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964815,"byte_end":8964863,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4389},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965453,"byte_end":8965457,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964931,"byte_end":8964995,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964996,"byte_end":8965024,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965025,"byte_end":8965028,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965029,"byte_end":8965102,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965103,"byte_end":8965158,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965159,"byte_end":8965162,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965163,"byte_end":8965170,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965171,"byte_end":8965193,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965194,"byte_end":8965235,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965236,"byte_end":8965239,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965240,"byte_end":8965288,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965289,"byte_end":8965292,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965293,"byte_end":8965339,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965340,"byte_end":8965386,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965387,"byte_end":8965429,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965430,"byte_end":8965437,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965438,"byte_end":8965445,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7268},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966196,"byte_end":8966199,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7271},{"krate":0,"index":7272}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7219},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8967269,"byte_end":8967274,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7222},{"krate":0,"index":7223},{"krate":0,"index":7224}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4741},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969149,"byte_end":8969153,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4744}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8968993,"byte_end":8969052,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969070,"byte_end":8969137,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4749},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969840,"byte_end":8969844,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4751}],"decl_id":null,"docs":" Stream for the [`once`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969725,"byte_end":8969762,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969780,"byte_end":8969828,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4479},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970416,"byte_end":8970420,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<T>(T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969920,"byte_end":8969976,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969977,"byte_end":8969980,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969981,"byte_end":8970060,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970061,"byte_end":8970064,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970065,"byte_end":8970079,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970080,"byte_end":8970083,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970084,"byte_end":8970091,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970092,"byte_end":8970133,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970134,"byte_end":8970137,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970138,"byte_end":8970156,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970157,"byte_end":8970178,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970179,"byte_end":8970217,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970218,"byte_end":8970256,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970257,"byte_end":8970260,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970261,"byte_end":8970307,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970308,"byte_end":8970311,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970312,"byte_end":8970350,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970351,"byte_end":8970394,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970395,"byte_end":8970400,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970401,"byte_end":8970408,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4755},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971031,"byte_end":8971038,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`] function.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8970913,"byte_end":8970953,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8970971,"byte_end":8971019,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4502},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971778,"byte_end":8971785,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"pub const fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971169,"byte_end":8971209,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971210,"byte_end":8971213,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971214,"byte_end":8971272,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971273,"byte_end":8971344,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971345,"byte_end":8971414,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971415,"byte_end":8971459,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971460,"byte_end":8971463,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971464,"byte_end":8971478,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971479,"byte_end":8971482,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971483,"byte_end":8971499,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971500,"byte_end":8971503,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971504,"byte_end":8971517,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971518,"byte_end":8971559,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971560,"byte_end":8971563,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971564,"byte_end":8971582,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971583,"byte_end":8971604,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971605,"byte_end":8971654,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971655,"byte_end":8971658,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971659,"byte_end":8971694,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971695,"byte_end":8971722,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971723,"byte_end":8971726,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971727,"byte_end":8971750,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971751,"byte_end":8971756,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971757,"byte_end":8971764,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4762},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977434,"byte_end":8977443,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":4765}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972202,"byte_end":8972278,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972279,"byte_end":8972287,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972288,"byte_end":8972291,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972292,"byte_end":8972369,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972370,"byte_end":8972446,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972447,"byte_end":8972523,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972524,"byte_end":8972558,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972559,"byte_end":8972562,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972563,"byte_end":8972583,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972584,"byte_end":8972587,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972588,"byte_end":8972631,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972632,"byte_end":8972692,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972693,"byte_end":8972771,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972772,"byte_end":8972805,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972806,"byte_end":8972809,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972810,"byte_end":8972889,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972890,"byte_end":8972970,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8972971,"byte_end":8973043,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973044,"byte_end":8973068,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973069,"byte_end":8973072,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973073,"byte_end":8973086,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973087,"byte_end":8973090,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973091,"byte_end":8973169,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973170,"byte_end":8973239,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973240,"byte_end":8973319,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973320,"byte_end":8973351,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973352,"byte_end":8973355,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973356,"byte_end":8973376,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973377,"byte_end":8973380,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973381,"byte_end":8973458,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973459,"byte_end":8973536,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973537,"byte_end":8973614,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973615,"byte_end":8973689,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973690,"byte_end":8973768,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973769,"byte_end":8973846,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973847,"byte_end":8973868,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973869,"byte_end":8973872,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973873,"byte_end":8973930,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973931,"byte_end":8973962,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973963,"byte_end":8973986,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8973987,"byte_end":8974025,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974026,"byte_end":8974029,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974030,"byte_end":8974044,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974045,"byte_end":8974048,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974049,"byte_end":8974122,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974123,"byte_end":8974126,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974127,"byte_end":8974134,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974135,"byte_end":8974181,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974182,"byte_end":8974208,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974209,"byte_end":8974212,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974213,"byte_end":8974231,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974232,"byte_end":8974253,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974254,"byte_end":8974301,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974302,"byte_end":8974349,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974350,"byte_end":8974353,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974354,"byte_end":8974387,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974388,"byte_end":8974427,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974428,"byte_end":8974431,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974432,"byte_end":8974512,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974513,"byte_end":8974585,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974586,"byte_end":8974624,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974625,"byte_end":8974636,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974637,"byte_end":8974640,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974641,"byte_end":8974674,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974675,"byte_end":8974714,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974715,"byte_end":8974753,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974754,"byte_end":8974765,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974766,"byte_end":8974769,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974770,"byte_end":8974809,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974810,"byte_end":8974813,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974814,"byte_end":8974844,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974845,"byte_end":8974876,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974877,"byte_end":8974908,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974909,"byte_end":8974912,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974913,"byte_end":8974934,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974935,"byte_end":8974958,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8974959,"byte_end":8975014,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975015,"byte_end":8975018,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975019,"byte_end":8975048,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975049,"byte_end":8975084,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975085,"byte_end":8975105,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975106,"byte_end":8975141,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975142,"byte_end":8975155,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975156,"byte_end":8975159,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975160,"byte_end":8975226,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975227,"byte_end":8975255,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975256,"byte_end":8975265,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975266,"byte_end":8975271,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975272,"byte_end":8975279,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975280,"byte_end":8975283,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975284,"byte_end":8975362,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975363,"byte_end":8975439,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975440,"byte_end":8975480,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975481,"byte_end":8975484,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975485,"byte_end":8975562,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975563,"byte_end":8975600,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975601,"byte_end":8975604,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975605,"byte_end":8975618,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975619,"byte_end":8975673,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975674,"byte_end":8975677,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975678,"byte_end":8975696,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975697,"byte_end":8975718,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975719,"byte_end":8975741,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975742,"byte_end":8975747,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975748,"byte_end":8975751,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975752,"byte_end":8975802,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975803,"byte_end":8975858,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975859,"byte_end":8975889,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975890,"byte_end":8975895,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975896,"byte_end":8975899,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975900,"byte_end":8975976,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8975977,"byte_end":8976043,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976044,"byte_end":8976088,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976089,"byte_end":8976119,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976120,"byte_end":8976125,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976126,"byte_end":8976129,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976130,"byte_end":8976148,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976149,"byte_end":8976170,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976171,"byte_end":8976215,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976216,"byte_end":8976219,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976220,"byte_end":8976270,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976271,"byte_end":8976301,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976302,"byte_end":8976328,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976329,"byte_end":8976332,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976333,"byte_end":8976347,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976348,"byte_end":8976376,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976377,"byte_end":8976421,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976422,"byte_end":8976453,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976454,"byte_end":8976502,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976503,"byte_end":8976579,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976580,"byte_end":8976621,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976622,"byte_end":8976673,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976674,"byte_end":8976730,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976731,"byte_end":8976756,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976757,"byte_end":8976806,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976807,"byte_end":8976858,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976859,"byte_end":8976884,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976885,"byte_end":8976906,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976907,"byte_end":8976924,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976925,"byte_end":8976981,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8976982,"byte_end":8977062,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977063,"byte_end":8977105,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977106,"byte_end":8977156,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977157,"byte_end":8977174,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977175,"byte_end":8977250,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977251,"byte_end":8977327,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977328,"byte_end":8977358,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977359,"byte_end":8977372,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977373,"byte_end":8977382,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977383,"byte_end":8977388,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977389,"byte_end":8977396,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4523},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977916,"byte_end":8977919,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"pub fn new() -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977548,"byte_end":8977581,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977586,"byte_end":8977589,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977594,"byte_end":8977668,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977673,"byte_end":8977722,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977727,"byte_end":8977730,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977735,"byte_end":8977749,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977754,"byte_end":8977757,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977762,"byte_end":8977769,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977774,"byte_end":8977818,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977823,"byte_end":8977826,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977831,"byte_end":8977892,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977897,"byte_end":8977904,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4524},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978424,"byte_end":8978437,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977992,"byte_end":8978053,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978058,"byte_end":8978061,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978066,"byte_end":8978142,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978147,"byte_end":8978218,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978223,"byte_end":8978226,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978231,"byte_end":8978245,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978250,"byte_end":8978253,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978258,"byte_end":8978265,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978270,"byte_end":8978314,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978319,"byte_end":8978322,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978327,"byte_end":8978400,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978405,"byte_end":8978412,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4525},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979055,"byte_end":8979059,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"pub fn keys(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978568,"byte_end":8978629,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978634,"byte_end":8978637,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978642,"byte_end":8978681,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978686,"byte_end":8978689,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978694,"byte_end":8978708,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978713,"byte_end":8978716,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978721,"byte_end":8978728,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978733,"byte_end":8978777,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978782,"byte_end":8978785,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978790,"byte_end":8978825,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978830,"byte_end":8978833,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978838,"byte_end":8978876,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978881,"byte_end":8978912,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978917,"byte_end":8978948,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978953,"byte_end":8978956,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978961,"byte_end":8978988,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8978993,"byte_end":8979021,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979026,"byte_end":8979031,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979036,"byte_end":8979043,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4528},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979643,"byte_end":8979649,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979152,"byte_end":8979207,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979212,"byte_end":8979215,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979220,"byte_end":8979259,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979264,"byte_end":8979267,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979272,"byte_end":8979286,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979291,"byte_end":8979294,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979299,"byte_end":8979306,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979311,"byte_end":8979355,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979360,"byte_end":8979363,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979368,"byte_end":8979403,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979408,"byte_end":8979411,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979416,"byte_end":8979454,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979459,"byte_end":8979490,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979495,"byte_end":8979526,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979531,"byte_end":8979534,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979539,"byte_end":8979571,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979576,"byte_end":8979609,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979614,"byte_end":8979619,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979624,"byte_end":8979631,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980249,"byte_end":8980259,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"pub fn values_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979742,"byte_end":8979805,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979810,"byte_end":8979813,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979818,"byte_end":8979861,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979866,"byte_end":8979869,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979874,"byte_end":8979888,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979893,"byte_end":8979896,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979901,"byte_end":8979908,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979913,"byte_end":8979957,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979962,"byte_end":8979965,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8979970,"byte_end":8980005,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980010,"byte_end":8980013,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980018,"byte_end":8980056,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980061,"byte_end":8980092,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980097,"byte_end":8980128,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980133,"byte_end":8980136,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980141,"byte_end":8980177,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980182,"byte_end":8980215,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980220,"byte_end":8980225,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980230,"byte_end":8980237,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4534},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980837,"byte_end":8980845,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980364,"byte_end":8980436,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980441,"byte_end":8980444,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980449,"byte_end":8980520,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980525,"byte_end":8980591,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980596,"byte_end":8980599,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980604,"byte_end":8980618,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980623,"byte_end":8980626,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980631,"byte_end":8980638,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980643,"byte_end":8980687,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980692,"byte_end":8980695,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980700,"byte_end":8980773,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980778,"byte_end":8980813,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980818,"byte_end":8980825,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981221,"byte_end":8981224,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980907,"byte_end":8980952,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980957,"byte_end":8980960,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980965,"byte_end":8980979,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980984,"byte_end":8980987,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8980992,"byte_end":8980999,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981004,"byte_end":8981048,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981053,"byte_end":8981056,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981061,"byte_end":8981094,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981099,"byte_end":8981126,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981131,"byte_end":8981165,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981170,"byte_end":8981197,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981202,"byte_end":8981209,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981575,"byte_end":8981583,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981281,"byte_end":8981332,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981337,"byte_end":8981340,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981345,"byte_end":8981359,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981364,"byte_end":8981367,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981372,"byte_end":8981379,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981384,"byte_end":8981418,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981423,"byte_end":8981426,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981431,"byte_end":8981462,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981467,"byte_end":8981493,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981498,"byte_end":8981519,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981524,"byte_end":8981551,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981556,"byte_end":8981563,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4537},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981995,"byte_end":8982000,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981644,"byte_end":8981714,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981719,"byte_end":8981740,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981745,"byte_end":8981748,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981753,"byte_end":8981767,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981772,"byte_end":8981775,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981780,"byte_end":8981787,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981792,"byte_end":8981836,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981841,"byte_end":8981844,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981849,"byte_end":8981882,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981887,"byte_end":8981921,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981926,"byte_end":8981940,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981945,"byte_end":8981971,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8981976,"byte_end":8981983,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982675,"byte_end":8982681,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V> where K: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982055,"byte_end":8982097,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982102,"byte_end":8982105,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982110,"byte_end":8982175,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982180,"byte_end":8982183,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982188,"byte_end":8982263,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982268,"byte_end":8982307,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982312,"byte_end":8982315,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982320,"byte_end":8982334,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982339,"byte_end":8982342,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982347,"byte_end":8982354,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982359,"byte_end":8982403,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982408,"byte_end":8982411,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982416,"byte_end":8982451,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982456,"byte_end":8982459,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982464,"byte_end":8982520,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982525,"byte_end":8982554,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982559,"byte_end":8982562,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982567,"byte_end":8982597,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982602,"byte_end":8982651,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982656,"byte_end":8982663,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983412,"byte_end":8983418,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982860,"byte_end":8982961,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982966,"byte_end":8982969,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8982974,"byte_end":8983048,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983053,"byte_end":8983117,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983122,"byte_end":8983125,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983130,"byte_end":8983144,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983149,"byte_end":8983152,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983157,"byte_end":8983164,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983169,"byte_end":8983213,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983218,"byte_end":8983221,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983226,"byte_end":8983261,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983266,"byte_end":8983302,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983307,"byte_end":8983345,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983350,"byte_end":8983388,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983393,"byte_end":8983400,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984252,"byte_end":8984264,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983720,"byte_end":8983790,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983795,"byte_end":8983798,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983803,"byte_end":8983877,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983882,"byte_end":8983946,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983951,"byte_end":8983954,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983959,"byte_end":8983973,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983978,"byte_end":8983981,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983986,"byte_end":8983993,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8983998,"byte_end":8984042,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984047,"byte_end":8984050,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984055,"byte_end":8984090,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984095,"byte_end":8984131,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984136,"byte_end":8984179,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984184,"byte_end":8984228,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984233,"byte_end":8984240,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7182},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987204,"byte_end":8987208,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7184},{"krate":0,"index":7185}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7137},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8988770,"byte_end":8988779,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7140},{"krate":0,"index":7141}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4774},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990583,"byte_end":8990590,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4777}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990419,"byte_end":8990486,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990504,"byte_end":8990571,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7100},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991439,"byte_end":8991443,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7102},{"krate":0,"index":7103}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7051},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993286,"byte_end":8993295,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7056}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7028},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":9024963,"byte_end":9024970,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":4669},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924278,"byte_end":8924287,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4674},{"krate":0,"index":4677},{"krate":0,"index":4679},{"krate":0,"index":4681},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4689},{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4695},{"krate":0,"index":4697},{"krate":0,"index":4700},{"krate":0,"index":4702}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924167,"byte_end":8924241,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924242,"byte_end":8924267,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4670},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925357,"byte_end":8925361,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924302,"byte_end":8924372,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924377,"byte_end":8924400,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924405,"byte_end":8924408,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924413,"byte_end":8924431,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924436,"byte_end":8924439,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924444,"byte_end":8924457,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924462,"byte_end":8924513,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924518,"byte_end":8924525,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924530,"byte_end":8924533,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924538,"byte_end":8924606,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924611,"byte_end":8924686,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924691,"byte_end":8924766,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924771,"byte_end":8924825,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924830,"byte_end":8924905,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924910,"byte_end":8924920,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924925,"byte_end":8924928,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924933,"byte_end":8924947,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924952,"byte_end":8924955,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924960,"byte_end":8924967,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924972,"byte_end":8924992,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924997,"byte_end":8925020,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925025,"byte_end":8925066,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925071,"byte_end":8925074,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925079,"byte_end":8925120,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925125,"byte_end":8925128,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925133,"byte_end":8925178,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925183,"byte_end":8925228,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925233,"byte_end":8925278,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925283,"byte_end":8925325,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925330,"byte_end":8925337,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925342,"byte_end":8925349,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4671},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926432,"byte_end":8926440,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"pub fn try_next<T, E>(&mut Self) -> TryNext<, Self> where Self: Stream<Item =\nResult<T, E>> + Unpin","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925463,"byte_end":8925531,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925536,"byte_end":8925604,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925609,"byte_end":8925612,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925617,"byte_end":8925635,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925640,"byte_end":8925643,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925648,"byte_end":8925661,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925666,"byte_end":8925723,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925728,"byte_end":8925735,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925740,"byte_end":8925743,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925748,"byte_end":8925812,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925817,"byte_end":8925879,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925884,"byte_end":8925944,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925949,"byte_end":8925992,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8925997,"byte_end":8926000,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926005,"byte_end":8926019,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926024,"byte_end":8926027,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926032,"byte_end":8926039,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926044,"byte_end":8926064,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926069,"byte_end":8926092,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926097,"byte_end":8926138,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926143,"byte_end":8926146,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926151,"byte_end":8926218,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926223,"byte_end":8926226,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926231,"byte_end":8926284,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926289,"byte_end":8926342,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926347,"byte_end":8926400,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926405,"byte_end":8926412,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926417,"byte_end":8926424,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927508,"byte_end":8927511,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926584,"byte_end":8926659,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926664,"byte_end":8926687,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926692,"byte_end":8926695,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926700,"byte_end":8926772,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926777,"byte_end":8926841,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926846,"byte_end":8926883,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926888,"byte_end":8926891,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926896,"byte_end":8926972,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8926977,"byte_end":8927048,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927053,"byte_end":8927074,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927079,"byte_end":8927082,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927087,"byte_end":8927101,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927106,"byte_end":8927109,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927114,"byte_end":8927121,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927126,"byte_end":8927146,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927151,"byte_end":8927174,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927179,"byte_end":8927220,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927225,"byte_end":8927228,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927233,"byte_end":8927270,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927275,"byte_end":8927318,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927323,"byte_end":8927326,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927331,"byte_end":8927376,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927381,"byte_end":8927426,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927431,"byte_end":8927476,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927481,"byte_end":8927488,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927493,"byte_end":8927500,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4677},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929886,"byte_end":8929891,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"pub fn merge<U>(Self, U) -> Merge<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927655,"byte_end":8927728,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927733,"byte_end":8927749,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927754,"byte_end":8927757,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927762,"byte_end":8927838,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927843,"byte_end":8927908,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927913,"byte_end":8927988,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8927993,"byte_end":8928020,"line_start":195,"line_end":195,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928025,"byte_end":8928028,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928033,"byte_end":8928108,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928113,"byte_end":8928179,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928184,"byte_end":8928227,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928232,"byte_end":8928235,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928240,"byte_end":8928254,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928259,"byte_end":8928262,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928267,"byte_end":8928274,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928279,"byte_end":8928312,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928317,"byte_end":8928343,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928348,"byte_end":8928368,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928373,"byte_end":8928376,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928381,"byte_end":8928409,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928414,"byte_end":8928417,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928422,"byte_end":8928430,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928435,"byte_end":8928453,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928458,"byte_end":8928466,"line_start":212,"line_end":212,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928471,"byte_end":8928508,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928513,"byte_end":8928534,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928539,"byte_end":8928559,"line_start":215,"line_end":215,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928564,"byte_end":8928611,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928616,"byte_end":8928663,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928668,"byte_end":8928671,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928676,"byte_end":8928712,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928717,"byte_end":8928720,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928725,"byte_end":8928758,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928763,"byte_end":8928806,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928811,"byte_end":8928850,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928855,"byte_end":8928894,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928899,"byte_end":8928902,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928907,"byte_end":8928952,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8928957,"byte_end":8929018,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929023,"byte_end":8929026,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929031,"byte_end":8929070,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929075,"byte_end":8929086,"line_start":230,"line_end":230,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929091,"byte_end":8929094,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929099,"byte_end":8929132,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929137,"byte_end":8929190,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929195,"byte_end":8929255,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929260,"byte_end":8929263,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929268,"byte_end":8929307,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929312,"byte_end":8929315,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929320,"byte_end":8929381,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929386,"byte_end":8929389,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929394,"byte_end":8929429,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929434,"byte_end":8929473,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929478,"byte_end":8929489,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929494,"byte_end":8929497,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929502,"byte_end":8929549,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929554,"byte_end":8929601,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929606,"byte_end":8929653,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929658,"byte_end":8929705,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929710,"byte_end":8929757,"line_start":248,"line_end":248,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929762,"byte_end":8929765,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929770,"byte_end":8929809,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929814,"byte_end":8929856,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929861,"byte_end":8929866,"line_start":252,"line_end":252,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8929871,"byte_end":8929878,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4679},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931196,"byte_end":8931202,"line_start":292,"line_end":292,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"pub fn filter<F>(Self, F) -> Filter<Self, F> where F: FnMut(&Self::Item) ->\nbool, Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930047,"byte_end":8930119,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930124,"byte_end":8930138,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930143,"byte_end":8930146,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930151,"byte_end":8930226,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930231,"byte_end":8930277,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930282,"byte_end":8930354,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930359,"byte_end":8930408,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930413,"byte_end":8930471,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930476,"byte_end":8930479,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930484,"byte_end":8930560,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930565,"byte_end":8930637,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930642,"byte_end":8930663,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930668,"byte_end":8930671,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930676,"byte_end":8930690,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930695,"byte_end":8930698,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930703,"byte_end":8930710,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930715,"byte_end":8930735,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930740,"byte_end":8930763,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930768,"byte_end":8930809,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930814,"byte_end":8930817,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930822,"byte_end":8930859,"line_start":282,"line_end":282,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930864,"byte_end":8930914,"line_start":283,"line_end":283,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930919,"byte_end":8930922,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930927,"byte_end":8930971,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8930976,"byte_end":8931020,"line_start":286,"line_end":286,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931025,"byte_end":8931069,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931074,"byte_end":8931118,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931123,"byte_end":8931164,"line_start":289,"line_end":289,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931169,"byte_end":8931176,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931181,"byte_end":8931188,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4681},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932575,"byte_end":8932585,"line_start":330,"line_end":330,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"pub fn filter_map<T, F>(Self, F) -> FilterMap<Self, F> where\nF: FnMut(Self::Item) -> Option<T>, Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931353,"byte_end":8931428,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931433,"byte_end":8931496,"line_start":301,"line_end":301,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931501,"byte_end":8931504,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931509,"byte_end":8931584,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931589,"byte_end":8931641,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931646,"byte_end":8931722,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`], then the value value will be skipped.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931727,"byte_end":8931793,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931798,"byte_end":8931801,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931806,"byte_end":8931882,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931887,"byte_end":8931963,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931968,"byte_end":8931989,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8931994,"byte_end":8931997,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932002,"byte_end":8932016,"line_start":312,"line_end":312,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932021,"byte_end":8932028,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932033,"byte_end":8932053,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932058,"byte_end":8932081,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932086,"byte_end":8932127,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932132,"byte_end":8932135,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932140,"byte_end":8932177,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932182,"byte_end":8932225,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932230,"byte_end":8932281,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932286,"byte_end":8932293,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932298,"byte_end":8932301,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932306,"byte_end":8932350,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932355,"byte_end":8932399,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932404,"byte_end":8932448,"line_start":325,"line_end":325,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932453,"byte_end":8932497,"line_start":326,"line_end":326,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932502,"byte_end":8932543,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932548,"byte_end":8932555,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932560,"byte_end":8932567,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934717,"byte_end":8934721,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932749,"byte_end":8932804,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932809,"byte_end":8932812,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932817,"byte_end":8932890,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932895,"byte_end":8932967,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8932972,"byte_end":8933046,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933051,"byte_end":8933077,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933082,"byte_end":8933085,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933090,"byte_end":8933104,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933109,"byte_end":8933112,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933117,"byte_end":8933124,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933129,"byte_end":8933172,"line_start":348,"line_end":348,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933177,"byte_end":8933180,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933185,"byte_end":8933207,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933212,"byte_end":8933247,"line_start":351,"line_end":351,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933252,"byte_end":8933255,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933260,"byte_end":8933314,"line_start":353,"line_end":353,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933319,"byte_end":8933341,"line_start":354,"line_end":354,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933346,"byte_end":8933365,"line_start":355,"line_end":355,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933370,"byte_end":8933375,"line_start":356,"line_end":356,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933380,"byte_end":8933383,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933388,"byte_end":8933419,"line_start":358,"line_end":358,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933424,"byte_end":8933448,"line_start":359,"line_end":359,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933453,"byte_end":8933456,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933461,"byte_end":8933553,"line_start":361,"line_end":361,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933558,"byte_end":8933591,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933596,"byte_end":8933636,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933641,"byte_end":8933644,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933649,"byte_end":8933698,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933703,"byte_end":8933732,"line_start":366,"line_end":366,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933737,"byte_end":8933775,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933780,"byte_end":8933800,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933805,"byte_end":8933838,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933843,"byte_end":8933856,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933861,"byte_end":8933870,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933875,"byte_end":8933880,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933885,"byte_end":8933888,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933893,"byte_end":8933911,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933916,"byte_end":8933937,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933942,"byte_end":8933990,"line_start":376,"line_end":376,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8933995,"byte_end":8933998,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934003,"byte_end":8934044,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934049,"byte_end":8934098,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934103,"byte_end":8934149,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934154,"byte_end":8934203,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934208,"byte_end":8934254,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934259,"byte_end":8934262,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934267,"byte_end":8934303,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934308,"byte_end":8934347,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934352,"byte_end":8934355,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934360,"byte_end":8934409,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934414,"byte_end":8934460,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934465,"byte_end":8934468,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934473,"byte_end":8934534,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934539,"byte_end":8934585,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934590,"byte_end":8934636,"line_start":392,"line_end":392,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934641,"byte_end":8934687,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934692,"byte_end":8934697,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934702,"byte_end":8934709,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4685},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935457,"byte_end":8935461,"line_start":423,"line_end":423,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934814,"byte_end":8934885,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934890,"byte_end":8934893,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934898,"byte_end":8934971,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8934976,"byte_end":8935011,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935016,"byte_end":8935019,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935024,"byte_end":8935038,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935043,"byte_end":8935046,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935051,"byte_end":8935058,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935063,"byte_end":8935083,"line_start":411,"line_end":411,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935088,"byte_end":8935111,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935116,"byte_end":8935157,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935162,"byte_end":8935165,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935170,"byte_end":8935220,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935225,"byte_end":8935228,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935233,"byte_end":8935278,"line_start":417,"line_end":417,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935283,"byte_end":8935328,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935333,"byte_end":8935378,"line_start":419,"line_end":419,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935383,"byte_end":8935425,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935430,"byte_end":8935437,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935442,"byte_end":8935449,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4686},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936354,"byte_end":8936364,"line_start":452,"line_end":452,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"pub fn take_while<F>(Self, F) -> TakeWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935567,"byte_end":8935630,"line_start":430,"line_end":430,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935635,"byte_end":8935658,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935663,"byte_end":8935666,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935671,"byte_end":8935746,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935751,"byte_end":8935823,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935828,"byte_end":8935892,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935897,"byte_end":8935900,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935905,"byte_end":8935919,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935924,"byte_end":8935927,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935932,"byte_end":8935939,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935944,"byte_end":8935964,"line_start":440,"line_end":440,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935969,"byte_end":8935992,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8935997,"byte_end":8936038,"line_start":442,"line_end":442,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936043,"byte_end":8936046,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936051,"byte_end":8936117,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936122,"byte_end":8936125,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936130,"byte_end":8936175,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936180,"byte_end":8936225,"line_start":447,"line_end":447,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936230,"byte_end":8936275,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936280,"byte_end":8936322,"line_start":449,"line_end":449,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936327,"byte_end":8936334,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936339,"byte_end":8936346,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937061,"byte_end":8937065,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936521,"byte_end":8936587,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936592,"byte_end":8936614,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936619,"byte_end":8936622,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936627,"byte_end":8936641,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936646,"byte_end":8936649,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936654,"byte_end":8936661,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936666,"byte_end":8936686,"line_start":466,"line_end":466,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936691,"byte_end":8936714,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936719,"byte_end":8936760,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936765,"byte_end":8936768,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936773,"byte_end":8936823,"line_start":470,"line_end":470,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936828,"byte_end":8936831,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936836,"byte_end":8936881,"line_start":472,"line_end":472,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936886,"byte_end":8936931,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936936,"byte_end":8936982,"line_start":474,"line_end":474,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8936987,"byte_end":8937029,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937034,"byte_end":8937041,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937046,"byte_end":8937053,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4689},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938043,"byte_end":8938053,"line_start":508,"line_end":508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"pub fn skip_while<F>(Self, F) -> SkipWhile<Self, F> where\nF: FnMut(&Self::Item) -> bool, Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937171,"byte_end":8937244,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937249,"byte_end":8937272,"line_start":486,"line_end":486,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937277,"byte_end":8937280,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937285,"byte_end":8937363,"line_start":488,"line_end":488,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937368,"byte_end":8937440,"line_start":489,"line_end":489,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937445,"byte_end":8937505,"line_start":490,"line_end":490,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937510,"byte_end":8937513,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937518,"byte_end":8937581,"line_start":492,"line_end":492,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937586,"byte_end":8937589,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937594,"byte_end":8937608,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937613,"byte_end":8937616,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937621,"byte_end":8937628,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937633,"byte_end":8937653,"line_start":497,"line_end":497,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937658,"byte_end":8937681,"line_start":498,"line_end":498,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937686,"byte_end":8937727,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937732,"byte_end":8937806,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937811,"byte_end":8937814,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937819,"byte_end":8937864,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937869,"byte_end":8937914,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937919,"byte_end":8937964,"line_start":504,"line_end":504,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8937969,"byte_end":8938011,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938016,"byte_end":8938023,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938028,"byte_end":8938035,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4691},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939632,"byte_end":8939635,"line_start":563,"line_end":563,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"pub fn all<F>(&mut Self, F) -> AllFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938210,"byte_end":8938271,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938276,"byte_end":8938279,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938284,"byte_end":8938354,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938359,"byte_end":8938429,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938434,"byte_end":8938499,"line_start":520,"line_end":520,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938504,"byte_end":8938556,"line_start":521,"line_end":521,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938561,"byte_end":8938564,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938569,"byte_end":8938641,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938646,"byte_end":8938720,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938725,"byte_end":8938761,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938766,"byte_end":8938769,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938774,"byte_end":8938809,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938814,"byte_end":8938817,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938822,"byte_end":8938836,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938841,"byte_end":8938844,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938849,"byte_end":8938865,"line_start":531,"line_end":531,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938870,"byte_end":8938873,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938878,"byte_end":8938885,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938890,"byte_end":8938910,"line_start":534,"line_end":534,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938915,"byte_end":8938938,"line_start":535,"line_end":535,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938943,"byte_end":8938984,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938989,"byte_end":8938992,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8938997,"byte_end":8939019,"line_start":538,"line_end":538,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939024,"byte_end":8939027,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939032,"byte_end":8939084,"line_start":540,"line_end":540,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939089,"byte_end":8939092,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939097,"byte_end":8939150,"line_start":542,"line_end":542,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939155,"byte_end":8939162,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939167,"byte_end":8939174,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939179,"byte_end":8939182,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939187,"byte_end":8939221,"line_start":546,"line_end":546,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939226,"byte_end":8939229,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939234,"byte_end":8939241,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939246,"byte_end":8939266,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939271,"byte_end":8939294,"line_start":550,"line_end":550,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939299,"byte_end":8939340,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939345,"byte_end":8939348,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939353,"byte_end":8939375,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939380,"byte_end":8939383,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939388,"byte_end":8939424,"line_start":555,"line_end":555,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939429,"byte_end":8939432,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939437,"byte_end":8939479,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939484,"byte_end":8939487,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939492,"byte_end":8939551,"line_start":559,"line_end":559,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939556,"byte_end":8939600,"line_start":560,"line_end":560,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939605,"byte_end":8939612,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939617,"byte_end":8939624,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4693},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941160,"byte_end":8941163,"line_start":616,"line_end":616,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"pub fn any<F>(&mut Self, F) -> AnyFuture<, Self, F> where Self: Unpin,\nF: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939800,"byte_end":8939859,"line_start":571,"line_end":571,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939864,"byte_end":8939867,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939872,"byte_end":8939942,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8939947,"byte_end":8940020,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940025,"byte_end":8940089,"line_start":575,"line_end":575,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940094,"byte_end":8940114,"line_start":576,"line_end":576,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940119,"byte_end":8940122,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940127,"byte_end":8940199,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940204,"byte_end":8940277,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940282,"byte_end":8940317,"line_start":580,"line_end":580,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940322,"byte_end":8940325,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940330,"byte_end":8940366,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940371,"byte_end":8940374,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940379,"byte_end":8940395,"line_start":584,"line_end":584,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940400,"byte_end":8940403,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940408,"byte_end":8940415,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940420,"byte_end":8940440,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940445,"byte_end":8940468,"line_start":588,"line_end":588,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940473,"byte_end":8940514,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940519,"byte_end":8940522,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940527,"byte_end":8940549,"line_start":591,"line_end":591,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940554,"byte_end":8940557,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940562,"byte_end":8940614,"line_start":593,"line_end":593,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940619,"byte_end":8940622,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940627,"byte_end":8940680,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940685,"byte_end":8940692,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940697,"byte_end":8940704,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940709,"byte_end":8940712,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940717,"byte_end":8940750,"line_start":599,"line_end":599,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940755,"byte_end":8940758,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940763,"byte_end":8940770,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940775,"byte_end":8940795,"line_start":602,"line_end":602,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940800,"byte_end":8940823,"line_start":603,"line_end":603,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940828,"byte_end":8940869,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940874,"byte_end":8940877,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940882,"byte_end":8940904,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940909,"byte_end":8940912,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940917,"byte_end":8940953,"line_start":608,"line_end":608,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940958,"byte_end":8940961,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8940966,"byte_end":8941007,"line_start":610,"line_end":610,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941012,"byte_end":8941015,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941020,"byte_end":8941079,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941084,"byte_end":8941128,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941133,"byte_end":8941140,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941145,"byte_end":8941152,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4695},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942306,"byte_end":8942311,"line_start":651,"line_end":651,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"pub fn chain<U>(Self, U) -> Chain<Self, U> where U: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941328,"byte_end":8941399,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941404,"byte_end":8941460,"line_start":625,"line_end":625,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941465,"byte_end":8941468,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941473,"byte_end":8941547,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941552,"byte_end":8941588,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941593,"byte_end":8941596,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941601,"byte_end":8941615,"line_start":630,"line_end":630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941620,"byte_end":8941623,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941628,"byte_end":8941635,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941640,"byte_end":8941681,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941686,"byte_end":8941689,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941694,"byte_end":8941712,"line_start":635,"line_end":635,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941717,"byte_end":8941738,"line_start":636,"line_end":636,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941743,"byte_end":8941789,"line_start":637,"line_end":637,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941794,"byte_end":8941840,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941845,"byte_end":8941848,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941853,"byte_end":8941893,"line_start":640,"line_end":640,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941898,"byte_end":8941901,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941906,"byte_end":8941955,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8941960,"byte_end":8942009,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942014,"byte_end":8942063,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942068,"byte_end":8942117,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942122,"byte_end":8942171,"line_start":646,"line_end":646,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942176,"byte_end":8942225,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942230,"byte_end":8942276,"line_start":648,"line_end":648,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942281,"byte_end":8942286,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942291,"byte_end":8942298,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4697},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942904,"byte_end":8942908,"line_start":675,"line_end":675,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"pub fn fold<B, F>(Self, B, F) -> FoldFuture<Self, B, F> where Self: Sized,\nF: FnMut(B, Self::Item) -> B","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942467,"byte_end":8942536,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942541,"byte_end":8942577,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942582,"byte_end":8942585,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942590,"byte_end":8942604,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942609,"byte_end":8942625,"line_start":663,"line_end":663,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942630,"byte_end":8942637,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942642,"byte_end":8942662,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942667,"byte_end":8942690,"line_start":666,"line_end":666,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942695,"byte_end":8942728,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942733,"byte_end":8942736,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942741,"byte_end":8942783,"line_start":669,"line_end":669,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942788,"byte_end":8942836,"line_start":670,"line_end":670,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942841,"byte_end":8942844,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942849,"byte_end":8942872,"line_start":672,"line_end":672,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942877,"byte_end":8942884,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8942889,"byte_end":8942896,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4700},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945221,"byte_end":8945228,"line_start":747,"line_end":747,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"pub fn collect<T>(Self) -> Collect<Self, T> where T: FromStream<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943087,"byte_end":8943149,"line_start":683,"line_end":683,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943154,"byte_end":8943157,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943162,"byte_end":8943238,"line_start":685,"line_end":685,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943243,"byte_end":8943310,"line_start":686,"line_end":686,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943315,"byte_end":8943363,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943368,"byte_end":8943433,"line_start":688,"line_end":688,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943438,"byte_end":8943441,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943446,"byte_end":8943460,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943465,"byte_end":8943468,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943473,"byte_end":8943547,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943552,"byte_end":8943624,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943629,"byte_end":8943704,"line_start":694,"line_end":694,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943709,"byte_end":8943771,"line_start":695,"line_end":695,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943776,"byte_end":8943779,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943784,"byte_end":8943795,"line_start":697,"line_end":697,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943800,"byte_end":8943803,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943808,"byte_end":8943878,"line_start":699,"line_end":699,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust langague.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943883,"byte_end":8943921,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943926,"byte_end":8943929,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943934,"byte_end":8943948,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943953,"byte_end":8943956,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943961,"byte_end":8943977,"line_start":704,"line_end":704,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943982,"byte_end":8943985,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8943990,"byte_end":8943997,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944002,"byte_end":8944043,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944048,"byte_end":8944051,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944056,"byte_end":8944074,"line_start":709,"line_end":709,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944079,"byte_end":8944100,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944105,"byte_end":8944136,"line_start":711,"line_end":711,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944141,"byte_end":8944180,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944185,"byte_end":8944216,"line_start":713,"line_end":713,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944221,"byte_end":8944247,"line_start":714,"line_end":714,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944252,"byte_end":8944275,"line_start":715,"line_end":715,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944280,"byte_end":8944283,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944288,"byte_end":8944331,"line_start":717,"line_end":717,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944336,"byte_end":8944341,"line_start":718,"line_end":718,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944346,"byte_end":8944353,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944358,"byte_end":8944361,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944366,"byte_end":8944408,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944413,"byte_end":8944416,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944421,"byte_end":8944428,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944433,"byte_end":8944474,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944479,"byte_end":8944482,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944487,"byte_end":8944505,"line_start":726,"line_end":726,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944510,"byte_end":8944531,"line_start":727,"line_end":727,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944536,"byte_end":8944601,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944606,"byte_end":8944650,"line_start":729,"line_end":729,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944655,"byte_end":8944706,"line_start":730,"line_end":730,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944711,"byte_end":8944737,"line_start":731,"line_end":731,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944742,"byte_end":8944765,"line_start":732,"line_end":732,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944770,"byte_end":8944773,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944778,"byte_end":8944824,"line_start":734,"line_end":734,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944829,"byte_end":8944832,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944837,"byte_end":8944909,"line_start":736,"line_end":736,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944914,"byte_end":8944986,"line_start":737,"line_end":737,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944991,"byte_end":8944994,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8944999,"byte_end":8945043,"line_start":739,"line_end":739,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945048,"byte_end":8945081,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945086,"byte_end":8945112,"line_start":741,"line_end":741,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945117,"byte_end":8945140,"line_start":742,"line_end":742,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945145,"byte_end":8945148,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945153,"byte_end":8945191,"line_start":744,"line_end":744,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945196,"byte_end":8945201,"line_start":745,"line_end":745,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945206,"byte_end":8945213,"line_start":746,"line_end":746,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4702},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947883,"byte_end":8947890,"line_start":811,"line_end":811,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"pub fn timeout(Self, Duration) -> Timeout<Self> where Self: Sized","parent":{"krate":0,"index":4669},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945368,"byte_end":8945420,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945425,"byte_end":8945428,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945433,"byte_end":8945505,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945510,"byte_end":8945580,"line_start":758,"line_end":758,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945585,"byte_end":8945588,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945593,"byte_end":8945669,"line_start":760,"line_end":760,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945674,"byte_end":8945751,"line_start":761,"line_end":761,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945756,"byte_end":8945832,"line_start":762,"line_end":762,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945837,"byte_end":8945880,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945885,"byte_end":8945888,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945893,"byte_end":8945904,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945909,"byte_end":8945912,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945917,"byte_end":8945983,"line_start":767,"line_end":767,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8945988,"byte_end":8946014,"line_start":768,"line_end":768,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946019,"byte_end":8946022,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946027,"byte_end":8946102,"line_start":770,"line_end":770,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946107,"byte_end":8946141,"line_start":771,"line_end":771,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946146,"byte_end":8946149,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946154,"byte_end":8946168,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946173,"byte_end":8946176,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946181,"byte_end":8946255,"line_start":775,"line_end":775,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946260,"byte_end":8946263,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946268,"byte_end":8946275,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946280,"byte_end":8946300,"line_start":778,"line_end":778,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946305,"byte_end":8946328,"line_start":779,"line_end":779,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946333,"byte_end":8946374,"line_start":780,"line_end":780,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946379,"byte_end":8946407,"line_start":781,"line_end":781,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946412,"byte_end":8946455,"line_start":782,"line_end":782,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946460,"byte_end":8946463,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946468,"byte_end":8946536,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946541,"byte_end":8946544,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946549,"byte_end":8946616,"line_start":786,"line_end":786,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946621,"byte_end":8946678,"line_start":787,"line_end":787,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946683,"byte_end":8946740,"line_start":788,"line_end":788,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946745,"byte_end":8946802,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946807,"byte_end":8946861,"line_start":790,"line_end":790,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946866,"byte_end":8946869,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946874,"byte_end":8946959,"line_start":792,"line_end":792,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8946964,"byte_end":8947040,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947045,"byte_end":8947102,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947107,"byte_end":8947157,"line_start":795,"line_end":795,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947162,"byte_end":8947219,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947224,"byte_end":8947281,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947286,"byte_end":8947340,"line_start":798,"line_end":798,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947345,"byte_end":8947348,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947353,"byte_end":8947424,"line_start":800,"line_end":800,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947429,"byte_end":8947492,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947497,"byte_end":8947569,"line_start":802,"line_end":802,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947574,"byte_end":8947636,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947641,"byte_end":8947644,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947649,"byte_end":8947706,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947711,"byte_end":8947765,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947770,"byte_end":8947777,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947782,"byte_end":8947789,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"cfg(all(feature = \"time\"))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8947794,"byte_end":8947823,"line_start":809,"line_end":809,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":5200},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9110846,"byte_end":9110852,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5704},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708},{"krate":0,"index":5709},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5720},{"krate":0,"index":5731},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5873}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21519,"byte_end":21546,"line_start":247,"line_end":247,"column_start":13,"column_end":40}},{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182507,"byte_end":9182538,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182539,"byte_end":9182542,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182543,"byte_end":9182565,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182566,"byte_end":9182569,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182570,"byte_end":9182651,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182652,"byte_end":9182732,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182733,"byte_end":9182813,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182814,"byte_end":9182888,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182889,"byte_end":9182964,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182965,"byte_end":9182987,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182988,"byte_end":9182991,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9182992,"byte_end":9183027,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183028,"byte_end":9183031,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183032,"byte_end":9183106,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183107,"byte_end":9183186,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183187,"byte_end":9183259,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183260,"byte_end":9183335,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183336,"byte_end":9183389,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183390,"byte_end":9183393,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183394,"byte_end":9183471,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183472,"byte_end":9183545,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183546,"byte_end":9183625,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183626,"byte_end":9183704,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183705,"byte_end":9183777,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183778,"byte_end":9183853,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183854,"byte_end":9183928,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9183929,"byte_end":9184004,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184005,"byte_end":9184035,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184036,"byte_end":9184039,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184040,"byte_end":9184118,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184119,"byte_end":9184194,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184195,"byte_end":9184272,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184273,"byte_end":9184352,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184353,"byte_end":9184431,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184432,"byte_end":9184507,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184508,"byte_end":9184583,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184584,"byte_end":9184645,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184646,"byte_end":9184649,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184650,"byte_end":9184674,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184675,"byte_end":9184739,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184740,"byte_end":9184800,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184801,"byte_end":9184890,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184891,"byte_end":9184979,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184980,"byte_end":9184983,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9184984,"byte_end":9185009,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185010,"byte_end":9185013,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185014,"byte_end":9185081,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185082,"byte_end":9185085,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185086,"byte_end":9185102,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185103,"byte_end":9185106,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185107,"byte_end":9185186,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185187,"byte_end":9185266,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185267,"byte_end":9185346,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185347,"byte_end":9185414,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185415,"byte_end":9185418,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185419,"byte_end":9185426,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185427,"byte_end":9185447,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185448,"byte_end":9185451,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185452,"byte_end":9185474,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185475,"byte_end":9185498,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185499,"byte_end":9185535,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185536,"byte_end":9185543,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185544,"byte_end":9185551,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185552,"byte_end":9185559,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185560,"byte_end":9185563,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185564,"byte_end":9185643,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185644,"byte_end":9185722,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185723,"byte_end":9185757,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185758,"byte_end":9185761,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185762,"byte_end":9185769,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185770,"byte_end":9185790,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185791,"byte_end":9185794,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185795,"byte_end":9185875,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185876,"byte_end":9185910,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185911,"byte_end":9185925,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185926,"byte_end":9185948,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185949,"byte_end":9185956,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185957,"byte_end":9185960,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185961,"byte_end":9185971,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185972,"byte_end":9185975,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9185976,"byte_end":9186020,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186021,"byte_end":9186050,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186051,"byte_end":9186090,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186091,"byte_end":9186103,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186104,"byte_end":9186111,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186112,"byte_end":9186119,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186120,"byte_end":9186123,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186124,"byte_end":9186204,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186205,"byte_end":9186281,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186282,"byte_end":9186294,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186295,"byte_end":9186298,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186299,"byte_end":9186306,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186307,"byte_end":9186327,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186328,"byte_end":9186331,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186332,"byte_end":9186370,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186371,"byte_end":9186405,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186406,"byte_end":9186447,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186448,"byte_end":9186455,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186456,"byte_end":9186459,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186460,"byte_end":9186518,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186519,"byte_end":9186552,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186553,"byte_end":9186560,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186561,"byte_end":9186568,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186569,"byte_end":9186572,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186573,"byte_end":9186646,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186647,"byte_end":9186675,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186676,"byte_end":9186679,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186680,"byte_end":9186721,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186722,"byte_end":9186755,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186756,"byte_end":9186802,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186803,"byte_end":9186846,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186847,"byte_end":9186889,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186890,"byte_end":9186931,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186932,"byte_end":9186935,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186936,"byte_end":9186965,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186966,"byte_end":9186969,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9186970,"byte_end":9187050,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187051,"byte_end":9187130,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187131,"byte_end":9187210,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187211,"byte_end":9187251,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187252,"byte_end":9187255,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187256,"byte_end":9187330,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187331,"byte_end":9187411,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187412,"byte_end":9187415,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187416,"byte_end":9187439,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187440,"byte_end":9187443,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187444,"byte_end":9187524,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187525,"byte_end":9187591,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187592,"byte_end":9187659,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187660,"byte_end":9187734,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187735,"byte_end":9187747,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187748,"byte_end":9187751,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187752,"byte_end":9187759,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187760,"byte_end":9187780,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187781,"byte_end":9187784,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187785,"byte_end":9187808,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187809,"byte_end":9187838,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187839,"byte_end":9187901,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187902,"byte_end":9187909,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187910,"byte_end":9187917,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187918,"byte_end":9187925,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187926,"byte_end":9187929,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9187930,"byte_end":9188004,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188005,"byte_end":9188072,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188073,"byte_end":9188076,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188077,"byte_end":9188088,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188089,"byte_end":9188111,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188112,"byte_end":9188176,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188177,"byte_end":9188217,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188218,"byte_end":9188280,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188281,"byte_end":9188309,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188310,"byte_end":9188317,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188318,"byte_end":9188321,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188322,"byte_end":9188351,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188352,"byte_end":9188397,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188398,"byte_end":9188410,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188411,"byte_end":9188418,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188419,"byte_end":9188426,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188427,"byte_end":9188430,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188431,"byte_end":9188454,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188455,"byte_end":9188458,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188459,"byte_end":9188539,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188540,"byte_end":9188614,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188615,"byte_end":9188691,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188692,"byte_end":9188766,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188767,"byte_end":9188846,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188847,"byte_end":9188929,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188930,"byte_end":9188951,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188952,"byte_end":9188955,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188956,"byte_end":9188972,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188973,"byte_end":9188976,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188977,"byte_end":9188984,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9188985,"byte_end":9189005,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189006,"byte_end":9189009,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189010,"byte_end":9189033,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189034,"byte_end":9189076,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189077,"byte_end":9189139,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189140,"byte_end":9189168,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189169,"byte_end":9189176,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189177,"byte_end":9189180,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189181,"byte_end":9189226,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189227,"byte_end":9189234,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189235,"byte_end":9189242,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189243,"byte_end":9189246,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189247,"byte_end":9189265,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189266,"byte_end":9189269,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189270,"byte_end":9189344,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189345,"byte_end":9189423,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189424,"byte_end":9189500,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189501,"byte_end":9189558,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189559,"byte_end":9189637,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189638,"byte_end":9189666,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189667,"byte_end":9189670,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189671,"byte_end":9189682,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189683,"byte_end":9189703,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189704,"byte_end":9189707,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189708,"byte_end":9189746,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189747,"byte_end":9189758,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189759,"byte_end":9189786,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189787,"byte_end":9189805,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189806,"byte_end":9189848,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189849,"byte_end":9189860,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189861,"byte_end":9189864,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189865,"byte_end":9189932,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189933,"byte_end":9189965,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9189966,"byte_end":9190002,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190003,"byte_end":9190008,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190009,"byte_end":9190022,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190023,"byte_end":9190030,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190031,"byte_end":9190038,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190039,"byte_end":9190042,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190043,"byte_end":9190100,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190101,"byte_end":9190158,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"/ [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190159,"byte_end":9190218,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190219,"byte_end":9190268,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/mod.rs","byte_start":9190269,"byte_end":9190318,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":5721},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/spawn.rs","byte_start":9194401,"byte_end":9194406,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":5723},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9195420,"byte_end":9195429,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":21661,"byte_end":21688,"line_start":256,"line_end":256,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9195339,"byte_end":9195402,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5874},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9199856,"byte_end":9199864,"line_start":112,"line_end":112,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":5875},{"krate":0,"index":5876},{"krate":0,"index":5877}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22202,"byte_end":22229,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":5883},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9201876,"byte_end":9201887,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":22202,"byte_end":22229,"line_start":282,"line_end":282,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5764},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9202720,"byte_end":9202723,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9202675,"byte_end":9202708,"line_start":221,"line_end":221,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5765},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204428,"byte_end":9204439,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203265,"byte_end":9203315,"line_start":239,"line_end":239,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203320,"byte_end":9203323,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203328,"byte_end":9203388,"line_start":241,"line_end":241,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203393,"byte_end":9203396,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203401,"byte_end":9203473,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203478,"byte_end":9203548,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203553,"byte_end":9203564,"line_start":245,"line_end":245,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203569,"byte_end":9203589,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203594,"byte_end":9203597,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203602,"byte_end":9203620,"line_start":248,"line_end":248,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203625,"byte_end":9203646,"line_start":249,"line_end":249,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203651,"byte_end":9203693,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203698,"byte_end":9203701,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203706,"byte_end":9203778,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203783,"byte_end":9203836,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203841,"byte_end":9203874,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203879,"byte_end":9203896,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203901,"byte_end":9203912,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203917,"byte_end":9203920,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203925,"byte_end":9203959,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9203964,"byte_end":9204000,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204005,"byte_end":9204023,"line_start":260,"line_end":260,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204028,"byte_end":9204045,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204050,"byte_end":9204053,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204058,"byte_end":9204129,"line_start":263,"line_end":263,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204134,"byte_end":9204184,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204189,"byte_end":9204222,"line_start":265,"line_end":265,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204227,"byte_end":9204244,"line_start":266,"line_end":266,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204249,"byte_end":9204260,"line_start":267,"line_end":267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204265,"byte_end":9204268,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204273,"byte_end":9204309,"line_start":269,"line_end":269,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204314,"byte_end":9204332,"line_start":270,"line_end":270,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204337,"byte_end":9204354,"line_start":271,"line_end":271,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204359,"byte_end":9204364,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204369,"byte_end":9204376,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204381,"byte_end":9204416,"line_start":274,"line_end":274,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5767},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207110,"byte_end":9207118,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &mut crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204718,"byte_end":9204792,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204797,"byte_end":9204856,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204861,"byte_end":9204864,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204869,"byte_end":9204936,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9204941,"byte_end":9205014,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205019,"byte_end":9205095,"line_start":290,"line_end":290,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205100,"byte_end":9205180,"line_start":291,"line_end":291,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205185,"byte_end":9205204,"line_start":292,"line_end":292,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205209,"byte_end":9205212,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205217,"byte_end":9205283,"line_start":294,"line_end":294,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205288,"byte_end":9205291,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205296,"byte_end":9205308,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205313,"byte_end":9205316,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205321,"byte_end":9205393,"line_start":298,"line_end":298,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205398,"byte_end":9205471,"line_start":299,"line_end":299,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205476,"byte_end":9205479,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205484,"byte_end":9205495,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205500,"byte_end":9205503,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205508,"byte_end":9205582,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205587,"byte_end":9205662,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205667,"byte_end":9205742,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205747,"byte_end":9205824,"line_start":306,"line_end":306,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205829,"byte_end":9205832,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205837,"byte_end":9205870,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205875,"byte_end":9205894,"line_start":309,"line_end":309,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205899,"byte_end":9205931,"line_start":310,"line_end":310,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205936,"byte_end":9205956,"line_start":311,"line_end":311,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205961,"byte_end":9205964,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9205969,"byte_end":9206010,"line_start":313,"line_end":313,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206015,"byte_end":9206053,"line_start":314,"line_end":314,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206058,"byte_end":9206093,"line_start":315,"line_end":315,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206098,"byte_end":9206142,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206147,"byte_end":9206206,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206211,"byte_end":9206233,"line_start":318,"line_end":318,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206238,"byte_end":9206253,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206258,"byte_end":9206276,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206281,"byte_end":9206292,"line_start":321,"line_end":321,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206297,"byte_end":9206325,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206330,"byte_end":9206336,"line_start":323,"line_end":323,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206341,"byte_end":9206348,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206353,"byte_end":9206387,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206392,"byte_end":9206399,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206404,"byte_end":9206436,"line_start":327,"line_end":327,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206441,"byte_end":9206461,"line_start":328,"line_end":328,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206466,"byte_end":9206469,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206474,"byte_end":9206515,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206520,"byte_end":9206558,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206563,"byte_end":9206598,"line_start":332,"line_end":332,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206603,"byte_end":9206647,"line_start":333,"line_end":333,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206652,"byte_end":9206711,"line_start":334,"line_end":334,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206716,"byte_end":9206738,"line_start":335,"line_end":335,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206743,"byte_end":9206764,"line_start":336,"line_end":336,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206769,"byte_end":9206787,"line_start":337,"line_end":337,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206792,"byte_end":9206803,"line_start":338,"line_end":338,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206808,"byte_end":9206836,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206841,"byte_end":9206847,"line_start":340,"line_end":340,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206852,"byte_end":9206859,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206864,"byte_end":9206867,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206872,"byte_end":9206907,"line_start":343,"line_end":343,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206912,"byte_end":9206979,"line_start":344,"line_end":344,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9206984,"byte_end":9207039,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207044,"byte_end":9207098,"line_start":346,"line_end":346,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5769},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208369,"byte_end":9208378,"line_start":382,"line_end":382,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207277,"byte_end":9207347,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207352,"byte_end":9207355,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207360,"byte_end":9207430,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207435,"byte_end":9207511,"line_start":357,"line_end":357,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207516,"byte_end":9207584,"line_start":358,"line_end":358,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207589,"byte_end":9207669,"line_start":359,"line_end":359,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207674,"byte_end":9207746,"line_start":360,"line_end":360,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207751,"byte_end":9207826,"line_start":361,"line_end":361,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207831,"byte_end":9207887,"line_start":362,"line_end":362,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207892,"byte_end":9207895,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207900,"byte_end":9207914,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207919,"byte_end":9207922,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207927,"byte_end":9207938,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207943,"byte_end":9207963,"line_start":367,"line_end":367,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207968,"byte_end":9207971,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207976,"byte_end":9207994,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9207999,"byte_end":9208020,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208025,"byte_end":9208072,"line_start":371,"line_end":371,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208077,"byte_end":9208119,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208124,"byte_end":9208146,"line_start":373,"line_end":373,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208151,"byte_end":9208181,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208186,"byte_end":9208204,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208209,"byte_end":9208226,"line_start":376,"line_end":376,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208231,"byte_end":9208236,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208241,"byte_end":9208248,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208253,"byte_end":9208256,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208261,"byte_end":9208296,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9208301,"byte_end":9208351,"line_start":381,"line_end":381,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5826},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217324,"byte_end":9217332,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":5828}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216462,"byte_end":9216492,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216493,"byte_end":9216496,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216497,"byte_end":9216551,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216552,"byte_end":9216555,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216556,"byte_end":9216622,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216623,"byte_end":9216690,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216691,"byte_end":9216748,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216749,"byte_end":9216818,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216819,"byte_end":9216822,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216823,"byte_end":9216837,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216838,"byte_end":9216841,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216842,"byte_end":9216849,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216850,"byte_end":9216872,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216873,"byte_end":9216897,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216898,"byte_end":9216925,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216926,"byte_end":9216931,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216932,"byte_end":9216935,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216936,"byte_end":9216968,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9216969,"byte_end":9217005,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217006,"byte_end":9217019,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217020,"byte_end":9217023,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217024,"byte_end":9217056,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217057,"byte_end":9217093,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217094,"byte_end":9217097,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217098,"byte_end":9217134,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217135,"byte_end":9217175,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217176,"byte_end":9217193,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217194,"byte_end":9217207,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217208,"byte_end":9217215,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217216,"byte_end":9217223,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: https://doc.rust-lang.org/std/thread/struct.LocalKey.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217224,"byte_end":9217312,"line_start":92,"line_end":92,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":5828},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217374,"byte_end":9217379,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":5826},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5831},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217907,"byte_end":9217912,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217457,"byte_end":9217521,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217526,"byte_end":9217529,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217534,"byte_end":9217595,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217600,"byte_end":9217603,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217608,"byte_end":9217624,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217629,"byte_end":9217632,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217637,"byte_end":9217644,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217649,"byte_end":9217671,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217676,"byte_end":9217700,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217705,"byte_end":9217732,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217737,"byte_end":9217742,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217747,"byte_end":9217750,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217755,"byte_end":9217787,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217792,"byte_end":9217847,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217852,"byte_end":9217865,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217870,"byte_end":9217877,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217882,"byte_end":9217889,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5835},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218386,"byte_end":9218390,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218137,"byte_end":9218203,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218208,"byte_end":9218211,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218216,"byte_end":9218228,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218233,"byte_end":9218236,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218241,"byte_end":9218302,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218307,"byte_end":9218374,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5838},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218878,"byte_end":9218886,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218631,"byte_end":9218697,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218702,"byte_end":9218705,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218710,"byte_end":9218776,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218781,"byte_end":9218846,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9218851,"byte_end":9218866,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5844},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219346,"byte_end":9219349,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219241,"byte_end":9219283,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219288,"byte_end":9219334,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5886},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220838,"byte_end":9220849,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":5887}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220713,"byte_end":9220788,"line_start":222,"line_end":222,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":5898},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5998},{"krate":0,"index":5999},{"krate":0,"index":6000},{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6178},{"krate":0,"index":6191},{"krate":0,"index":6192},{"krate":0,"index":6228},{"krate":0,"index":6229},{"krate":0,"index":6252},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256},{"krate":0,"index":6291},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6538},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6564},{"krate":0,"index":6296},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6366}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/cfg.rs","byte_start":23058,"byte_end":23082,"line_start":324,"line_end":324,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221222,"byte_end":9221254,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221255,"byte_end":9221258,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221259,"byte_end":9221339,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221340,"byte_end":9221352,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221353,"byte_end":9221356,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221357,"byte_end":9221438,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221439,"byte_end":9221453,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221454,"byte_end":9221457,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221458,"byte_end":9221528,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221529,"byte_end":9221609,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221610,"byte_end":9221624,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221625,"byte_end":9221628,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221629,"byte_end":9221708,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221709,"byte_end":9221781,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221782,"byte_end":9221851,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221852,"byte_end":9221855,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221856,"byte_end":9221933,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221934,"byte_end":9221952,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221953,"byte_end":9221956,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9221957,"byte_end":9222028,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222029,"byte_end":9222048,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222049,"byte_end":9222052,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222053,"byte_end":9222123,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222124,"byte_end":9222127,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222128,"byte_end":9222142,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222143,"byte_end":9222146,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"Hello World!\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222147,"byte_end":9222186,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222187,"byte_end":9222190,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222191,"byte_end":9222198,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::delay_for;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222199,"byte_end":9222230,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222231,"byte_end":9222234,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222235,"byte_end":9222263,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222264,"byte_end":9222267,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222268,"byte_end":9222271,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222272,"byte_end":9222290,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222291,"byte_end":9222312,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222313,"byte_end":9222365,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222366,"byte_end":9222406,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222407,"byte_end":9222412,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222413,"byte_end":9222420,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222421,"byte_end":9222424,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222425,"byte_end":9222504,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222505,"byte_end":9222583,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"/ prelude.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222584,"byte_end":9222596,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222597,"byte_end":9222600,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222601,"byte_end":9222608,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222609,"byte_end":9222650,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222651,"byte_end":9222654,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222655,"byte_end":9222683,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222684,"byte_end":9222707,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222708,"byte_end":9222713,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222714,"byte_end":9222717,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222718,"byte_end":9222740,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222741,"byte_end":9222808,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222809,"byte_end":9222812,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222813,"byte_end":9222834,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222835,"byte_end":9222875,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222876,"byte_end":9222881,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222882,"byte_end":9222889,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9222890,"byte_end":9222897,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":5901},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5907},{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":11414},{"krate":0,"index":5915},{"krate":0,"index":5916},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":6383},{"krate":0,"index":6391},{"krate":0,"index":6394},{"krate":0,"index":6399},{"krate":0,"index":6402},{"krate":0,"index":6406},{"krate":0,"index":6404},{"krate":0,"index":6408},{"krate":0,"index":6412},{"krate":0,"index":6415},{"krate":0,"index":6422},{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5947},{"krate":0,"index":5949},{"krate":0,"index":5952},{"krate":0,"index":5956},{"krate":0,"index":5966},{"krate":0,"index":5969},{"krate":0,"index":5971}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9228913,"byte_end":9228945,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9228946,"byte_end":9228949,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9228950,"byte_end":9228990,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9228991,"byte_end":9228994,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9228995,"byte_end":9229032,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":6383},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233277,"byte_end":9233287,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":6385},{"krate":0,"index":6386},{"krate":0,"index":6387},{"krate":0,"index":6388},{"krate":0,"index":6389},{"krate":0,"index":6390}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229273,"byte_end":9229305,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229306,"byte_end":9229309,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229310,"byte_end":9229387,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229388,"byte_end":9229428,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229429,"byte_end":9229432,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229433,"byte_end":9229444,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229445,"byte_end":9229448,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229449,"byte_end":9229516,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229517,"byte_end":9229597,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229598,"byte_end":9229676,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229677,"byte_end":9229713,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229714,"byte_end":9229717,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229718,"byte_end":9229788,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229789,"byte_end":9229867,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229868,"byte_end":9229941,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9229942,"byte_end":9230011,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230012,"byte_end":9230015,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230016,"byte_end":9230045,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230046,"byte_end":9230049,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230050,"byte_end":9230128,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230129,"byte_end":9230209,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230210,"byte_end":9230286,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230287,"byte_end":9230299,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230300,"byte_end":9230303,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230304,"byte_end":9230383,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230384,"byte_end":9230461,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230462,"byte_end":9230538,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230539,"byte_end":9230572,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230573,"byte_end":9230576,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230577,"byte_end":9230655,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230656,"byte_end":9230732,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230733,"byte_end":9230811,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230812,"byte_end":9230851,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230852,"byte_end":9230855,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230856,"byte_end":9230876,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230877,"byte_end":9230880,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of the same timer wheel used internally by","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230881,"byte_end":9230979,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ Tokio's standalone timer utilities such as [`delay_for`]. Because of this, it offers the same","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9230980,"byte_end":9231077,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231078,"byte_end":9231119,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231120,"byte_end":9231123,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231124,"byte_end":9231224,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231225,"byte_end":9231290,"line_start":58,"line_end":58,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231291,"byte_end":9231294,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231295,"byte_end":9231377,"line_start":60,"line_end":60,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231378,"byte_end":9231405,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231406,"byte_end":9231409,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231410,"byte_end":9231421,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231422,"byte_end":9231425,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231426,"byte_end":9231473,"line_start":65,"line_end":65,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231474,"byte_end":9231477,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231478,"byte_end":9231496,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231497,"byte_end":9231551,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231552,"byte_end":9231555,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231556,"byte_end":9231579,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231580,"byte_end":9231614,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231615,"byte_end":9231650,"line_start":72,"line_end":72,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231651,"byte_end":9231679,"line_start":73,"line_end":73,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231680,"byte_end":9231709,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231710,"byte_end":9231736,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231737,"byte_end":9231740,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231741,"byte_end":9231759,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231760,"byte_end":9231822,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231823,"byte_end":9231865,"line_start":79,"line_end":79,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231866,"byte_end":9231871,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231872,"byte_end":9231875,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231876,"byte_end":9231905,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231906,"byte_end":9231909,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231910,"byte_end":9231926,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231927,"byte_end":9231986,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9231987,"byte_end":9232027,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232028,"byte_end":9232096,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232097,"byte_end":9232100,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232101,"byte_end":9232154,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232155,"byte_end":9232164,"line_start":90,"line_end":90,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232165,"byte_end":9232168,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232169,"byte_end":9232226,"line_start":92,"line_end":92,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232227,"byte_end":9232260,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232261,"byte_end":9232298,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232299,"byte_end":9232308,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232309,"byte_end":9232312,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232313,"byte_end":9232359,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232360,"byte_end":9232428,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232429,"byte_end":9232481,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232482,"byte_end":9232495,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232496,"byte_end":9232505,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232506,"byte_end":9232509,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232510,"byte_end":9232593,"line_start":103,"line_end":103,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232594,"byte_end":9232671,"line_start":104,"line_end":104,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232672,"byte_end":9232705,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232706,"byte_end":9232759,"line_start":106,"line_end":106,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232760,"byte_end":9232773,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232774,"byte_end":9232777,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232778,"byte_end":9232809,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232810,"byte_end":9232819,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232820,"byte_end":9232825,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232826,"byte_end":9232833,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232834,"byte_end":9232837,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: #method.insert","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232838,"byte_end":9232868,"line_start":114,"line_end":114,"column_start":1,"column_end":31}},{"value":"/ [`insert_at`]: #method.insert_at","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232869,"byte_end":9232905,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232906,"byte_end":9232929,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9232930,"byte_end":9233006,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233007,"byte_end":9233033,"line_start":118,"line_end":118,"column_start":1,"column_end":27}},{"value":"/ [`Stream::poll`]: #method.poll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233034,"byte_end":9233068,"line_start":119,"line_end":119,"column_start":1,"column_end":35}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233069,"byte_end":9233106,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ [`delay_for`]: fn@super::delay_for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233107,"byte_end":9233145,"line_start":121,"line_end":121,"column_start":1,"column_end":39}},{"value":"/ [`slab`]: https://docs.rs/slab","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233146,"byte_end":9233180,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`capacity`]: #method.capacity","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233181,"byte_end":9233215,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233216,"byte_end":9233248,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6394},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233978,"byte_end":9233985,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":6396},{"krate":0,"index":6397},{"krate":0,"index":6398}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233784,"byte_end":9233842,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233843,"byte_end":9233846,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233847,"byte_end":9233895,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233896,"byte_end":9233899,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: method@DelayQueue::poll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9233900,"byte_end":9233949,"line_start":151,"line_end":151,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":6402},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234453,"byte_end":9234456,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6403}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234153,"byte_end":9234199,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234200,"byte_end":9234203,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234204,"byte_end":9234285,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234286,"byte_end":9234321,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234322,"byte_end":9234325,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234326,"byte_end":9234363,"line_start":169,"line_end":169,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9234364,"byte_end":9234417,"line_start":170,"line_end":170,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5922},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235434,"byte_end":9235437,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"pub fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235134,"byte_end":9235172,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235177,"byte_end":9235180,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235185,"byte_end":9235258,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235263,"byte_end":9235266,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235271,"byte_end":9235285,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235290,"byte_end":9235293,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235298,"byte_end":9235309,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235314,"byte_end":9235348,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235353,"byte_end":9235410,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235415,"byte_end":9235422,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5923},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236355,"byte_end":9236368,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"pub fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235507,"byte_end":9235574,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235579,"byte_end":9235582,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235587,"byte_end":9235658,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235663,"byte_end":9235732,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235737,"byte_end":9235749,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235754,"byte_end":9235757,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235762,"byte_end":9235776,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235781,"byte_end":9235784,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235789,"byte_end":9235800,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235805,"byte_end":9235839,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235844,"byte_end":9235874,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235879,"byte_end":9235882,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235887,"byte_end":9235907,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235912,"byte_end":9235935,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235940,"byte_end":9236000,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236005,"byte_end":9236008,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236013,"byte_end":9236076,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236081,"byte_end":9236105,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236110,"byte_end":9236168,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236173,"byte_end":9236182,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236187,"byte_end":9236190,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236195,"byte_end":9236258,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236263,"byte_end":9236319,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236324,"byte_end":9236331,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236336,"byte_end":9236343,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5924},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238389,"byte_end":9238398,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"pub fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236667,"byte_end":9236740,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236745,"byte_end":9236754,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236759,"byte_end":9236762,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236767,"byte_end":9236841,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236846,"byte_end":9236866,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236871,"byte_end":9236874,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236879,"byte_end":9236954,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9236959,"byte_end":9237029,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237034,"byte_end":9237098,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237103,"byte_end":9237106,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237111,"byte_end":9237186,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237191,"byte_end":9237266,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237271,"byte_end":9237341,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237346,"byte_end":9237419,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237424,"byte_end":9237500,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237505,"byte_end":9237539,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237544,"byte_end":9237547,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237552,"byte_end":9237604,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237609,"byte_end":9237612,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237617,"byte_end":9237629,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237634,"byte_end":9237637,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237642,"byte_end":9237702,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237707,"byte_end":9237710,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237715,"byte_end":9237729,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237734,"byte_end":9237737,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237742,"byte_end":9237757,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237762,"byte_end":9237765,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237770,"byte_end":9237781,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237786,"byte_end":9237839,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237844,"byte_end":9237847,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237852,"byte_end":9237872,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237877,"byte_end":9237900,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237905,"byte_end":9237953,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9237958,"byte_end":9237998,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238003,"byte_end":9238063,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238068,"byte_end":9238071,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238076,"byte_end":9238103,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238108,"byte_end":9238152,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238157,"byte_end":9238200,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238205,"byte_end":9238212,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238217,"byte_end":9238224,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238229,"byte_end":9238232,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238237,"byte_end":9238263,"line_start":298,"line_end":298,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238268,"byte_end":9238298,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238303,"byte_end":9238331,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238336,"byte_end":9238359,"line_start":301,"line_end":301,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9238364,"byte_end":9238377,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5925},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9239758,"byte_end":9239770,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"pub fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9239550,"byte_end":9239625,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9239630,"byte_end":9239706,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9239711,"byte_end":9239746,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":5928},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242127,"byte_end":9242133,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"pub fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240387,"byte_end":9240464,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240469,"byte_end":9240481,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240486,"byte_end":9240489,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240494,"byte_end":9240563,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240568,"byte_end":9240596,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240601,"byte_end":9240604,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240609,"byte_end":9240684,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240689,"byte_end":9240759,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240764,"byte_end":9240828,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240833,"byte_end":9240836,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240841,"byte_end":9240916,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9240921,"byte_end":9240996,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241001,"byte_end":9241071,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241076,"byte_end":9241149,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241154,"byte_end":9241230,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241235,"byte_end":9241269,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241274,"byte_end":9241277,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241282,"byte_end":9241334,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241339,"byte_end":9241342,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241347,"byte_end":9241359,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241364,"byte_end":9241367,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241372,"byte_end":9241447,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241452,"byte_end":9241465,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241470,"byte_end":9241473,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241478,"byte_end":9241492,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241497,"byte_end":9241500,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241505,"byte_end":9241520,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241525,"byte_end":9241528,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241533,"byte_end":9241544,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241549,"byte_end":9241581,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241586,"byte_end":9241614,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241619,"byte_end":9241622,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241627,"byte_end":9241647,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241652,"byte_end":9241675,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241680,"byte_end":9241728,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241733,"byte_end":9241801,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241806,"byte_end":9241809,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241814,"byte_end":9241841,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241846,"byte_end":9241890,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241895,"byte_end":9241938,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241943,"byte_end":9241950,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241955,"byte_end":9241962,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241967,"byte_end":9241970,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9241975,"byte_end":9242001,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242006,"byte_end":9242036,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242041,"byte_end":9242069,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242074,"byte_end":9242097,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242102,"byte_end":9242115,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5933},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243678,"byte_end":9243684,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"pub fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242824,"byte_end":9242882,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242887,"byte_end":9242890,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242895,"byte_end":9242968,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9242973,"byte_end":9243046,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243051,"byte_end":9243068,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243073,"byte_end":9243076,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243081,"byte_end":9243093,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243098,"byte_end":9243101,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243106,"byte_end":9243169,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243174,"byte_end":9243177,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243182,"byte_end":9243196,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243201,"byte_end":9243204,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243209,"byte_end":9243224,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243229,"byte_end":9243232,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243237,"byte_end":9243248,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243253,"byte_end":9243285,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243290,"byte_end":9243318,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243323,"byte_end":9243326,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243331,"byte_end":9243351,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243356,"byte_end":9243379,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243384,"byte_end":9243432,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243437,"byte_end":9243505,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243510,"byte_end":9243513,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243518,"byte_end":9243545,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243550,"byte_end":9243594,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243599,"byte_end":9243642,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243647,"byte_end":9243654,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9243659,"byte_end":9243666,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245336,"byte_end":9245344,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"pub fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244222,"byte_end":9244295,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244300,"byte_end":9244303,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244308,"byte_end":9244383,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244388,"byte_end":9244405,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244410,"byte_end":9244413,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244418,"byte_end":9244493,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244498,"byte_end":9244574,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244579,"byte_end":9244594,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244599,"byte_end":9244602,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244607,"byte_end":9244619,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244624,"byte_end":9244627,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244632,"byte_end":9244706,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244711,"byte_end":9244742,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244747,"byte_end":9244750,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244755,"byte_end":9244769,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244774,"byte_end":9244777,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244782,"byte_end":9244797,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244802,"byte_end":9244805,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244810,"byte_end":9244821,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244826,"byte_end":9244879,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244884,"byte_end":9244887,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244892,"byte_end":9244912,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244917,"byte_end":9244940,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244945,"byte_end":9244993,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9244998,"byte_end":9245066,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245071,"byte_end":9245074,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245079,"byte_end":9245136,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245141,"byte_end":9245144,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245149,"byte_end":9245226,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245231,"byte_end":9245234,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245239,"byte_end":9245300,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245305,"byte_end":9245312,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9245317,"byte_end":9245324,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5938},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247237,"byte_end":9247242,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"pub fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246087,"byte_end":9246155,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246160,"byte_end":9246174,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246179,"byte_end":9246182,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246187,"byte_end":9246262,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246267,"byte_end":9246287,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246292,"byte_end":9246295,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246300,"byte_end":9246370,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246375,"byte_end":9246445,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246450,"byte_end":9246478,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246483,"byte_end":9246486,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246491,"byte_end":9246503,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246508,"byte_end":9246511,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246516,"byte_end":9246591,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246596,"byte_end":9246651,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246656,"byte_end":9246659,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246664,"byte_end":9246678,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246683,"byte_end":9246686,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246691,"byte_end":9246706,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246711,"byte_end":9246714,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246719,"byte_end":9246730,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246735,"byte_end":9246767,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246772,"byte_end":9246800,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246805,"byte_end":9246808,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246813,"byte_end":9246833,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246838,"byte_end":9246861,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246866,"byte_end":9246914,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246919,"byte_end":9246987,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9246992,"byte_end":9246995,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247000,"byte_end":9247057,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247062,"byte_end":9247065,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247070,"byte_end":9247127,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247132,"byte_end":9247135,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247140,"byte_end":9247201,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247206,"byte_end":9247213,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247218,"byte_end":9247225,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5939},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248079,"byte_end":9248084,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247351,"byte_end":9247392,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247397,"byte_end":9247400,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247405,"byte_end":9247471,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247476,"byte_end":9247479,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247484,"byte_end":9247550,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247555,"byte_end":9247558,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247563,"byte_end":9247589,"line_start":577,"line_end":577,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247594,"byte_end":9247597,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247602,"byte_end":9247616,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247621,"byte_end":9247624,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247629,"byte_end":9247640,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247645,"byte_end":9247677,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247682,"byte_end":9247710,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247715,"byte_end":9247718,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247723,"byte_end":9247743,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247748,"byte_end":9247771,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247776,"byte_end":9247824,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247829,"byte_end":9247832,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247837,"byte_end":9247895,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247900,"byte_end":9247903,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247908,"byte_end":9247949,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247954,"byte_end":9247957,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247962,"byte_end":9247990,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9247995,"byte_end":9247998,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248003,"byte_end":9248043,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248048,"byte_end":9248055,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248060,"byte_end":9248067,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5940},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248556,"byte_end":9248564,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248239,"byte_end":9248314,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248319,"byte_end":9248322,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248327,"byte_end":9248341,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248346,"byte_end":9248349,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248354,"byte_end":9248365,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248370,"byte_end":9248402,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248407,"byte_end":9248410,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248415,"byte_end":9248484,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248489,"byte_end":9248532,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248537,"byte_end":9248544,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5941},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249132,"byte_end":9249135,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248623,"byte_end":9248681,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248686,"byte_end":9248689,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248694,"byte_end":9248708,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248713,"byte_end":9248716,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248721,"byte_end":9248732,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248737,"byte_end":9248769,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248774,"byte_end":9248802,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248807,"byte_end":9248810,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248815,"byte_end":9248835,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248840,"byte_end":9248863,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248868,"byte_end":9248945,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248950,"byte_end":9248991,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9248996,"byte_end":9249050,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249055,"byte_end":9249096,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249101,"byte_end":9249108,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249113,"byte_end":9249120,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5942},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250344,"byte_end":9250351,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249189,"byte_end":9249260,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249265,"byte_end":9249288,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249293,"byte_end":9249296,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249301,"byte_end":9249376,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249381,"byte_end":9249457,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249462,"byte_end":9249538,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249543,"byte_end":9249619,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249624,"byte_end":9249647,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249652,"byte_end":9249655,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249660,"byte_end":9249732,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249737,"byte_end":9249770,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249775,"byte_end":9249778,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249783,"byte_end":9249795,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249800,"byte_end":9249803,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249808,"byte_end":9249880,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249885,"byte_end":9249907,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249912,"byte_end":9249915,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249920,"byte_end":9249934,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249939,"byte_end":9249942,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249947,"byte_end":9249954,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249959,"byte_end":9249991,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9249996,"byte_end":9250024,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250029,"byte_end":9250032,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250037,"byte_end":9250057,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250062,"byte_end":9250085,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250090,"byte_end":9250138,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250143,"byte_end":9250146,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250151,"byte_end":9250212,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250217,"byte_end":9250249,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250254,"byte_end":9250257,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250262,"byte_end":9250308,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250313,"byte_end":9250320,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250325,"byte_end":9250332,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5943},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9251067,"byte_end":9251075,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250434,"byte_end":9250488,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250493,"byte_end":9250496,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250501,"byte_end":9250575,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250580,"byte_end":9250636,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250641,"byte_end":9250644,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250649,"byte_end":9250663,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250668,"byte_end":9250671,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250676,"byte_end":9250683,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250688,"byte_end":9250720,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250725,"byte_end":9250753,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250758,"byte_end":9250761,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250766,"byte_end":9250786,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250791,"byte_end":9250814,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250819,"byte_end":9250867,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250872,"byte_end":9250912,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250917,"byte_end":9250920,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250925,"byte_end":9250985,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9250990,"byte_end":9251031,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9251036,"byte_end":9251043,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9251048,"byte_end":9251055,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5973},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255738,"byte_end":9255745,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255683,"byte_end":9255726,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5974},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255854,"byte_end":9255861,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255791,"byte_end":9255842,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5975},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255979,"byte_end":9255989,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255919,"byte_end":9255967,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5976},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9256100,"byte_end":9256108,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9256032,"byte_end":9256088,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":5988},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256686,"byte_end":9256697,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"pub fn delay_until(Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256312,"byte_end":9256350,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256351,"byte_end":9256354,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256355,"byte_end":9256430,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256431,"byte_end":9256508,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256509,"byte_end":9256544,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256545,"byte_end":9256548,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256549,"byte_end":9256567,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256568,"byte_end":9256571,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256572,"byte_end":9256648,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256649,"byte_end":9256678,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":5989},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257327,"byte_end":9257336,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"pub fn delay_for(Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256836,"byte_end":9256875,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256876,"byte_end":9256879,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256880,"byte_end":9256955,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256956,"byte_end":9256991,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256992,"byte_end":9256995,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9256996,"byte_end":9257071,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257072,"byte_end":9257149,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257150,"byte_end":9257185,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257186,"byte_end":9257189,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257190,"byte_end":9257208,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257209,"byte_end":9257212,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257213,"byte_end":9257289,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257290,"byte_end":9257319,"line_start":35,"line_end":35,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6425},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257596,"byte_end":9257601,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":6426}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257414,"byte_end":9257469,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257470,"byte_end":9257499,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257517,"byte_end":9257584,"line_start":43,"line_end":43,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":5992},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258041,"byte_end":9258049,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257971,"byte_end":9258029,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5993},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258253,"byte_end":9258263,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258118,"byte_end":9258163,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258168,"byte_end":9258171,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258176,"byte_end":9258241,"line_start":64,"line_end":64,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5994},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258652,"byte_end":9258657,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"pub fn reset(&mut Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258331,"byte_end":9258381,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258386,"byte_end":9258389,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258394,"byte_end":9258468,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258473,"byte_end":9258540,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258545,"byte_end":9258548,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258553,"byte_end":9258621,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258626,"byte_end":9258640,"line_start":75,"line_end":75,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6482},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291747,"byte_end":9291752,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290634,"byte_end":9290685,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290686,"byte_end":9290689,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290690,"byte_end":9290751,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290752,"byte_end":9290755,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290756,"byte_end":9290830,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290831,"byte_end":9290910,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290911,"byte_end":9290986,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9290987,"byte_end":9291062,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291063,"byte_end":9291091,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291092,"byte_end":9291095,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291096,"byte_end":9291173,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291174,"byte_end":9291252,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291253,"byte_end":9291329,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291330,"byte_end":9291410,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291411,"byte_end":9291488,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291489,"byte_end":9291570,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291571,"byte_end":9291653,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291654,"byte_end":9291657,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291658,"byte_end":9291718,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6183},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291903,"byte_end":9291911,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291840,"byte_end":9291891,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6184},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292043,"byte_end":9292054,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291960,"byte_end":9292031,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6185},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292242,"byte_end":9292253,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292176,"byte_end":9292230,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292390,"byte_end":9292404,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292304,"byte_end":9292378,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":6494},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293244,"byte_end":9293251,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":6495}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293048,"byte_end":9293108,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293109,"byte_end":9293171,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6197},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293498,"byte_end":9293501,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293305,"byte_end":9293351,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293356,"byte_end":9293359,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293364,"byte_end":9293378,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293383,"byte_end":9293386,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293391,"byte_end":9293398,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293403,"byte_end":9293432,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293437,"byte_end":9293440,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293445,"byte_end":9293474,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293479,"byte_end":9293486,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6198},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293627,"byte_end":9293635,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293551,"byte_end":9293615,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6199},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293771,"byte_end":9293779,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293709,"byte_end":9293759,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6200},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294023,"byte_end":9294037,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293838,"byte_end":9293910,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293915,"byte_end":9293918,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293923,"byte_end":9293935,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293940,"byte_end":9293943,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293948,"byte_end":9294011,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6201},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294728,"byte_end":9294750,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294133,"byte_end":9294208,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294213,"byte_end":9294261,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294266,"byte_end":9294269,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294274,"byte_end":9294288,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294293,"byte_end":9294296,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294301,"byte_end":9294308,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294313,"byte_end":9294365,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294370,"byte_end":9294373,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294378,"byte_end":9294396,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294401,"byte_end":9294422,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294427,"byte_end":9294460,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294465,"byte_end":9294510,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294515,"byte_end":9294552,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294557,"byte_end":9294619,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294624,"byte_end":9294694,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294699,"byte_end":9294704,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294709,"byte_end":9294716,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6202},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295473,"byte_end":9295498,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294862,"byte_end":9294937,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9294942,"byte_end":9295001,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295006,"byte_end":9295009,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295014,"byte_end":9295028,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295033,"byte_end":9295036,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295041,"byte_end":9295048,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295053,"byte_end":9295105,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295110,"byte_end":9295113,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295118,"byte_end":9295136,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295141,"byte_end":9295162,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295167,"byte_end":9295200,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295205,"byte_end":9295250,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295255,"byte_end":9295292,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295297,"byte_end":9295362,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295367,"byte_end":9295439,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295444,"byte_end":9295449,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295454,"byte_end":9295461,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6203},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296269,"byte_end":9296276,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295605,"byte_end":9295675,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295680,"byte_end":9295683,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295688,"byte_end":9295700,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295705,"byte_end":9295708,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295713,"byte_end":9295781,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295786,"byte_end":9295852,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295857,"byte_end":9295884,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295889,"byte_end":9295892,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295897,"byte_end":9295911,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295916,"byte_end":9295919,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295924,"byte_end":9295931,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295936,"byte_end":9295988,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9295993,"byte_end":9295996,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296001,"byte_end":9296019,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296024,"byte_end":9296045,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296050,"byte_end":9296087,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296092,"byte_end":9296140,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296145,"byte_end":9296181,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296186,"byte_end":9296235,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296240,"byte_end":9296245,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296250,"byte_end":9296257,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6204},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296557,"byte_end":9296568,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296340,"byte_end":9296415,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296420,"byte_end":9296491,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296496,"byte_end":9296545,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6205},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296907,"byte_end":9296918,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296690,"byte_end":9296765,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296770,"byte_end":9296841,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9296846,"byte_end":9296895,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6241},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299371,"byte_end":9299379,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298640,"byte_end":9298717,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298718,"byte_end":9298749,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298750,"byte_end":9298753,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298754,"byte_end":9298834,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298835,"byte_end":9298874,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298875,"byte_end":9298878,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298879,"byte_end":9298952,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298953,"byte_end":9298956,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298957,"byte_end":9298969,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298970,"byte_end":9298973,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9298974,"byte_end":9299019,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299020,"byte_end":9299023,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299024,"byte_end":9299038,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299039,"byte_end":9299042,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299043,"byte_end":9299050,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299051,"byte_end":9299089,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299090,"byte_end":9299093,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299094,"byte_end":9299112,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299113,"byte_end":9299134,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299135,"byte_end":9299204,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299205,"byte_end":9299208,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299209,"byte_end":9299239,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299240,"byte_end":9299270,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299271,"byte_end":9299301,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299302,"byte_end":9299305,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299306,"byte_end":9299349,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299350,"byte_end":9299355,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299356,"byte_end":9299363,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6242},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300265,"byte_end":9300276,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299529,"byte_end":9299602,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299603,"byte_end":9299637,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299638,"byte_end":9299641,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299642,"byte_end":9299722,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299723,"byte_end":9299762,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299763,"byte_end":9299766,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299767,"byte_end":9299779,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299780,"byte_end":9299783,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299784,"byte_end":9299829,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299830,"byte_end":9299833,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299834,"byte_end":9299848,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299849,"byte_end":9299852,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299853,"byte_end":9299860,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299861,"byte_end":9299915,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299916,"byte_end":9299919,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299920,"byte_end":9299938,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299939,"byte_end":9299960,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9299961,"byte_end":9300024,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300025,"byte_end":9300098,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300099,"byte_end":9300102,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300103,"byte_end":9300133,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300134,"byte_end":9300164,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300165,"byte_end":9300195,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300196,"byte_end":9300199,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300200,"byte_end":9300243,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300244,"byte_end":9300249,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300250,"byte_end":9300257,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6517},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300582,"byte_end":9300590,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":6518},{"krate":0,"index":6519}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300474,"byte_end":9300553,"line_start":78,"line_end":78,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":6244},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300835,"byte_end":9300844,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6245},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301936,"byte_end":9301940,"line_start":127,"line_end":127,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301331,"byte_end":9301400,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301405,"byte_end":9301408,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301413,"byte_end":9301427,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301432,"byte_end":9301435,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301440,"byte_end":9301447,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301452,"byte_end":9301472,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301477,"byte_end":9301480,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301485,"byte_end":9301513,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301518,"byte_end":9301521,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301526,"byte_end":9301544,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301549,"byte_end":9301570,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301575,"byte_end":9301644,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301649,"byte_end":9301652,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301657,"byte_end":9301687,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301692,"byte_end":9301722,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301727,"byte_end":9301757,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301762,"byte_end":9301765,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301770,"byte_end":9301813,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301818,"byte_end":9301823,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301828,"byte_end":9301835,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9301840,"byte_end":9301880,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6268},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303587,"byte_end":9303594,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302572,"byte_end":9302649,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302650,"byte_end":9302653,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302654,"byte_end":9302733,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302734,"byte_end":9302806,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302807,"byte_end":9302820,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302821,"byte_end":9302824,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302825,"byte_end":9302842,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302843,"byte_end":9302846,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302847,"byte_end":9302925,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302926,"byte_end":9302956,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302957,"byte_end":9302960,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9302961,"byte_end":9303041,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303042,"byte_end":9303069,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303070,"byte_end":9303073,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303074,"byte_end":9303088,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303089,"byte_end":9303092,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303093,"byte_end":9303153,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303154,"byte_end":9303157,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303158,"byte_end":9303169,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303170,"byte_end":9303199,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303200,"byte_end":9303229,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303230,"byte_end":9303233,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303234,"byte_end":9303262,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303263,"byte_end":9303266,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303267,"byte_end":9303289,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303290,"byte_end":9303328,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303329,"byte_end":9303356,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303357,"byte_end":9303360,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303361,"byte_end":9303434,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303435,"byte_end":9303501,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303502,"byte_end":9303557,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303558,"byte_end":9303563,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303564,"byte_end":9303571,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303572,"byte_end":9303579,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6270},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304816,"byte_end":9304826,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303785,"byte_end":9303857,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303858,"byte_end":9303861,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303862,"byte_end":9303939,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303940,"byte_end":9303995,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9303996,"byte_end":9303999,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304000,"byte_end":9304017,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304018,"byte_end":9304021,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304022,"byte_end":9304100,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304101,"byte_end":9304131,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304132,"byte_end":9304135,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304136,"byte_end":9304216,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304217,"byte_end":9304244,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304245,"byte_end":9304248,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304249,"byte_end":9304263,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304264,"byte_end":9304267,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304268,"byte_end":9304328,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304329,"byte_end":9304332,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304333,"byte_end":9304344,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304345,"byte_end":9304388,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304389,"byte_end":9304418,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304419,"byte_end":9304422,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304423,"byte_end":9304451,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304452,"byte_end":9304455,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304456,"byte_end":9304478,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304479,"byte_end":9304517,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304518,"byte_end":9304545,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304546,"byte_end":9304549,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304550,"byte_end":9304628,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304629,"byte_end":9304643,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304644,"byte_end":9304730,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304731,"byte_end":9304786,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304787,"byte_end":9304792,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304793,"byte_end":9304800,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304801,"byte_end":9304808,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6522},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305170,"byte_end":9305177,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":6524},{"krate":0,"index":6525}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"/ Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9304998,"byte_end":9305073,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305074,"byte_end":9305141,"line_start":103,"line_end":103,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6529},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305290,"byte_end":9305297,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305218,"byte_end":9305250,"line_start":110,"line_end":110,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6277},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305648,"byte_end":9305655,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305575,"byte_end":9305636,"line_start":127,"line_end":127,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6278},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305783,"byte_end":9305790,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305702,"byte_end":9305771,"line_start":132,"line_end":132,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6279},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305919,"byte_end":9305929,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305849,"byte_end":9305907,"line_start":137,"line_end":137,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":6551},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324285,"byte_end":9324293,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"pub fn throttle<T>(Duration, T) -> Throttle<T> where T: Stream","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323711,"byte_end":9323770,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323771,"byte_end":9323840,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323841,"byte_end":9323844,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323845,"byte_end":9323858,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323859,"byte_end":9323862,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323863,"byte_end":9323893,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323894,"byte_end":9323912,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323913,"byte_end":9323941,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323942,"byte_end":9323975,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9323976,"byte_end":9324006,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324007,"byte_end":9324010,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324011,"byte_end":9324033,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324034,"byte_end":9324125,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324126,"byte_end":9324129,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324130,"byte_end":9324140,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324141,"byte_end":9324203,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324204,"byte_end":9324255,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324256,"byte_end":9324261,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324262,"byte_end":9324269,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324270,"byte_end":9324277,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6882},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9324788,"byte_end":9324796,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":6884},{"krate":0,"index":6885},{"krate":0,"index":6886},{"krate":0,"index":6887}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.1.7/src/lib.rs","byte_start":8340905,"byte_end":8340914,"line_start":312,"line_end":312,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6555},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325263,"byte_end":9325270,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325156,"byte_end":9325229,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325234,"byte_end":9325251,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":6556},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325579,"byte_end":9325586,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325318,"byte_end":9325396,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325401,"byte_end":9325421,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325426,"byte_end":9325429,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325434,"byte_end":9325514,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325519,"byte_end":9325567,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6557},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325881,"byte_end":9325891,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325646,"byte_end":9325708,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325713,"byte_end":9325716,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325721,"byte_end":9325798,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325803,"byte_end":9325869,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":6328},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9322844,"byte_end":9322849,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9322794,"byte_end":9322834,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":6329},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9322907,"byte_end":9322915,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9322880,"byte_end":9322897,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6330},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9323004,"byte_end":9323009,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":6327},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9322922,"byte_end":9322994,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":761},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175036,"byte_end":175042,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174945,"byte_end":174974,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174979,"byte_end":174982,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174987,"byte_end":175026,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":762},"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175072,"byte_end":175078,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175049,"byte_end":175062,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29358,"byte_end":29367,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29383,"byte_end":29392,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29742,"byte_end":29747,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31503,"byte_end":31512,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31675,"byte_end":31684,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32871,"byte_end":32880,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33634,"byte_end":33640,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33854,"byte_end":33860,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":34002,"byte_end":34008,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34545,"byte_end":34550,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34577,"byte_end":34582,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/try_join.rs","byte_start":35779,"byte_end":35787,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47990,"byte_end":47993,"line_start":73,"line_end":73,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48153,"byte_end":48156,"line_start":81,"line_end":81,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48785,"byte_end":48791,"line_start":105,"line_end":105,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54745,"byte_end":54748,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54891,"byte_end":54894,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":55690,"byte_end":55696,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58122,"byte_end":58125,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58268,"byte_end":58271,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58725,"byte_end":58731,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66636,"byte_end":66639,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66787,"byte_end":66790,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67359,"byte_end":67362,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67870,"byte_end":67876,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68389,"byte_end":68395,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68911,"byte_end":68917,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":69428,"byte_end":69434,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8530712,"byte_end":8530723,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8531482,"byte_end":8531493,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8531700,"byte_end":8531711,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8534333,"byte_end":8534344,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8520081,"byte_end":8520087,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8522948,"byte_end":8522954,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8523322,"byte_end":8523328,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8523464,"byte_end":8523470,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8524613,"byte_end":8524619,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8524697,"byte_end":8524703,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8524838,"byte_end":8524843,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8526387,"byte_end":8526396,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8540968,"byte_end":8540979,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548760,"byte_end":8548771,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8549264,"byte_end":8549275,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8550356,"byte_end":8550367,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8550540,"byte_end":8550551,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552686,"byte_end":8552698,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8563636,"byte_end":8563648,"line_start":325,"line_end":325,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8563673,"byte_end":8563685,"line_start":326,"line_end":326,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8563704,"byte_end":8563716,"line_start":328,"line_end":328,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565498,"byte_end":8565506,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566423,"byte_end":8566432,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566682,"byte_end":8566690,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8567245,"byte_end":8567254,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568203,"byte_end":8568208,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568601,"byte_end":8568606,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568859,"byte_end":8568864,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568987,"byte_end":8568995,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569032,"byte_end":8569041,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569078,"byte_end":8569086,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569123,"byte_end":8569132,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569175,"byte_end":8569183,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569351,"byte_end":8569360,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8570050,"byte_end":8570054,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8582004,"byte_end":8582005,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8610555,"byte_end":8610556,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612314,"byte_end":8612315,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8636341,"byte_end":8636342,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637742,"byte_end":8637751,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639930,"byte_end":8639939,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8640915,"byte_end":8640924,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1442},{"krate":0,"index":1443}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8641755,"byte_end":8641764,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8642275,"byte_end":8642284,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643791,"byte_end":8643800,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645637,"byte_end":8645646,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1478}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645788,"byte_end":8645797,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8646509,"byte_end":8646518,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8647048,"byte_end":8647057,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8647536,"byte_end":8647545,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1493},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649499,"byte_end":8649508,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651786,"byte_end":8651795,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8652685,"byte_end":8652694,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8653176,"byte_end":8653185,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8653472,"byte_end":8653481,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654650,"byte_end":8654655,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655795,"byte_end":8655800,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8656079,"byte_end":8656084,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8656601,"byte_end":8656606,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8659636,"byte_end":8659640,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8662750,"byte_end":8662755,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8662964,"byte_end":8662969,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8663202,"byte_end":8663207,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/flush.rs","byte_start":8663972,"byte_end":8663977,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665157,"byte_end":8665162,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1639},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666414,"byte_end":8666419,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8667127,"byte_end":8667132,"line_start":112,"line_end":112,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8668530,"byte_end":8668534,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8669576,"byte_end":8669583,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8670975,"byte_end":8670984,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8677045,"byte_end":8677053,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8678276,"byte_end":8678281,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8679957,"byte_end":8679966,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8682030,"byte_end":8682042,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8684457,"byte_end":8684466,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8686290,"byte_end":8686296,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/shutdown.rs","byte_start":8687233,"byte_end":8687241,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8689074,"byte_end":8689078,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8689588,"byte_end":8689592,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1842}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690557,"byte_end":8690562,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1860}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691301,"byte_end":8691306,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691964,"byte_end":8691969,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705286,"byte_end":8705298,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705803,"byte_end":8705815,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8707354,"byte_end":8707366,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693137,"byte_end":8693141,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694769,"byte_end":8694773,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8695430,"byte_end":8695434,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8696991,"byte_end":8696996,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8697789,"byte_end":8697797,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8699297,"byte_end":8699305,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1952},{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72535,"byte_end":72545,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72585,"byte_end":72595,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72876,"byte_end":72888,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72928,"byte_end":72940,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73200,"byte_end":73212,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73252,"byte_end":73264,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711287,"byte_end":8711298,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2409},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721306,"byte_end":8721317,"line_start":375,"line_end":375,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721632,"byte_end":8721643,"line_start":387,"line_end":387,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8722083,"byte_end":8722094,"line_start":401,"line_end":401,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8722420,"byte_end":8722431,"line_start":413,"line_end":413,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8722647,"byte_end":8722658,"line_start":424,"line_end":424,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723490,"byte_end":8723498,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8724136,"byte_end":8724144,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726294,"byte_end":8726302,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2476},{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728757,"byte_end":8728765,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2482},{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8729085,"byte_end":8729094,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8729907,"byte_end":8729915,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8730009,"byte_end":8730018,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733079,"byte_end":8733091,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733294,"byte_end":8733306,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733316,"byte_end":8733329,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736163,"byte_end":8736176,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736481,"byte_end":8736495,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8737159,"byte_end":8737173,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2534}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8737332,"byte_end":8737346,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2539},{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8738167,"byte_end":8738180,"line_start":258,"line_end":258,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8738276,"byte_end":8738290,"line_start":264,"line_end":264,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740425,"byte_end":8740434,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2583},{"krate":0,"index":2588},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8764278,"byte_end":8764287,"line_start":807,"line_end":807,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8764723,"byte_end":8764732,"line_start":821,"line_end":821,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2634},{"krate":0,"index":2635}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8765085,"byte_end":8765094,"line_start":835,"line_end":835,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8765408,"byte_end":8765417,"line_start":849,"line_end":849,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8766161,"byte_end":8766170,"line_start":878,"line_end":878,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8766384,"byte_end":8766393,"line_start":889,"line_end":889,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8767399,"byte_end":8767408,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2730},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780919,"byte_end":8780928,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8781364,"byte_end":8781373,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8781693,"byte_end":8781702,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2772}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8781921,"byte_end":8781930,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783996,"byte_end":8784008,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784211,"byte_end":8784223,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784750,"byte_end":8784758,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786390,"byte_end":8786398,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787718,"byte_end":8787726,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787817,"byte_end":8787825,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788641,"byte_end":8788653,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2866},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795276,"byte_end":8795288,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795730,"byte_end":8795742,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8796071,"byte_end":8796083,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8796208,"byte_end":8796220,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796578,"byte_end":8796586,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8797318,"byte_end":8797326,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799453,"byte_end":8799465,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803969,"byte_end":8803981,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8804297,"byte_end":8804309,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8804751,"byte_end":8804763,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8805083,"byte_end":8805095,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8805220,"byte_end":8805232,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8806224,"byte_end":8806232,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2978},{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8806552,"byte_end":8806561,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8807045,"byte_end":8807053,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2985}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8807149,"byte_end":8807158,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808096,"byte_end":8808106,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3024},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811439,"byte_end":8811449,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811887,"byte_end":8811897,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8812210,"byte_end":8812220,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8812534,"byte_end":8812544,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8813031,"byte_end":8813041,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8814558,"byte_end":8814568,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8814693,"byte_end":8814703,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82089,"byte_end":82098,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82272,"byte_end":82281,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82430,"byte_end":82439,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82783,"byte_end":82792,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82817,"byte_end":82826,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82836,"byte_end":82845,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83331,"byte_end":83340,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83625,"byte_end":83634,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":83975,"byte_end":83984,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84009,"byte_end":84018,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84028,"byte_end":84037,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84216,"byte_end":84225,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84510,"byte_end":84519,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86634,"byte_end":86642,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86667,"byte_end":86675,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86685,"byte_end":86693,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86868,"byte_end":86876,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":87160,"byte_end":87168,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87508,"byte_end":87519,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87544,"byte_end":87555,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87565,"byte_end":87576,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88259,"byte_end":88270,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88560,"byte_end":88571,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88735,"byte_end":88746,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs","byte_start":88934,"byte_end":88944,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8819060,"byte_end":8819066,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8819872,"byte_end":8819878,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3159}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8820092,"byte_end":8820098,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94048,"byte_end":94058,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94323,"byte_end":94333,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94792,"byte_end":94797,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99522,"byte_end":99532,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99641,"byte_end":99653,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100040,"byte_end":100056,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100903,"byte_end":100919,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101460,"byte_end":101472,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3210}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101684,"byte_end":101689,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93150,"byte_end":93153,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93242,"byte_end":93245,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs","byte_start":123157,"byte_end":123166,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8822224,"byte_end":8822238,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8825777,"byte_end":8825782,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8826469,"byte_end":8826483,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3310}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8827370,"byte_end":8827384,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8827550,"byte_end":8827557,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3316},{"krate":0,"index":3318}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8828015,"byte_end":8828022,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8828190,"byte_end":8828193,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8829291,"byte_end":8829297,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8836980,"byte_end":8836986,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8837011,"byte_end":8837017,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8837376,"byte_end":8837380,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8838158,"byte_end":8838162,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3408}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844544,"byte_end":8844553,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847632,"byte_end":8847641,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3434}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847884,"byte_end":8847893,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8848170,"byte_end":8848179,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8848213,"byte_end":8848218,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8848896,"byte_end":8848903,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3469},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8849380,"byte_end":8849387,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3485},{"krate":0,"index":3489},{"krate":0,"index":3492},{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8851558,"byte_end":8851563,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863867,"byte_end":8863877,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863914,"byte_end":8863924,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863940,"byte_end":8863950,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8864126,"byte_end":8864136,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8864163,"byte_end":8864173,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3528},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8865315,"byte_end":8865325,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8865591,"byte_end":8865601,"line_start":145,"line_end":145,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8866848,"byte_end":8866855,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8868386,"byte_end":8868393,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8868483,"byte_end":8868490,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8871172,"byte_end":8871177,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3627},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3635},{"krate":0,"index":3637},{"krate":0,"index":3640},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8880033,"byte_end":8880041,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3644},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3660},{"krate":0,"index":3661},{"krate":0,"index":3662}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8881918,"byte_end":8881923,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8882082,"byte_end":8882090,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/waker.rs","byte_start":8883908,"byte_end":8883916,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3692},{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830310,"byte_end":8830314,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830345,"byte_end":8830349,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830486,"byte_end":8830494,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830535,"byte_end":8830543,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8832467,"byte_end":8832471,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3744},{"krate":0,"index":3745}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8833363,"byte_end":8833367,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8833536,"byte_end":8833544,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8833830,"byte_end":8833834,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3755}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8834074,"byte_end":8834078,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8834230,"byte_end":8834238,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3761}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8834454,"byte_end":8834458,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/mod.rs","byte_start":124396,"byte_end":124408,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126573,"byte_end":126580,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":134500,"byte_end":134507,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3817}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135056,"byte_end":135063,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3819}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135583,"byte_end":135590,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3821},{"krate":0,"index":3822}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139486,"byte_end":139493,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139572,"byte_end":139579,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":140374,"byte_end":140386,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":143264,"byte_end":143285,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3846}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":144115,"byte_end":144120,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3849}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146714,"byte_end":146719,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146849,"byte_end":146854,"line_start":224,"line_end":224,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147912,"byte_end":147918,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150433,"byte_end":150439,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3871},{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159799,"byte_end":159814,"line_start":347,"line_end":347,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159962,"byte_end":159977,"line_start":353,"line_end":353,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":160135,"byte_end":160150,"line_start":359,"line_end":359,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":162439,"byte_end":162444,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":163050,"byte_end":163056,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/spawner.rs","byte_start":163672,"byte_end":163679,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3900}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113303,"byte_end":113310,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":168318,"byte_end":168324,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":169865,"byte_end":169875,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":171125,"byte_end":171131,"line_start":170,"line_end":170,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3936}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8889514,"byte_end":8889517,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3965},{"krate":0,"index":3966}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8890239,"byte_end":8890247,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8890337,"byte_end":8890345,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3976},{"krate":0,"index":3978},{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8892498,"byte_end":8892505,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3986},{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8892613,"byte_end":8892620,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898692,"byte_end":8898701,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898815,"byte_end":8898824,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899212,"byte_end":8899223,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4040}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899509,"byte_end":8899519,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045},{"krate":0,"index":4046},{"krate":0,"index":4047},{"krate":0,"index":4048},{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8903315,"byte_end":8903325,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4059}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8905674,"byte_end":8905680,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8905965,"byte_end":8905971,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912185,"byte_end":8912191,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4073},{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8914049,"byte_end":8914055,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4116},{"krate":0,"index":4117}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948818,"byte_end":8948827,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4130}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948973,"byte_end":8948982,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8949021,"byte_end":8949030,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4137},{"krate":0,"index":4138}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8949981,"byte_end":8949990,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4151}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8950136,"byte_end":8950145,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8950184,"byte_end":8950193,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4158},{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8951116,"byte_end":8951121,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4173}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8951301,"byte_end":8951306,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4177},{"krate":0,"index":4178},{"krate":0,"index":4180}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952884,"byte_end":8952891,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8953175,"byte_end":8953182,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4205},{"krate":0,"index":4206}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954158,"byte_end":8954164,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954219,"byte_end":8954225,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954614,"byte_end":8954617,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954663,"byte_end":8954666,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955049,"byte_end":8955052,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955100,"byte_end":8955103,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955618,"byte_end":8955624,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955713,"byte_end":8955719,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8956797,"byte_end":8956802,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8956850,"byte_end":8956855,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957255,"byte_end":8957263,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957311,"byte_end":8957319,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4264},{"krate":0,"index":4265}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958580,"byte_end":8958585,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958616,"byte_end":8958621,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958652,"byte_end":8958657,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959200,"byte_end":8959205,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8959819,"byte_end":8959825,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8960043,"byte_end":8960049,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4313}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8960168,"byte_end":8960174,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4317},{"krate":0,"index":4318},{"krate":0,"index":4319}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961260,"byte_end":8961269,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961490,"byte_end":8961499,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961621,"byte_end":8961630,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4343}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8962702,"byte_end":8962712,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8962908,"byte_end":8962918,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4362},{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8963817,"byte_end":8963821,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4374}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8963981,"byte_end":8963985,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4379}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964919,"byte_end":8964923,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965585,"byte_end":8965589,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966294,"byte_end":8966297,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4410}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966486,"byte_end":8966489,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4414}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966610,"byte_end":8966613,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4423}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8967458,"byte_end":8967463,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4437}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8967717,"byte_end":8967722,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969234,"byte_end":8969238,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969272,"byte_end":8969276,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4461}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969417,"byte_end":8969421,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4464},{"krate":0,"index":4465}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969908,"byte_end":8969912,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970539,"byte_end":8970543,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971078,"byte_end":8971085,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971116,"byte_end":8971123,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971154,"byte_end":8971161,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971854,"byte_end":8971861,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4506},{"krate":0,"index":4507},{"krate":0,"index":4508}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977526,"byte_end":8977535,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4528},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":4535},{"krate":0,"index":4536},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4541}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984536,"byte_end":8984545,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4546}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8986084,"byte_end":8986093,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987309,"byte_end":8987313,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4565}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987523,"byte_end":8987527,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4568}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987660,"byte_end":8987664,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4571},{"krate":0,"index":4572},{"krate":0,"index":4573}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8988890,"byte_end":8988899,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4587}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8989120,"byte_end":8989129,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4591}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8989314,"byte_end":8989323,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4595},{"krate":0,"index":4596},{"krate":0,"index":4597}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990672,"byte_end":8990679,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990713,"byte_end":8990720,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4613}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990927,"byte_end":8990934,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":4618},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991544,"byte_end":8991548,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4632}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991758,"byte_end":8991762,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4635}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991895,"byte_end":8991899,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4638},{"krate":0,"index":4639},{"krate":0,"index":4641}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993418,"byte_end":8993427,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993687,"byte_end":8993696,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4658}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993889,"byte_end":8993898,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4666}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":9025123,"byte_end":9025130,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4799}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":9025485,"byte_end":9025492,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8948048,"byte_end":8948050,"line_start":819,"line_end":819,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9070950,"byte_end":9070961,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4946},{"krate":0,"index":4947},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4953},{"krate":0,"index":4954}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9076888,"byte_end":9076899,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4957}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9076985,"byte_end":9076996,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4959}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9077129,"byte_end":9077140,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9077165,"byte_end":9077176,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9077272,"byte_end":9077277,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4966},{"krate":0,"index":4967}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044169,"byte_end":9044178,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4830}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044340,"byte_end":9044349,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044418,"byte_end":9044430,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4833}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044729,"byte_end":9044741,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9046552,"byte_end":9046558,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4846},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4856}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9052497,"byte_end":9052503,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4859}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9052642,"byte_end":9052650,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4862},{"krate":0,"index":4863}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9057005,"byte_end":9057013,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4866}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9057160,"byte_end":9057168,"line_start":515,"line_end":515,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4869},{"krate":0,"index":4870}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9057631,"byte_end":9057636,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4876},{"krate":0,"index":4877},{"krate":0,"index":4879},{"krate":0,"index":4883},{"krate":0,"index":4887},{"krate":0,"index":4889},{"krate":0,"index":4891},{"krate":0,"index":4893}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9061841,"byte_end":9061846,"line_start":673,"line_end":673,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9061883,"byte_end":9061888,"line_start":674,"line_end":674,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9061913,"byte_end":9061918,"line_start":676,"line_end":676,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4901}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9062287,"byte_end":9062292,"line_start":694,"line_end":694,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4905}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9062687,"byte_end":9062692,"line_start":709,"line_end":709,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4915},{"krate":0,"index":4916},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9064405,"byte_end":9064410,"line_start":775,"line_end":775,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4926}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9082016,"byte_end":9082021,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066},{"krate":0,"index":5068},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5072},{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5076},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9092003,"byte_end":9092009,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5085}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9092491,"byte_end":9092497,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5088},{"krate":0,"index":5089}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9093135,"byte_end":9093141,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9093273,"byte_end":9093279,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5110}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9093686,"byte_end":9093694,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5116}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9095466,"byte_end":9095474,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5122},{"krate":0,"index":5123},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5130}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9097902,"byte_end":9097910,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9097970,"byte_end":9097978,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5586},{"krate":0,"index":5587}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9098166,"byte_end":9098172,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5147},{"krate":0,"index":5149}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9109562,"byte_end":9109564,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9109965,"byte_end":9109967,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9110274,"byte_end":9110283,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5195}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9110545,"byte_end":9110557,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5198}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9112252,"byte_end":9112256,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5220}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9112889,"byte_end":9112897,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9113163,"byte_end":9113167,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9113216,"byte_end":9113220,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9113699,"byte_end":9113701,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9114399,"byte_end":9114401,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5246}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9114549,"byte_end":9114551,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5249}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9114729,"byte_end":9114731,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5253}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9115131,"byte_end":9115133,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5257}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9115542,"byte_end":9115544,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5264},{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9118515,"byte_end":9118517,"line_start":341,"line_end":341,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5274}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9118953,"byte_end":9118957,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9119421,"byte_end":9119425,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9119974,"byte_end":9119986,"line_start":401,"line_end":401,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5289}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9121476,"byte_end":9121487,"line_start":468,"line_end":468,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9124204,"byte_end":9124206,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5346},{"krate":0,"index":5347},{"krate":0,"index":5348},{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9129910,"byte_end":9129912,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5353}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9130189,"byte_end":9130191,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9133590,"byte_end":9133592,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5362}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9134266,"byte_end":9134281,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5378}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9134422,"byte_end":9134437,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5381}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9134895,"byte_end":9134912,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5387}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9135890,"byte_end":9135907,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5400},{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9138379,"byte_end":9138396,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9138562,"byte_end":9138577,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5408},{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9139429,"byte_end":9139438,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5419}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9139598,"byte_end":9139607,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140093,"byte_end":9140105,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140138,"byte_end":9140150,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140490,"byte_end":9140502,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140731,"byte_end":9140740,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5431}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140870,"byte_end":9140879,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141365,"byte_end":9141377,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5434}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141683,"byte_end":9141695,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141852,"byte_end":9141863,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5437}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141962,"byte_end":9141973,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9142103,"byte_end":9142114,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9142618,"byte_end":9142634,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9142671,"byte_end":9142687,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5643}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9147504,"byte_end":9147513,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5485},{"krate":0,"index":5488},{"krate":0,"index":5490},{"krate":0,"index":5494},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5497},{"krate":0,"index":5502},{"krate":0,"index":5503},{"krate":0,"index":5504},{"krate":0,"index":5505}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9163585,"byte_end":9163594,"line_start":577,"line_end":577,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5507}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9163673,"byte_end":9163682,"line_start":583,"line_end":583,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5509}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9164060,"byte_end":9164069,"line_start":594,"line_end":594,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9164094,"byte_end":9164103,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9164141,"byte_end":9164147,"line_start":599,"line_end":599,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5514},{"krate":0,"index":5516},{"krate":0,"index":5517},{"krate":0,"index":5521},{"krate":0,"index":5523},{"krate":0,"index":5524}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9170553,"byte_end":9170559,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5527}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9170632,"byte_end":9170638,"line_start":798,"line_end":798,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5529}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171060,"byte_end":9171072,"line_start":814,"line_end":814,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5531}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171252,"byte_end":9171264,"line_start":824,"line_end":824,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5534}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171408,"byte_end":9171420,"line_start":830,"line_end":830,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171467,"byte_end":9171482,"line_start":834,"line_end":834,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5537},{"krate":0,"index":5538}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9172012,"byte_end":9172027,"line_start":853,"line_end":853,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9172325,"byte_end":9172340,"line_start":862,"line_end":862,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9172378,"byte_end":9172384,"line_start":866,"line_end":866,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5548},{"krate":0,"index":5549},{"krate":0,"index":5550},{"krate":0,"index":5551}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9177797,"byte_end":9177805,"line_start":1033,"line_end":1033,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5559},{"krate":0,"index":5560},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":5565},{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9181468,"byte_end":9181476,"line_start":1171,"line_end":1171,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9181829,"byte_end":9181840,"line_start":1187,"line_end":1187,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5572},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577},{"krate":0,"index":5578},{"krate":0,"index":5579}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9195555,"byte_end":9195563,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5729},{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9202660,"byte_end":9202668,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5764},{"krate":0,"index":5765},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5773},{"krate":0,"index":5775},{"krate":0,"index":5778}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9210446,"byte_end":9210454,"line_start":444,"line_end":444,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5782}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9210593,"byte_end":9210601,"line_start":450,"line_end":450,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5784},{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9211566,"byte_end":9211574,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5788}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9211655,"byte_end":9211663,"line_start":480,"line_end":480,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5790}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9212530,"byte_end":9212538,"line_start":510,"line_end":510,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5794},{"krate":0,"index":5795}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9213423,"byte_end":9213429,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5799},{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9213992,"byte_end":9213995,"line_start":560,"line_end":560,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5803},{"krate":0,"index":5805},{"krate":0,"index":5808}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217439,"byte_end":9217447,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5831},{"krate":0,"index":5835},{"krate":0,"index":5838}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219223,"byte_end":9219231,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5844}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219439,"byte_end":9219447,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5848}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219768,"byte_end":9219783,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5852},{"krate":0,"index":5853}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220084,"byte_end":9220089,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5862}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220707,"byte_end":9220708,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220893,"byte_end":9220904,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5869}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9221048,"byte_end":9221059,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5871}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9221206,"byte_end":9221217,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/clock.rs","byte_start":9224736,"byte_end":9224741,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6374},{"krate":0,"index":6375},{"krate":0,"index":6376},{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235114,"byte_end":9235124,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5933},{"krate":0,"index":5935},{"krate":0,"index":5936},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944},{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9252732,"byte_end":9252742,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9252770,"byte_end":9252780,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5951}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9252917,"byte_end":9252927,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5954},{"krate":0,"index":5955}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9253309,"byte_end":9253314,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255441,"byte_end":9255446,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5968}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255576,"byte_end":9255579,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":5970}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255666,"byte_end":9255673,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5975},{"krate":0,"index":5976}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257775,"byte_end":9257780,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258758,"byte_end":9258763,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5996},{"krate":0,"index":5997}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9271813,"byte_end":9271824,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6012},{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6015}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9273802,"byte_end":9273820,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9274392,"byte_end":9274410,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6020}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9278362,"byte_end":9278367,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6058},{"krate":0,"index":6059}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9284595,"byte_end":9284600,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9284808,"byte_end":9284813,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9284838,"byte_end":9284843,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9285220,"byte_end":9285226,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6074},{"krate":0,"index":6075},{"krate":0,"index":6076}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9285871,"byte_end":9285877,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6078}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9286322,"byte_end":9286334,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6095},{"krate":0,"index":6096},{"krate":0,"index":6097}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9287159,"byte_end":9287171,"line_start":49,"line_end":49,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6099}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9287455,"byte_end":9287460,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6107}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9287551,"byte_end":9287556,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6109},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6112},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9263381,"byte_end":9263387,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6150},{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9267034,"byte_end":9267040,"line_start":229,"line_end":229,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6160},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6163},{"krate":0,"index":6164}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9269029,"byte_end":9269035,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6167}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9269512,"byte_end":9269517,"line_start":322,"line_end":322,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9271134,"byte_end":9271139,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6177}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291828,"byte_end":9291833,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6186}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292548,"byte_end":9292553,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292580,"byte_end":9292585,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6189}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293291,"byte_end":9293298,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297072,"byte_end":9297079,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6207}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297208,"byte_end":9297215,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6209}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297330,"byte_end":9297337,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6211},{"krate":0,"index":6212}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297502,"byte_end":9297509,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6214}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297614,"byte_end":9297621,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6216},{"krate":0,"index":6217}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297762,"byte_end":9297769,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6219},{"krate":0,"index":6220}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297930,"byte_end":9297937,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6222}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9298044,"byte_end":9298051,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6224}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300776,"byte_end":9300784,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6244},{"krate":0,"index":6245}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9302079,"byte_end":9302087,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6250},{"krate":0,"index":6251}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305309,"byte_end":9305316,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6273}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305445,"byte_end":9305452,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6276},{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305990,"byte_end":9305997,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6282},{"krate":0,"index":6283}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9306798,"byte_end":9306805,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9306949,"byte_end":9306956,"line_start":179,"line_end":179,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9306993,"byte_end":9306998,"line_start":181,"line_end":181,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6290}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325138,"byte_end":9325146,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6557}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325961,"byte_end":9325969,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6560},{"krate":0,"index":6561}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9316902,"byte_end":9316907,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6309},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9321659,"byte_end":9321664,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6318}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9308723,"byte_end":9308728,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6343},{"krate":0,"index":6344},{"krate":0,"index":6345},{"krate":0,"index":6346},{"krate":0,"index":6347},{"krate":0,"index":6349},{"krate":0,"index":6351},{"krate":0,"index":6352},{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6355},{"krate":0,"index":6356}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9314436,"byte_end":9314440,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9326802,"byte_end":9326806,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6598},{"krate":0,"index":6599},{"krate":0,"index":6600},{"krate":0,"index":6601},{"krate":0,"index":6602}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9328280,"byte_end":9328284,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6604}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/addr.rs","byte_start":9335503,"byte_end":9335510,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6627},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/generation.rs","byte_start":9338539,"byte_end":9338549,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6646}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9339688,"byte_end":9339693,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6667},{"krate":0,"index":6668},{"krate":0,"index":6670}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9340035,"byte_end":9340041,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6674},{"krate":0,"index":6675},{"krate":0,"index":6677},{"krate":0,"index":6680},{"krate":0,"index":6683},{"krate":0,"index":6686}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9343993,"byte_end":9343998,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6691}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9344304,"byte_end":9344310,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6695}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9346453,"byte_end":9346458,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6709},{"krate":0,"index":6712},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6716}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9348137,"byte_end":9348142,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6719}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/slot.rs","byte_start":9348519,"byte_end":9348523,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6738}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9349494,"byte_end":9349507,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6752}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9350335,"byte_end":9350348,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6755}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9329882,"byte_end":9329886,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9329923,"byte_end":9329927,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9329950,"byte_end":9329954,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9331469,"byte_end":9331473,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6778}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174394,"byte_end":174404,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174463,"byte_end":174473,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175762,"byte_end":175770,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175807,"byte_end":175815,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175869,"byte_end":175879,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":178883,"byte_end":178893,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180231,"byte_end":180239,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180438,"byte_end":180446,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/rand.rs","byte_start":190518,"byte_end":190526,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192388,"byte_end":192396,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":194854,"byte_end":194862,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195112,"byte_end":195120,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195225,"byte_end":195233,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195542,"byte_end":195552,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14118,"byte_end":14124,"line_start":346,"line_end":346,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/mod.rs","byte_start":16235,"byte_end":16242,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14179,"byte_end":14185,"line_start":353,"line_end":353,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14196,"byte_end":14198,"line_start":355,"line_end":355,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14208,"byte_end":14211,"line_start":356,"line_end":356,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":306}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":70934,"byte_end":70937,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2391}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71041,"byte_end":71044,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2694}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/mod.rs","byte_start":71108,"byte_end":71112,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2839}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14243,"byte_end":14250,"line_start":361,"line_end":361,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":549}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14300,"byte_end":14307,"line_start":367,"line_end":367,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":555}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14358,"byte_end":14364,"line_start":372,"line_end":372,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3937}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/mod.rs","byte_start":8886684,"byte_end":8886688,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3998}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14395,"byte_end":14401,"line_start":376,"line_end":376,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":4118}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14498,"byte_end":14502,"line_start":387,"line_end":387,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5704}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/lib.rs","byte_start":14556,"byte_end":14560,"line_start":392,"line_end":392,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5898}},{"kind":"Mod","span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/mod.rs","byte_start":9223025,"byte_end":9223036,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":5901}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29358,"byte_end":29367,"line_start":32,"line_end":32,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":55},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29383,"byte_end":29392,"line_start":34,"line_end":34,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":55},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/macros/scoped_tls.rs","byte_start":29742,"byte_end":29747,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31503,"byte_end":31512,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":31675,"byte_end":31684,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/maybe_done.rs","byte_start":32871,"byte_end":32880,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":865},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33634,"byte_end":33640,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":33854,"byte_end":33860,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/poll_fn.rs","byte_start":34002,"byte_end":34008,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34545,"byte_end":34550,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/ready.rs","byte_start":34577,"byte_end":34582,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/future/try_join.rs","byte_start":35779,"byte_end":35787,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":885},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":45531,"byte_end":45540,"line_start":19,"line_end":19,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":47990,"byte_end":47993,"line_start":73,"line_end":73,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48153,"byte_end":48156,"line_start":81,"line_end":81,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_buf_read.rs","byte_start":48785,"byte_end":48791,"line_start":105,"line_end":105,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54745,"byte_end":54748,"line_start":153,"line_end":153,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":54891,"byte_end":54894,"line_start":161,"line_end":161,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_read.rs","byte_start":55690,"byte_end":55696,"line_start":193,"line_end":193,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58122,"byte_end":58125,"line_start":64,"line_end":64,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58268,"byte_end":58271,"line_start":72,"line_end":72,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_seek.rs","byte_start":58725,"byte_end":58731,"line_start":90,"line_end":90,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":244}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66636,"byte_end":66639,"line_start":174,"line_end":174,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":66787,"byte_end":66790,"line_start":182,"line_end":182,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":31876},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67359,"byte_end":67362,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":67870,"byte_end":67876,"line_start":223,"line_end":223,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68389,"byte_end":68395,"line_start":241,"line_end":241,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":68911,"byte_end":68917,"line_start":259,"line_end":259,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/async_write.rs","byte_start":69428,"byte_end":69434,"line_start":277,"line_end":277,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":7018},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8530712,"byte_end":8530723,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":6634}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8531482,"byte_end":8531493,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8531700,"byte_end":8531711,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/scheduled_io.rs","byte_start":8534333,"byte_end":8534344,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8520081,"byte_end":8520087,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8522948,"byte_end":8522954,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1012},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8523322,"byte_end":8523328,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8523464,"byte_end":8523470,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8524613,"byte_end":8524619,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1148},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8524697,"byte_end":8524703,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1148},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8524838,"byte_end":8524843,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/driver/mod.rs","byte_start":8526387,"byte_end":8526396,"line_start":293,"line_end":293,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8540968,"byte_end":8540979,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8548760,"byte_end":8548771,"line_start":380,"line_end":380,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1168},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8549264,"byte_end":8549275,"line_start":402,"line_end":402,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1168},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8550356,"byte_end":8550367,"line_start":448,"line_end":448,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/poll_evented.rs","byte_start":8550540,"byte_end":8550551,"line_start":454,"line_end":454,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8552686,"byte_end":8552698,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8563636,"byte_end":8563648,"line_start":325,"line_end":325,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8563673,"byte_end":8563685,"line_start":326,"line_end":326,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/registration.rs","byte_start":8563704,"byte_end":8563716,"line_start":328,"line_end":328,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1172},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8565498,"byte_end":8565506,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566423,"byte_end":8566432,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8566682,"byte_end":8566690,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1291},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8567245,"byte_end":8567254,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568203,"byte_end":8568208,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568601,"byte_end":8568606,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568859,"byte_end":8568864,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1200},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8568987,"byte_end":8568995,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569032,"byte_end":8569041,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569078,"byte_end":8569086,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569123,"byte_end":8569132,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569175,"byte_end":8569183,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/split.rs","byte_start":8569351,"byte_end":8569360,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/seek.rs","byte_start":8570050,"byte_end":8570054,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1299},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8572971,"byte_end":8572983,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":184},"to":{"krate":0,"index":1968}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_buf_read_ext.rs","byte_start":8582004,"byte_end":8582005,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1323},"to":{"krate":0,"index":1968}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8583928,"byte_end":8583937,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":213},"to":{"krate":0,"index":1976}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_read_ext.rs","byte_start":8610555,"byte_end":8610556,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1362},"to":{"krate":0,"index":1976}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8611435,"byte_end":8611444,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":244},"to":{"krate":0,"index":1370}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_seek_ext.rs","byte_start":8612314,"byte_end":8612315,"line_start":67,"line_end":67,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1373},"to":{"krate":0,"index":1370}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8614252,"byte_end":8614262,"line_start":62,"line_end":62,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":269},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/async_write_ext.rs","byte_start":8636341,"byte_end":8636342,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1406},"to":{"krate":0,"index":2012}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8637742,"byte_end":8637751,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":8777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8639930,"byte_end":8639939,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":8777},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8640915,"byte_end":8640924,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":8777},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8641755,"byte_end":8641764,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":8777},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_reader.rs","byte_start":8642275,"byte_end":8642284,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":8777},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8643791,"byte_end":8643800,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":8763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645637,"byte_end":8645646,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8763},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8645788,"byte_end":8645797,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8763},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8646509,"byte_end":8646518,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8763},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8647048,"byte_end":8647057,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8763},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_stream.rs","byte_start":8647536,"byte_end":8647545,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8763},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8649499,"byte_end":8649508,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8651786,"byte_end":8651795,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":8700},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8652685,"byte_end":8652694,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":8700},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8653176,"byte_end":8653185,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":8700},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/buf_writer.rs","byte_start":8653472,"byte_end":8653481,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":8700},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8654650,"byte_end":8654655,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":8651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8655795,"byte_end":8655800,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":8651},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8656079,"byte_end":8656084,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":8651},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/chain.rs","byte_start":8656601,"byte_end":8656606,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":8651},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/copy.rs","byte_start":8659636,"byte_end":8659640,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2047},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8662750,"byte_end":8662755,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2063},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8662964,"byte_end":8662969,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2063},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/empty.rs","byte_start":8663202,"byte_end":8663207,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2063},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/flush.rs","byte_start":8663972,"byte_end":8663977,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2066},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8665157,"byte_end":8665162,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":8628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8666414,"byte_end":8666419,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":8628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/lines.rs","byte_start":8667127,"byte_end":8667132,"line_start":112,"line_end":112,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":8628},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read.rs","byte_start":8668530,"byte_end":8668534,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2074},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_buf.rs","byte_start":8669576,"byte_end":8669583,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2083},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_exact.rs","byte_start":8670975,"byte_end":8670984,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_line.rs","byte_start":8677045,"byte_end":8677053,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2184},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8678276,"byte_end":8678281,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1753},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_end.rs","byte_start":8679957,"byte_end":8679966,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2195},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_to_string.rs","byte_start":8682030,"byte_end":8682042,"line_start":58,"line_end":58,"column_start":20,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2205},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/read_until.rs","byte_start":8684457,"byte_end":8684466,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/repeat.rs","byte_start":8686290,"byte_end":8686296,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2228},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/shutdown.rs","byte_start":8687233,"byte_end":8687241,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2232},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8689074,"byte_end":8689078,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2240},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/sink.rs","byte_start":8689588,"byte_end":8689592,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2240},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8690557,"byte_end":8690562,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":8154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691301,"byte_end":8691306,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":8154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/split.rs","byte_start":8691964,"byte_end":8691969,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8154},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705286,"byte_end":8705298,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":8108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8705803,"byte_end":8705815,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":8108},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/stream_reader.rs","byte_start":8707354,"byte_end":8707366,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":8108},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8693137,"byte_end":8693141,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8694769,"byte_end":8694773,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8063},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/take.rs","byte_start":8695430,"byte_end":8695434,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8063},"to":{"krate":0,"index":184}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write.rs","byte_start":8696991,"byte_end":8696996,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2281},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_all.rs","byte_start":8697789,"byte_end":8697797,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2290},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/io/util/write_buf.rs","byte_start":8699297,"byte_end":8699305,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2299},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72068,"byte_end":72085,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":361},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72535,"byte_end":72545,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":7172},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72585,"byte_end":72595,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":7172},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72876,"byte_end":72888,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":7200},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":72928,"byte_end":72940,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":7200},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73200,"byte_end":73212,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":7203},"to":{"krate":0,"index":317}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/addr.rs","byte_start":73252,"byte_end":73264,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":7203},"to":{"krate":0,"index":361}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8711287,"byte_end":8711298,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721306,"byte_end":8721317,"line_start":375,"line_end":375,"column_start":32,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2655},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8721632,"byte_end":8721643,"line_start":387,"line_end":387,"column_start":41,"column_end":52},"kind":{"Impl":{"id":127}},"from":{"krate":21,"index":1033},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8722083,"byte_end":8722094,"line_start":401,"line_end":401,"column_start":36,"column_end":47},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2655},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8722420,"byte_end":8722431,"line_start":413,"line_end":413,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2655},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/listener.rs","byte_start":8722647,"byte_end":8722658,"line_start":424,"line_end":424,"column_start":22,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2655},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8723490,"byte_end":8723498,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/incoming.rs","byte_start":8724136,"byte_end":8724144,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2657},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8726294,"byte_end":8726302,"line_start":55,"line_end":55,"column_start":6,"column_end":14},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8728757,"byte_end":8728765,"line_start":133,"line_end":133,"column_start":20,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2663},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8729085,"byte_end":8729094,"line_start":147,"line_end":147,"column_start":21,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2670},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8729907,"byte_end":8729915,"line_start":176,"line_end":176,"column_start":27,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split.rs","byte_start":8730009,"byte_end":8730018,"line_start":182,"line_end":182,"column_start":27,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2670},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733079,"byte_end":8733091,"line_start":91,"line_end":91,"column_start":23,"column_end":35},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2686},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733294,"byte_end":8733306,"line_start":100,"line_end":100,"column_start":16,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2686},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8733316,"byte_end":8733329,"line_start":102,"line_end":102,"column_start":6,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736163,"byte_end":8736176,"line_start":189,"line_end":189,"column_start":20,"column_end":33},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2677},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8736481,"byte_end":8736495,"line_start":203,"line_end":203,"column_start":6,"column_end":20},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8737159,"byte_end":8737173,"line_start":221,"line_end":221,"column_start":15,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2681},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8737332,"byte_end":8737346,"line_start":229,"line_end":229,"column_start":21,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2681},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8738167,"byte_end":8738180,"line_start":258,"line_end":258,"column_start":27,"column_end":40},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2677},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/split_owned.rs","byte_start":8738276,"byte_end":8738290,"line_start":264,"line_end":264,"column_start":27,"column_end":41},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2681},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8740425,"byte_end":8740434,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8764278,"byte_end":8764287,"line_start":807,"line_end":807,"column_start":39,"column_end":48},"kind":{"Impl":{"id":148}},"from":{"krate":21,"index":977},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8764723,"byte_end":8764732,"line_start":821,"line_end":821,"column_start":34,"column_end":43},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2692},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8765085,"byte_end":8765094,"line_start":835,"line_end":835,"column_start":20,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8765408,"byte_end":8765417,"line_start":849,"line_end":849,"column_start":21,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2692},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8766161,"byte_end":8766170,"line_start":878,"line_end":878,"column_start":21,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2692},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/tcp/stream.rs","byte_start":8766384,"byte_end":8766393,"line_start":889,"line_end":889,"column_start":22,"column_end":31},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2692},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8767399,"byte_end":8767408,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8780919,"byte_end":8780928,"line_start":369,"line_end":369,"column_start":39,"column_end":48},"kind":{"Impl":{"id":155}},"from":{"krate":21,"index":1091},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8781364,"byte_end":8781373,"line_start":383,"line_end":383,"column_start":34,"column_end":43},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2821},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8781693,"byte_end":8781702,"line_start":395,"line_end":395,"column_start":21,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2821},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/socket.rs","byte_start":8781921,"byte_end":8781930,"line_start":406,"line_end":406,"column_start":22,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2821},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8783996,"byte_end":8784008,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2833},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784211,"byte_end":8784223,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2833},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8784750,"byte_end":8784758,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8786390,"byte_end":8786398,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787718,"byte_end":8787726,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2823},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/udp/split.rs","byte_start":8787817,"byte_end":8787825,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2828},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8788641,"byte_end":8788653,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795276,"byte_end":8795288,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":166}},"from":{"krate":29,"index":182},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8795730,"byte_end":8795742,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8796071,"byte_end":8796083,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/datagram.rs","byte_start":8796208,"byte_end":8796220,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3082},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8796578,"byte_end":8796586,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/incoming.rs","byte_start":8797318,"byte_end":8797326,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3084},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8799453,"byte_end":8799465,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8803969,"byte_end":8803981,"line_start":180,"line_end":180,"column_start":32,"column_end":44},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3090},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8804297,"byte_end":8804309,"line_start":192,"line_end":192,"column_start":41,"column_end":53},"kind":{"Impl":{"id":174}},"from":{"krate":29,"index":186},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8804751,"byte_end":8804763,"line_start":206,"line_end":206,"column_start":37,"column_end":49},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8805083,"byte_end":8805095,"line_start":218,"line_end":218,"column_start":21,"column_end":33},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3090},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/listener.rs","byte_start":8805220,"byte_end":8805232,"line_start":224,"line_end":224,"column_start":18,"column_end":30},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3090},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8806224,"byte_end":8806232,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3092},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8806552,"byte_end":8806561,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3099},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8807045,"byte_end":8807053,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3092},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/split.rs","byte_start":8807149,"byte_end":8807158,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3099},"to":{"krate":2,"index":1943}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8808096,"byte_end":8808106,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811439,"byte_end":8811449,"line_start":119,"line_end":119,"column_start":39,"column_end":49},"kind":{"Impl":{"id":183}},"from":{"krate":29,"index":190},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8811887,"byte_end":8811897,"line_start":133,"line_end":133,"column_start":35,"column_end":45},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3106},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8812210,"byte_end":8812220,"line_start":145,"line_end":145,"column_start":20,"column_end":30},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3106},"to":{"krate":0,"index":213}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8812534,"byte_end":8812544,"line_start":159,"line_end":159,"column_start":21,"column_end":31},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3106},"to":{"krate":0,"index":269}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8813031,"byte_end":8813041,"line_start":178,"line_end":178,"column_start":6,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8814558,"byte_end":8814568,"line_start":223,"line_end":223,"column_start":21,"column_end":31},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3106},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/net/unix/stream.rs","byte_start":8814693,"byte_end":8814703,"line_start":229,"line_end":229,"column_start":18,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3106},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82089,"byte_end":82098,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82272,"byte_end":82281,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_ptr.rs","byte_start":82430,"byte_end":82439,"line_start":24,"line_end":24,"column_start":24,"column_end":33},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":371},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82783,"byte_end":82792,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82817,"byte_end":82826,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":82836,"byte_end":82845,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83331,"byte_end":83340,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u16.rs","byte_start":83625,"byte_end":83634,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":388},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":83975,"byte_end":83984,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84009,"byte_end":84018,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84028,"byte_end":84037,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84216,"byte_end":84225,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u32.rs","byte_start":84510,"byte_end":84519,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86634,"byte_end":86642,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86667,"byte_end":86675,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86685,"byte_end":86693,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":86868,"byte_end":86876,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_u8.rs","byte_start":87160,"byte_end":87168,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87508,"byte_end":87519,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87544,"byte_end":87555,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":87565,"byte_end":87576,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88259,"byte_end":88270,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88560,"byte_end":88571,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/atomic_usize.rs","byte_start":88735,"byte_end":88746,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":438},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/loom/std/unsafe_cell.rs","byte_start":88934,"byte_end":88944,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8819060,"byte_end":8819066,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8819872,"byte_end":8819878,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3139},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/either.rs","byte_start":8820092,"byte_end":8820098,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3139},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94048,"byte_end":94058,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94323,"byte_end":94333,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3165},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":94792,"byte_end":94797,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99522,"byte_end":99532,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3165},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":99641,"byte_end":99653,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3169},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100040,"byte_end":100056,"line_start":220,"line_end":220,"column_start":10,"column_end":26},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":100903,"byte_end":100919,"line_start":245,"line_end":245,"column_start":19,"column_end":35},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3219},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101460,"byte_end":101472,"line_start":265,"line_end":265,"column_start":10,"column_end":22},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/thread.rs","byte_start":101684,"byte_end":101689,"line_start":274,"line_end":274,"column_start":10,"column_end":15},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":92670,"byte_end":92674,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":92677,"byte_end":92681,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93150,"byte_end":93153,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":227}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/park/mod.rs","byte_start":93242,"byte_end":93245,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":228}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/context.rs","byte_start":123157,"byte_end":123166,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":564},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8822224,"byte_end":8822238,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8825777,"byte_end":8825782,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3299},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8826469,"byte_end":8826483,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8827370,"byte_end":8827384,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3264},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8827550,"byte_end":8827557,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8828015,"byte_end":8828022,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3770},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8828190,"byte_end":8828193,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":236}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":3734}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/basic_scheduler.rs","byte_start":8829291,"byte_end":8829297,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3273},"to":{"krate":0,"index":807}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8836980,"byte_end":8836986,"line_start":69,"line_end":69,"column_start":22,"column_end":28},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3364},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8837011,"byte_end":8837017,"line_start":70,"line_end":70,"column_start":22,"column_end":28},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3364},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8837376,"byte_end":8837380,"line_start":85,"line_end":85,"column_start":30,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/core.rs","byte_start":8838158,"byte_end":8838162,"line_start":108,"line_end":108,"column_start":30,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8844544,"byte_end":8844553,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847632,"byte_end":8847641,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8847884,"byte_end":8847893,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8848170,"byte_end":8848179,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3779},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/error.rs","byte_start":8848213,"byte_end":8848218,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":246}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8848896,"byte_end":8848903,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8849380,"byte_end":8849387,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/harness.rs","byte_start":8851558,"byte_end":8851563,"line_start":94,"line_end":94,"column_start":51,"column_end":56},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3476},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863867,"byte_end":8863877,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863914,"byte_end":8863924,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8863940,"byte_end":8863950,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3781},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8864126,"byte_end":8864136,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8864163,"byte_end":8864173,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8865315,"byte_end":8865325,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/join.rs","byte_start":8865591,"byte_end":8865601,"line_start":145,"line_end":145,"column_start":24,"column_end":34},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3781},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8866848,"byte_end":8866855,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8868386,"byte_end":8868393,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/raw.rs","byte_start":8868483,"byte_end":8868490,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8871172,"byte_end":8871177,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8880033,"byte_end":8880041,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8881918,"byte_end":8881923,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3598},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/state.rs","byte_start":8882082,"byte_end":8882090,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3785},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/waker.rs","byte_start":8883908,"byte_end":8883916,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3682},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830310,"byte_end":8830314,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3716},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830345,"byte_end":8830349,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3716},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830486,"byte_end":8830494,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3724},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830535,"byte_end":8830543,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3724},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830668,"byte_end":8830672,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":3734}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8830675,"byte_end":8830680,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":3734}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8832467,"byte_end":8832471,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8833363,"byte_end":8833367,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8833536,"byte_end":8833544,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8833830,"byte_end":8833834,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3716},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8834074,"byte_end":8834078,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3716},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8834230,"byte_end":8834238,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3724},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/task/mod.rs","byte_start":8834454,"byte_end":8834458,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3716},"to":{"krate":0,"index":760}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/blocking/mod.rs","byte_start":124396,"byte_end":124408,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":126573,"byte_end":126580,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":134500,"byte_end":134507,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135056,"byte_end":135063,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":135583,"byte_end":135590,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139486,"byte_end":139493,"line_start":504,"line_end":504,"column_start":18,"column_end":25},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/builder.rs","byte_start":139572,"byte_end":139579,"line_start":510,"line_end":510,"column_start":21,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":140374,"byte_end":140386,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":143264,"byte_end":143285,"line_start":112,"line_end":112,"column_start":23,"column_end":44},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":144115,"byte_end":144120,"line_start":142,"line_end":142,"column_start":10,"column_end":15},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146714,"byte_end":146719,"line_start":218,"line_end":218,"column_start":21,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/enter.rs","byte_start":146849,"byte_end":146854,"line_start":224,"line_end":224,"column_start":15,"column_end":20},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":626},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":147912,"byte_end":147918,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":150433,"byte_end":150439,"line_start":120,"line_end":120,"column_start":10,"column_end":16},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159799,"byte_end":159814,"line_start":347,"line_end":347,"column_start":21,"column_end":36},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":159962,"byte_end":159977,"line_start":353,"line_end":353,"column_start":23,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":653},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/handle.rs","byte_start":160135,"byte_end":160150,"line_start":359,"line_end":359,"column_start":23,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":653},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":162439,"byte_end":162444,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/shell.rs","byte_start":163050,"byte_end":163056,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3881},"to":{"krate":0,"index":807}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/spawner.rs","byte_start":163672,"byte_end":163679,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/runtime/mod.rs","byte_start":113303,"byte_end":113310,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":168318,"byte_end":168324,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":169865,"byte_end":169875,"line_start":114,"line_end":114,"column_start":23,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/coop.rs","byte_start":171125,"byte_end":171131,"line_start":170,"line_end":170,"column_start":10,"column_end":16},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8889514,"byte_end":8889517,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":300}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":3959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8890239,"byte_end":8890247,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8890337,"byte_end":8890345,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8892498,"byte_end":8892505,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3982},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/registry.rs","byte_start":8892613,"byte_end":8892620,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898692,"byte_end":8898701,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4027},"to":{"krate":0,"index":3969}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8898815,"byte_end":8898824,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4027},"to":{"krate":0,"index":3959}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899212,"byte_end":8899223,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4093},"to":{"krate":0,"index":3969}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8899509,"byte_end":8899519,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8903315,"byte_end":8903325,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4054},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8905674,"byte_end":8905680,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8905965,"byte_end":8905971,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8912185,"byte_end":8912191,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/signal/unix.rs","byte_start":8914049,"byte_end":8914055,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4110},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948818,"byte_end":8948827,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8948973,"byte_end":8948982,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/all.rs","byte_start":8949021,"byte_end":8949030,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8949981,"byte_end":8949990,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8950136,"byte_end":8950145,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4717},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/any.rs","byte_start":8950184,"byte_end":8950193,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4717},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8951116,"byte_end":8951121,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":7550},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/chain.rs","byte_start":8951301,"byte_end":8951306,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":7550},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952851,"byte_end":8952865,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4267},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8952884,"byte_end":8952891,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":7529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8953175,"byte_end":8953182,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":7529},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954158,"byte_end":8954164,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":324}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954219,"byte_end":8954225,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":325}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":4267}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954614,"byte_end":8954617,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":326}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8954663,"byte_end":8954666,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":327}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":4267}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955049,"byte_end":8955052,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955100,"byte_end":8955103,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":329}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":4267}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955618,"byte_end":8955624,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":330}},"from":{"krate":2,"index":31890},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8955713,"byte_end":8955719,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":331}},"from":{"krate":2,"index":31890},"to":{"krate":0,"index":4267}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8956797,"byte_end":8956802,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":332}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8956850,"byte_end":8956855,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":333}},"from":{"krate":19,"index":341},"to":{"krate":0,"index":4267}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957255,"byte_end":8957263,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":334}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":4196}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/collect.rs","byte_start":8957311,"byte_end":8957319,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":335}},"from":{"krate":19,"index":535},"to":{"krate":0,"index":4267}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958580,"byte_end":8958585,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958616,"byte_end":8958621,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8958652,"byte_end":8958657,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4728},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/empty.rs","byte_start":8959200,"byte_end":8959205,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4728},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8959819,"byte_end":8959825,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7456},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8960043,"byte_end":8960049,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter.rs","byte_start":8960168,"byte_end":8960174,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7456},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961260,"byte_end":8961269,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":7411},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961490,"byte_end":8961499,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":7411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/filter_map.rs","byte_start":8961621,"byte_end":8961630,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":7411},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8962702,"byte_end":8962712,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":7383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fold.rs","byte_start":8962908,"byte_end":8962918,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":7383},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8963817,"byte_end":8963821,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":7335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/fuse.rs","byte_start":8963981,"byte_end":8963985,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":7335},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8964919,"byte_end":8964923,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4735},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/iter.rs","byte_start":8965585,"byte_end":8965589,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4735},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966294,"byte_end":8966297,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":7268},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966486,"byte_end":8966489,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":7268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/map.rs","byte_start":8966610,"byte_end":8966613,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":7268},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8967458,"byte_end":8967463,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/merge.rs","byte_start":8967717,"byte_end":8967722,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7219},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969234,"byte_end":8969238,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4741},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969272,"byte_end":8969276,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/next.rs","byte_start":8969417,"byte_end":8969421,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4741},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8969908,"byte_end":8969912,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4749},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/once.rs","byte_start":8970539,"byte_end":8970543,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4749},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971078,"byte_end":8971085,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4755},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971116,"byte_end":8971123,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4755},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971154,"byte_end":8971161,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4755},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/pending.rs","byte_start":8971854,"byte_end":8971861,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4755},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8977526,"byte_end":8977535,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8984536,"byte_end":8984545,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/stream_map.rs","byte_start":8986084,"byte_end":8986093,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4762},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987309,"byte_end":8987313,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7182},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987523,"byte_end":8987527,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip.rs","byte_start":8987660,"byte_end":8987664,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7182},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8988890,"byte_end":8988899,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":7137},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8989120,"byte_end":8989129,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":7137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/skip_while.rs","byte_start":8989314,"byte_end":8989323,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":7137},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990672,"byte_end":8990679,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4774},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990713,"byte_end":8990720,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/try_next.rs","byte_start":8990927,"byte_end":8990934,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4774},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991544,"byte_end":8991548,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7100},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991758,"byte_end":8991762,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take.rs","byte_start":8991895,"byte_end":8991899,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":7100},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993418,"byte_end":8993427,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":7051},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993687,"byte_end":8993696,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":7051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/take_while.rs","byte_start":8993889,"byte_end":8993898,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":7051},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":9025123,"byte_end":9025130,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":7028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/timeout.rs","byte_start":9025485,"byte_end":9025492,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7028},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8924289,"byte_end":8924295,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":68},"to":{"krate":0,"index":4669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/stream/mod.rs","byte_start":8948048,"byte_end":8948050,"line_start":819,"line_end":819,"column_start":32,"column_end":34},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4704},"to":{"krate":0,"index":4669}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9070950,"byte_end":9070961,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9076888,"byte_end":9076899,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4939},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9076985,"byte_end":9076996,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4939},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9077129,"byte_end":9077140,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4939},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9077165,"byte_end":9077176,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4939},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/task/atomic_waker.rs","byte_start":9077272,"byte_end":9077277,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":2,"index":9238},"to":{"krate":0,"index":4962}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044169,"byte_end":9044178,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":4985},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044340,"byte_end":9044349,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":4985},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044418,"byte_end":9044430,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9044729,"byte_end":9044741,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4997},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9046552,"byte_end":9046558,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9052497,"byte_end":9052503,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9052642,"byte_end":9052650,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9057005,"byte_end":9057013,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4979},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9057160,"byte_end":9057168,"line_start":515,"line_end":515,"column_start":20,"column_end":28},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4979},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9057631,"byte_end":9057636,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9061841,"byte_end":9061846,"line_start":673,"line_end":673,"column_start":31,"column_end":36},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4836},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9061883,"byte_end":9061888,"line_start":674,"line_end":674,"column_start":31,"column_end":36},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4836},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9061913,"byte_end":9061918,"line_start":676,"line_end":676,"column_start":18,"column_end":23},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4836},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9062287,"byte_end":9062292,"line_start":694,"line_end":694,"column_start":36,"column_end":41},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4836},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9062687,"byte_end":9062692,"line_start":709,"line_end":709,"column_start":6,"column_end":11},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":5010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/oneshot.rs","byte_start":9064405,"byte_end":9064410,"line_start":775,"line_end":775,"column_start":21,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5010},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9082016,"byte_end":9082021,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9092003,"byte_end":9092009,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/block.rs","byte_start":9092491,"byte_end":9092497,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5048},"to":{"krate":2,"index":2312}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9093135,"byte_end":9093141,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5102},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9093273,"byte_end":9093279,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5102},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9093686,"byte_end":9093694,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":5111},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9095466,"byte_end":9095474,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":5111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9097902,"byte_end":9097910,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":5111},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9097970,"byte_end":9097978,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":5111},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/bounded.rs","byte_start":9098166,"byte_end":9098172,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":5102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9109562,"byte_end":9109564,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5176},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9109965,"byte_end":9109967,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9110274,"byte_end":9110283,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5601},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9110545,"byte_end":9110557,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5608},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9112252,"byte_end":9112256,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9112889,"byte_end":9112897,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5221},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9113163,"byte_end":9113167,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9113216,"byte_end":9113220,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9113699,"byte_end":9113701,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9114399,"byte_end":9114401,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9114549,"byte_end":9114551,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9114729,"byte_end":9114731,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5176},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9115131,"byte_end":9115133,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5176},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9115542,"byte_end":9115544,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9118515,"byte_end":9118517,"line_start":341,"line_end":341,"column_start":21,"column_end":23},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5185},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9118953,"byte_end":9118957,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9119421,"byte_end":9119425,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5209},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9119974,"byte_end":9119986,"line_start":401,"line_end":401,"column_start":32,"column_end":44},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5588},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/chan.rs","byte_start":9121476,"byte_end":9121487,"line_start":468,"line_end":468,"column_start":20,"column_end":31},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":438},"to":{"krate":0,"index":5199}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9124204,"byte_end":9124206,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9129910,"byte_end":9129912,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5333},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9130189,"byte_end":9130191,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/list.rs","byte_start":9133590,"byte_end":9133592,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5337},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9134266,"byte_end":9134281,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5373},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9134422,"byte_end":9134437,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5373},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9134895,"byte_end":9134912,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5382},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9135890,"byte_end":9135907,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9138379,"byte_end":9138396,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5382},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/unbounded.rs","byte_start":9138562,"byte_end":9138577,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9139429,"byte_end":9139438,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5601},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9139598,"byte_end":9139607,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5601},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140093,"byte_end":9140105,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5608},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140138,"byte_end":9140150,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5608},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140490,"byte_end":9140502,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5608},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140731,"byte_end":9140740,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5619},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9140870,"byte_end":9140879,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5619},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141365,"byte_end":9141377,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5624},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141683,"byte_end":9141695,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5624},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141852,"byte_end":9141863,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9141962,"byte_end":9141973,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5634},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9142103,"byte_end":9142114,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5634},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9142618,"byte_end":9142634,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5644},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/mpsc/error.rs","byte_start":9142671,"byte_end":9142687,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5644},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9147504,"byte_end":9147513,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9163585,"byte_end":9163594,"line_start":577,"line_end":577,"column_start":15,"column_end":24},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5467},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9163673,"byte_end":9163682,"line_start":583,"line_end":583,"column_start":21,"column_end":30},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5467},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9164060,"byte_end":9164069,"line_start":594,"line_end":594,"column_start":22,"column_end":31},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5467},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9164094,"byte_end":9164103,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5467},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9164141,"byte_end":9164147,"line_start":599,"line_end":599,"column_start":6,"column_end":12},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9170553,"byte_end":9170559,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5655},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9170632,"byte_end":9170638,"line_start":798,"line_end":798,"column_start":15,"column_end":21},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":5655},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171060,"byte_end":9171072,"line_start":814,"line_end":814,"column_start":6,"column_end":18},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171252,"byte_end":9171264,"line_start":824,"line_end":824,"column_start":23,"column_end":35},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5660},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171408,"byte_end":9171420,"line_start":830,"line_end":830,"column_start":28,"column_end":40},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5660},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9171467,"byte_end":9171482,"line_start":834,"line_end":834,"column_start":6,"column_end":21},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9172012,"byte_end":9172027,"line_start":853,"line_end":853,"column_start":23,"column_end":38},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5665},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9172325,"byte_end":9172340,"line_start":862,"line_end":862,"column_start":28,"column_end":43},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5665},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9172378,"byte_end":9172384,"line_start":866,"line_end":866,"column_start":6,"column_end":12},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9177797,"byte_end":9177805,"line_start":1033,"line_end":1033,"column_start":6,"column_end":14},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9181468,"byte_end":9181476,"line_start":1171,"line_end":1171,"column_start":21,"column_end":29},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5678},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/sync/semaphore_ll.rs","byte_start":9181829,"byte_end":9181840,"line_start":1187,"line_end":1187,"column_start":6,"column_end":17},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/yield_now.rs","byte_start":9195555,"byte_end":9195563,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5726},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9202660,"byte_end":9202668,"line_start":220,"line_end":220,"column_start":6,"column_end":14},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9210446,"byte_end":9210454,"line_start":444,"line_end":444,"column_start":21,"column_end":29},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9210593,"byte_end":9210601,"line_start":450,"line_end":450,"column_start":17,"column_end":25},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9211566,"byte_end":9211574,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9211655,"byte_end":9211663,"line_start":480,"line_end":480,"column_start":15,"column_end":23},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9212530,"byte_end":9212538,"line_start":510,"line_end":510,"column_start":28,"column_end":36},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":6982},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9213423,"byte_end":9213429,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/local.rs","byte_start":9213992,"byte_end":9213995,"line_start":560,"line_end":560,"column_start":25,"column_end":28},"kind":{"Impl":{"id":488}},"from":{"krate":5,"index":4214},"to":{"krate":0,"index":3734}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9217439,"byte_end":9217447,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219223,"byte_end":9219231,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5826},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219439,"byte_end":9219447,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5826},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9219768,"byte_end":9219783,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6905},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220084,"byte_end":9220089,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":5854},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220707,"byte_end":9220708,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":5867},"to":{"krate":0,"index":5865}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9220893,"byte_end":9220904,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":5886},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9221048,"byte_end":9221059,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":5886},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/task/task_local.rs","byte_start":9221206,"byte_end":9221217,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":5886},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/clock.rs","byte_start":9224736,"byte_end":9224741,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9235114,"byte_end":9235124,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9252732,"byte_end":9252742,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":2075}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9252770,"byte_end":9252780,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6383},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9252917,"byte_end":9252927,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6383},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9253309,"byte_end":9253314,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6408},"to":{"krate":0,"index":6327}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255441,"byte_end":9255446,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6408},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255576,"byte_end":9255579,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay_queue.rs","byte_start":9255666,"byte_end":9255673,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9257775,"byte_end":9257780,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/delay.rs","byte_start":9258758,"byte_end":9258763,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6425},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9271813,"byte_end":9271824,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9273802,"byte_end":9273820,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/atomic_stack.rs","byte_start":9274392,"byte_end":9274410,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6433},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9278362,"byte_end":9278367,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9284595,"byte_end":9284600,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6437},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9284808,"byte_end":9284813,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6437},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/entry.rs","byte_start":9284838,"byte_end":9284843,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6437},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9285220,"byte_end":9285226,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/handle.rs","byte_start":9285871,"byte_end":9285877,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6461},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9286322,"byte_end":9286334,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/registration.rs","byte_start":9287159,"byte_end":9287171,"line_start":49,"line_end":49,"column_start":15,"column_end":27},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6465},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9287455,"byte_end":9287460,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6469},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/stack.rs","byte_start":9287551,"byte_end":9287556,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6469},"to":{"krate":0,"index":6327}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9263381,"byte_end":9263387,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9267034,"byte_end":9267040,"line_start":229,"line_end":229,"column_start":18,"column_end":24},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6473},"to":{"krate":0,"index":537}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9269029,"byte_end":9269035,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6473},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9269512,"byte_end":9269517,"line_start":322,"line_end":322,"column_start":6,"column_end":11},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/driver/mod.rs","byte_start":9271134,"byte_end":9271139,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6141},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9291828,"byte_end":9291833,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292548,"byte_end":9292553,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6482},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/error.rs","byte_start":9292580,"byte_end":9292585,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6482},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9293291,"byte_end":9293298,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297072,"byte_end":9297079,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297208,"byte_end":9297215,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":532}},"from":{"krate":1,"index":8158},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297330,"byte_end":9297337,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297502,"byte_end":9297509,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":2130}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297614,"byte_end":9297621,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":2104}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297762,"byte_end":9297769,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":2104}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9297930,"byte_end":9297937,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":2134}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/instant.rs","byte_start":9298044,"byte_end":9298051,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6494},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9300776,"byte_end":9300784,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/interval.rs","byte_start":9302079,"byte_end":9302087,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6517},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305309,"byte_end":9305316,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305445,"byte_end":9305452,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9305990,"byte_end":9305997,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6522},"to":{"krate":2,"index":9053}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9306798,"byte_end":9306805,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6529},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9306949,"byte_end":9306956,"line_start":179,"line_end":179,"column_start":28,"column_end":35},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6529},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/timeout.rs","byte_start":9306993,"byte_end":9306998,"line_start":181,"line_end":181,"column_start":33,"column_end":38},"kind":{"Impl":{"id":546}},"from":{"krate":1,"index":2659},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325138,"byte_end":9325146,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/throttle.rs","byte_start":9325961,"byte_end":9325969,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6882},"to":{"krate":20,"index":68}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9316902,"byte_end":9316907,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/level.rs","byte_start":9321659,"byte_end":9321664,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6300},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/stack.rs","byte_start":9322780,"byte_end":9322787,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2022},"to":{"krate":0,"index":6327}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9308723,"byte_end":9308728,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/time/wheel/mod.rs","byte_start":9314436,"byte_end":9314440,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9326802,"byte_end":9326806,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/bit.rs","byte_start":9328280,"byte_end":9328284,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6779},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/addr.rs","byte_start":9335503,"byte_end":9335510,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/entry.rs","byte_start":9338145,"byte_end":9338152,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2022},"to":{"krate":0,"index":6634}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/generation.rs","byte_start":9338539,"byte_end":9338549,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9339688,"byte_end":9339693,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9340035,"byte_end":9340041,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9343993,"byte_end":9343998,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6657},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/page.rs","byte_start":9344304,"byte_end":9344310,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6659},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9346453,"byte_end":9346458,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/shard.rs","byte_start":9348137,"byte_end":9348142,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6703},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/slot.rs","byte_start":9348519,"byte_end":9348523,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9349494,"byte_end":9349507,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6747},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/stack.rs","byte_start":9350335,"byte_end":9350348,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6747},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9329882,"byte_end":9329886,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6762},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9329923,"byte_end":9329927,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6762},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9329950,"byte_end":9329954,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/slab/mod.rs","byte_start":9331469,"byte_end":9331473,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6762},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174394,"byte_end":174404,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":174463,"byte_end":174473,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175762,"byte_end":175770,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":766},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175807,"byte_end":175815,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":766},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":175869,"byte_end":175879,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":178883,"byte_end":178893,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":752},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180231,"byte_end":180239,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/linked_list.rs","byte_start":180438,"byte_end":180446,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":766},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/rand.rs","byte_start":190518,"byte_end":190526,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192066,"byte_end":192070,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":807}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192073,"byte_end":192077,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":807}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/wake.rs","byte_start":192388,"byte_end":192396,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6834},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":194854,"byte_end":194862,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195112,"byte_end":195120,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6841},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195225,"byte_end":195233,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6841},"to":{"krate":2,"index":2244}},{"span":{"file_name":"/home/alexis/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.21/src/util/intrusive_double_linked_list.rs","byte_start":195542,"byte_end":195552,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6850},"to":{"krate":4294967295,"index":4294967295}}]}